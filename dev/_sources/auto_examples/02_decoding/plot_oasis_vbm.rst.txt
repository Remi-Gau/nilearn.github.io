
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ffb21900820>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 177.63376235961914 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.33391809463501 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.22863459587097 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.496719757715862 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.975137948989868 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.58958888053894 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.306134223937992 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.39067591939654 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.12030029296875 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.911434994803532 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.728869915008545 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.533731612292204 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.30445877710978 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.105735356991108 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.14580971854074 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.94913450876872 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.75740361213684 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.58368004069609 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.40139004919264 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.216233554639317 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.049190759658813 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.929711898167927 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.88003195415844 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.700972297917243 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.54070742925008 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.382051706314087 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.223281053396374 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.064713177857577 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.92425356592451 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.849747065840095 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.686175266901653 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.525749321906794 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.36564576625824 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.207863208019372 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.052748399622303 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.89887891496931 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.746089961793686 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.650595639203043 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.494659298344665 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.348649966411102 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.204405784606934 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.056230463632723 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.91400757290068 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.767184080079545 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.668635563416913 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.515373256471424 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.369610973026443 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.22294381324281 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.072082797686257 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.93093553367926 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.784817457199097 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.67191201097825 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.52277792417086 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.37811783574662 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.23455388457687 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.08825273947282 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.939214433942524 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.791925902952226 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.640736916969562 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.52449607849121 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.376776377360027 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.254821437304138 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.107864964392874 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.961137813235084 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.81430333852768 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.678938902341404 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.562582124363292 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.41652068807118 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.27267568251666 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.13070577469425 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.987045254026143 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.84590327907616 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.70259348551432 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.56113398891606 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.440701832642425 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.298280398050945 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.157644585559243 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.014694898159473 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.870192870115623 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.727256104915956 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.582719326019287 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.46279862486286 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.32226207779675 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.18133855727782 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.041286320913404 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.89820877243491 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.757098297740137 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.617598774789395 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.476972449909557 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.352236471819074 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.208749082353382 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.065587730198116 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.922264420467876 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.779891162790278 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.642745220914799 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.499149397799844 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.370386819044748 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.230260266471156 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.086438602330734 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.944880088170368 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.804291009902954 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.662559669796783 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.5205689832276 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.389028225130248 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.252865938039927 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.112581434704008 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.972182903649673 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.83105165044838 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.69030518885012 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.553495022135044 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.414039503444325 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.28710549156945 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.148457561220441 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.008440340514731 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.867766087515312 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.728180066398952 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.588693890078314 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.44817206594679 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.316999661720406 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.177380511740678 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.036987463633219 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.897384755867572 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.758083347414361 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.61857311124724 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.478231953036401 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.338352346420288 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.206852038701376 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.068821266880185 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.929849445819855 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.789935869763987 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.650708583685068 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.5107241495875 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.371689131765654 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.240013022171825 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.10120378679304 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.961571984820894 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.822356728946462 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.683332859164606 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.543953632962877 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.404499695455428 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.265631403241839 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.132312911622067 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.993882746763632 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.855280439336816 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.717300203111437 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.578236259263137 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.439583327672253 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.301364249923602 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.16702193182868 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.0293462292459985 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.891060670216878 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.752870021276916 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.614982454400313 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.477364259607652 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.338734905441086 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.204328560060071 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.065872216836 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.927727966551568 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.789580254615107 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.651164803115077 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.513106405735016 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.374800597658809 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.237055960996651 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.101336779038599 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.962947391882175 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.824824896725741 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.687687239014958 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.549429319575875 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.4109585625784735 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.272664901067519 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.136596862007591 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.998508408752798 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.860403193983921 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.722435532277719 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.584431023433291 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.446288892201015 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.308019551363858 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.169929181115102 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.033277782161584 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.895136104615707 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7570606337653265 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.618805449311904 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.480691055675129 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.342633229135816 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2047894933949346 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0678640700675346 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9299560080292404 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7919295892358464 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6540794930559521 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5161520085006794 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3781480287250718 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2402604587415127 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1027913490931192 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9648820180349399 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8270008563995361 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6891653109819461 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5513043938850869 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.413520950956393 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27567374585854887 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13783521508451682 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 9.232 seconds)

**Estimated memory usage:**  1889 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
