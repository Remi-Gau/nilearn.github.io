
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f24efa1c3a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 154.83379364013672 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.140133380889893 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.281573057174683 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 25.434548377990726 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.93089771270752 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.626873016357422 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 24.300570170084637 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.066699266433716 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.827354431152344 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.558263328340317 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.34204602241516 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.11028330976313 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.09883689880371 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.92194489332346 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.76170461518424 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.630335092544556 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.48663103580475 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.341654412886676 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.21426084306505 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.066594851644417 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.995573043823242 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.848547606241134 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.70964977957986 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.5719256401062 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.50081698099772 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.385262489318848 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.25444771693303 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.122708806285154 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.991396869931904 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.913485576366554 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.78820824623108 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.662296372075232 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.53839647769928 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.410581278078485 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.28406009954565 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.155378103256226 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.02388554149204 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.924241214185148 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.795793144326463 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.663908775036155 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.528809547424316 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.39814090147251 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.281313555581228 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.146966507268505 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.013835408470847 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.915519449445938 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.91008219511613 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.774324158404735 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.641793966293335 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.519673245293752 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.391935110092163 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.263777078366747 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.135519889684826 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.02520447856975 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.903267074514318 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.77342987060547 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.643852302006316 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.519034414960625 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.385366423376674 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.2505462856616 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.119302590688072 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.987142515964194 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.8846789790738 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.760302343065774 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.63071909546852 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.508115896811855 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.38397025339531 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.289994424848413 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.170424713807947 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.054219784943953 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.959218808582852 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.83742709898613 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.720959133572048 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.598295352230334 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.470966983485866 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.345316330591839 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.214652312429328 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.086926999030174 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.974570836776342 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.849014478393748 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.719940543174744 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.594373717720126 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.469163557378257 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.345502109412687 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.221649612699236 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.100199951845058 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.990574964257172 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.866789631459906 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.744279861450195 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.618109167291877 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.4928195476532 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.368212849229247 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.246915806894718 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.126622579431022 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.005473157192798 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.893037519956891 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.767534911632538 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.644211739608922 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.522634593807922 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.397106695656824 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.271535873413086 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.145871832819267 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.019570042105283 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.904132641634895 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.7777707026555 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.65058828535534 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.525221383796548 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.399043359489085 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.272475569336503 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.147406814295218 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.022601929577915 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.904465048162788 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.779459578650338 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.655076052235291 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.530416212583843 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.407202824302342 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.283013656221588 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.1597524402488 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.036520077010334 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.937762643108849 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.814667701721191 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.688587777870746 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.570191895375487 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.448981882110843 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.323431491851807 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.197756624221801 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.073413425021702 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.949669378010306 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.831852182745934 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.706649109374645 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.582586930348322 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.458612138078413 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.335090261517148 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.212613745739587 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.088892082669842 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.965607086817423 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.848171458524816 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.725499840548439 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.602451376293017 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.4793897258292 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.35641496522086 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.232633362425134 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.109450068272336 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.985324949651331 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.866341047816807 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.742805727596941 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.6196526664577116 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.497138573198902 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.374693934981888 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.252130119592551 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.1303798357645665 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.006905448357791 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.884823046232524 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.76508355140686 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.6419703341149665 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.518888073582803 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.3960508566636305 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.27281538847905 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.149273015275786 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.026008904355127 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.903031587600708 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.782063476787591 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.6592253343558605 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.536290148284538 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.413593199194931 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.2909086834300645 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.168416930968503 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.04600743904799 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.923550060817173 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.80196841087567 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.6789379540611717 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.556700074881838 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.434014775032221 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.3111716612226014 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.188480823889546 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.065493856157575 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.9424657388166944 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8209571488159524 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6979339363869657 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.575435742319629 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.452957444720798 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.330588866333935 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.207935299192156 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0851677271837747 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9624167110608972 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8398360175055428 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7178193317946568 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.595121798030833 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.472352382984567 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.349691701313806 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2269083324231598 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1041606234006234 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9814279675483704 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8587620369510947 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7363209994797855 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6135968000460893 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4908451206830083 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3681322233325939 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24544139823528252 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12272105983753301 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.020 seconds)

**Estimated memory usage:**  1832 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
