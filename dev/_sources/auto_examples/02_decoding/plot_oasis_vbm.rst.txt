
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f5629f71580>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 263.69333267211914 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 51.71096158027649 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.64149856567383 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 43.13472215334575 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 42.01979351043701 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 41.28168797492981 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 41.55326978365581 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 40.85683723858425 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 40.39995574951172 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 39.9679086473253 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 39.771977186203 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 39.71565927158703 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 39.308283964792885 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 39.120735553594734 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 38.7429849079677 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 38.46334067980449 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 38.33583843708038 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 38.07839824171628 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 37.78354186481899 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 37.63794651784395 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 37.352826833724976 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 37.26699940363566 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 36.985039320859045 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 37.049595221229225 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 36.78054189682007 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 36.51050019264221 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 36.34903120994568 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 36.10105539251257 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 35.863208634512766 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 35.6158694892094 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 35.35548218091329 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 35.275723157390466 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 35.01060354709625 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 34.773708488001965 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 34.50936146343456 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 34.31213654790606 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 34.129366821712914 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 33.91429472613979 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 33.67172004047193 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 33.408782347654686 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 33.14488983154297 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 32.99399944049556 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 32.73838826588222 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 32.511769522068114 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 32.271881103515625 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 32.047983725865684 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 31.88195764500162 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 31.626647655000077 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 31.45262110233307 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 31.201995689041762 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 30.984155416488647 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 30.83063380858477 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 30.608011960983276 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 30.429076586129533 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 30.226722364072447 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 30.024020411751486 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 29.871396405356272 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 29.686074403294345 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 29.48250755770453 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 29.278362084243255 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 29.070362170537315 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 28.92264334881892 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 28.71560828147396 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 28.50247428152296 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 28.295936584472656 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 28.08384501017057 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 27.914353334542476 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 27.72271090834888 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 27.51854968070984 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 27.313840168109838 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 27.102508544921875 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 26.933132010446467 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 26.734057532416447 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 26.53548781185934 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 26.32163674766953 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 26.11858089764913 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 25.952462899057487 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 25.75437540822215 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 25.583859871595333 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 25.373201044299933 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 25.201714038848877 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 24.989832207008646 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 24.7783305644989 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 24.55888781202845 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 24.340020259221394 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 24.162057399749756 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 23.946483235026513 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 23.726295701388658 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 23.512262257662687 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 23.298289398129064 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.119176599714493 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 22.898715152845277 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 22.694414159525998 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 22.480048748754687 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 22.26463507084136 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.077188240854365 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 21.865447799364723 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 21.664489711682823 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 21.453484530351602 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.2344326852548 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.04072070121765 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 20.832955959999914 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 20.621425567888746 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 20.407293886814305 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.195629780109112 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.00831059047154 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 19.796120751578854 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 19.582747555224696 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 19.37459890930741 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.173949613483675 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 18.98095913366838 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 18.768876889804464 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 18.556083049092972 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.34208156366264 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.13530655074538 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 17.94420928540437 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 17.737816720173278 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 17.532646863888473 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.3189789602312 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.123888151986257 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 16.90979735056559 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.69736305544199 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.48753428850018 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.277282615987264 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.083853129417665 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 15.869684028625487 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.654684819872418 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.446557397917498 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.232491239905357 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.032364266787388 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 14.825358189069307 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.613260928001113 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.399785063483497 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.188802848184917 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 13.988382093941986 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 13.771998793990523 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.557911367977367 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.347300752236025 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.13488341068876 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 12.929283469700984 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.711742503302437 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.495454884589986 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.280085734918083 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.069969177246094 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 11.867136319478353 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.653587464628547 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.438521786911846 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.22357743937953 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.010355227702373 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 10.804194290365949 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.589224497477213 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.374478798038911 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.16032610441509 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.94653449027367 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.74290622364391 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.529984081945113 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.316710368180885 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.104256607165002 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.892604622659803 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.686368447429729 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.474108695983887 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.263388601149092 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.051958131201474 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.8454676127872585 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.632898057379374 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.423703056393248 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.2103401925190385 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.997302249520125 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.788540703909737 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.575426451553255 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.362690322539386 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.150811320856998 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.938508205635603 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.729713849249603 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.517262532793243 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.30445875440325 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.092208114537326 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.879190005825064 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.6703861375873 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.457452165347904 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.244804859161377 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.032250470219396 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.819259219117217 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.6090650662698383 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.3969515924868374 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.1848776598234436 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.9723652152604956 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.7598441399354985 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.5490742338464614 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.336904274723517 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.124936819076538 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9127764939013576 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.701128621896108 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.4886204764015316 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.2760926202400444 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0633558248862243 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8505365167345319 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.638298377167755 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4255012358077849 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21269937376281126 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  32.030 seconds)

**Estimated memory usage:**  1863 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
