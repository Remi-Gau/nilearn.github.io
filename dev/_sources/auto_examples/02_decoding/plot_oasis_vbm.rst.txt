
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff4cbf101f0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 153.43427658081055 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.857497215270996 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.01616907119751 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.261004606882732 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.831106662750244 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.532174348831177 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.302462577819824 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.454913071223668 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.26178550720215 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.067765792210896 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.891319513320923 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.746889742937956 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.58701229095459 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.43453805263226 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.290030377251764 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.140491724014282 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.160547375679016 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.044870853424072 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.909884638256496 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.771298320669878 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.640151977539062 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.526698929922922 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.393731984225187 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.261321161104288 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.168635368347168 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.139739990234375 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.00807740138127 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.88054096257245 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.748667137963434 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.628512859344482 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.497303009033203 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.36981705696352 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.258846163749695 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.138687603401415 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.088544200448432 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.971570083073207 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.84458613395691 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.729415700242324 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.608942420859087 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.485582577876556 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.360459327697754 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.23357810043707 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.11904906091236 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.05583805261656 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.932801203294233 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.809729258219402 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.68801229933034 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.564452262634926 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.44569913546244 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.32760867780569 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.207860708236694 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.08775052837297 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.006607679220348 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.894917632048983 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.77435405166061 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.654539303346112 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.53427117211478 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.412941175594664 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.29414786141494 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.175832958544714 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.0967435836792 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.98324326609002 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.861532826577463 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.741885677216544 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.620923280715942 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.50138282775879 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.425449631430887 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.316051283879066 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.198192105573765 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.11690026089765 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.007559197289604 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.88958142844724 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.7687136332194 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.648611081789618 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.529532786962148 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.408469200134277 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.297676098974128 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.17953745420877 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.088357277405567 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.970903625971154 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.858405709266663 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.740425292356516 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.621363436303486 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.503355204340924 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.385062524250575 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.268959466148827 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.150501711424006 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.086159286827877 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.969386837699197 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.852535984489355 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.73514739672343 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.616514224272507 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.498597684113877 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.37873323245715 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.260261424044344 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.156844101454084 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.043323795000711 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.924936412535992 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.80628574137785 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.688686122797955 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.574669122695923 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.456353206445675 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.338722042008943 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.220674412921795 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.116647500258226 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.999738874889555 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.881245721061275 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.763620089147693 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.645564141096893 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.53657089679613 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.419019070538608 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.301217727832967 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.18356658731188 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.07485761684654 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.957855203695464 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.839830574781997 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.722508159177057 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.605241105087803 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.490613743410272 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.373508379238995 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.25779930750529 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.140742747251654 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.032119344492429 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.914687371835475 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.796353632403958 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.679505920410156 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.561801460054186 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.444510902945451 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.330040112137794 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.213799223419308 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.09730841563298 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.988271878875849 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.871238542325568 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.753770358580396 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.637089021170317 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.520154546808313 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.403373381670783 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.287354208257076 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.170976804650348 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.054965165021608 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.946131501879011 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.829710907969915 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.712882626224571 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.595882450784003 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.479002687666151 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.3620710372924805 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.245686534332902 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.12990224929083 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.014592022509189 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.90412600248452 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.787906010945638 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.6718901214220665 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.556158442246286 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.4404399644315635 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.325525014431445 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.209560640396611 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.0935462866074 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.981898921310522 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.8658594753168805 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.748960225087291 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.632303774356842 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.515528446398907 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.398985965752307 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.282534217541935 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.166136363657509 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.049909468853112 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.936214070722281 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8198987866590124 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7036005655924478 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.587301494101801 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4710206003750073 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3552188357414554 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2390819205794226 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.123097261252431 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0072266945893737 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8934790747506276 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.777354543859308 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6613831600900424 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.545294649145576 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4292318194938107 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3137170473734536 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.197805207078628 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0819921572129805 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.966075179355392 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8513319803320842 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.73543127807411 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6194605263330604 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5035435273685558 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3878170987392993 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.272075058921935 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1564464820058722 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0407185554504395 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9249591032663981 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8096988744686304 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6939445303887436 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5789827505747477 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4631149768829345 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.34730768324760014 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23151184091664326 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11574789147880209 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.112 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
