
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc9d9b16490>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 221.62914276123047 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.21466779708862 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.66854286193848 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.854631185531616 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.378369092941284 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.91704535484314 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.57998625437419 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.35261460712978 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.310808181762695 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.06204515033298 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 31.841710090637207 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 31.616973183371808 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.388084252675373 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.166997047571037 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 30.970303058624268 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.73120403289795 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 30.493801712989807 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.263736879124362 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.09875037935045 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.92355729404249 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.69870352745056 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.519412029357184 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.363660227168694 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.177357694377072 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.015662511189777 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.88369345664978 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.7572413958036 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.7579471093637 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.60116859844753 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.415443428631484 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.266162395477295 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.179578973400975 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.046616554260254 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.867862166780412 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.71302742116592 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.554064989089966 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.43999989827474 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.305870468552047 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.14233043319301 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.954696129529907 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.751419067382812 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.555549592506594 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.38267044793992 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.2470798603324 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.142627564343538 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.016484181086224 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.85088060213172 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.698271873149466 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.536576469739277 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.383606501988 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.24048161506653 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.090792361427756 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.896993215267475 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.721515385609752 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.535411190103602 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.36123828454451 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.22791031428746 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.042220412639146 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.881645391727314 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.717444949230902 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.564616998036705 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.39112476051831 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.224090553099106 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.055909663911848 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.88807639479637 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.7328959611746 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.55580724369396 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.387657674390876 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.22020234781153 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.035000120384105 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.869186537606375 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.70661430963328 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.552349514431423 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.384057482627973 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.206057832047744 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.032324632008873 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.86938026076869 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.70392396542933 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.529486815134685 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.36240997797326 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.188918232917786 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.011824949288076 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.8413820092271 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.681536008076495 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.515552827290126 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.364531853619745 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.20045568776685 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.04653624830575 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.871100989255037 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.7033534237508 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.533186276753746 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.3805403473613 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.208289716554727 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.036184146840085 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.85762343508132 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.678522812692744 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.501984020074207 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.321858342160883 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.143548955722732 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.965507781866823 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.790430068969727 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.614832290328376 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.439408694996555 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.26231634732589 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.086565457857574 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.912983496983847 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.737745379501918 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.562527587480634 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.39380372895135 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.221861388705193 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.052429415962914 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.881948554838026 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.707991106169564 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.53333777452992 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.36060401013023 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.187806367874144 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.015160848354471 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.842200042855026 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.67016970909248 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.497558207071128 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.325129191080729 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.153791159637704 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.98270826652402 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.818066748177133 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.65191908805601 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.482506942749023 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.314067064769684 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.14490389072989 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.977040782570839 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.808593668678935 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.640128154021042 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.47227658024271 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.302741397510875 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.135090223828653 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.966346740722656 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.798435802812929 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.63099748948041 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.463194354607241 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.29577560701232 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.142159278444248 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.974294287817818 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.806073971673952 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.638732117666326 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.470962145945409 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.303868280516731 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.139083591000787 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.97440931568407 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.807102161199868 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.639000576895636 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.471411306586042 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.303180456161499 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.135809778377709 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.9680623004311 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.801339378543929 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.633617580711067 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.466359884508195 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.298929067758413 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.132065996242936 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.965766526475736 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.798655240040905 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.631909132003784 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.465668718266932 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.2993623768841776 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.133245370139373 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.966576099395752 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.80010791980859 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.633549552365958 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.467687865217289 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.301638421558198 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.135447242556239 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.9693901118110215 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.803222178018581 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.636903369149497 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.470850136927787 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.304584659379104 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.138788802283151 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.9725012670863755 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.8067514034314343 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.640687334403563 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.474768845062682 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.30871139632331 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.142772073903795 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.9773842659625376 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.811684512049774 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.6460081183392066 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.4803262852333687 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3147134037428008 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.149011905180579 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.983389504412387 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.81781137304962 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.652388999336644 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4869211181920237 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3216436703999836 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1563058912445225 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9909798410749927 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8257545263339311 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6605091192284408 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4953290593200529 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.33018678125708995 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16507176897633616 seconds remaining)
    1960 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  23.345 seconds)

**Estimated memory usage:**  1913 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
