
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f91f82adfa0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 387.4397277832031 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 54.17180681228638 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 49.88789892196655 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 47.82037401199341 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 46.768990993499756 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 46.55950999259949 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 45.74281565348308 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 45.820583650044036 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 45.432729721069336 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 46.307544999652436 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 45.77277421951294 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 45.46605517647484 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 44.922595183054604 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 44.55601129165063 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 44.30728432110378 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 43.858183066050216 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 43.455761432647705 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 43.086752246407904 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 43.00641526116265 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 42.61107472369546 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 42.2679169178009 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 41.97238855134873 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 41.64002464034341 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 41.5214505299278 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 41.193864027659096 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 40.93030261993408 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 40.624935150146484 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 40.55847593590065 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 40.240541219711304 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 39.922729648392774 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 39.624506155649826 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 39.30966330343677 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 39.141348123550415 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 38.88374124151288 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.65758001103121 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 38.419902665274485 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 38.25176649623447 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.966689303114606 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.66863588282937 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 37.42518559480325 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 37.15073871612549 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.97531112228952 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.71685146150135 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 36.44408019753389 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 36.19455008073287 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.988725635740494 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.73694501752439 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 35.47852017524394 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 35.21331409613291 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.953151576373045 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.741262912750244 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 34.50839851884281 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 34.26347756385803 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 34.00177760394114 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.80267796693025 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.55443247881802 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 33.307998929704944 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 33.06888302585535 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.86556475737999 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.694005691399006 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.436944007873535 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 32.18253607437259 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.933366298675534 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.729153958577957 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.470444828271866 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 31.212463232187126 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.95885427792867 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.706375609582928 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.49695106113658 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 30.262006939321324 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 30.017356191362655 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.771521074671142 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.571828206380207 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.324809381406602 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 29.083975031569196 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.83827646573385 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.60145442109359 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.40607832933401 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 28.186479978072338 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.942874651920945 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.70431697368622 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.503920019408806 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 27.26022378409781 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 27.025024971330023 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.772066933768137 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.53372944102568 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.32110630079757 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 26.07587677308883 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.830771446228027 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.598282511314647 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.382902330822418 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 25.141511455997005 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.903759334398355 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.66017709752565 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.424749440335212 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.207799070759826 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.97274621327718 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.739056444659674 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.502408290395934 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.285875708165793 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 23.0433189868927 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.808205807563102 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.573642001432532 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.335281247074164 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 22.12965334378756 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.905184405190603 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.6740736061672 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.43762134837213 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.216397409085875 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.97913601639074 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.73739580674605 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.508445058857 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.272766624178203 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 20.0510147398552 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.82513651513217 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.587444657864776 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.35408852018159 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.130898147566707 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.899088956541934 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.66296729119886 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.436579386393227 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.208090683645455 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.98726776779675 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.75612689615265 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.52102163530165 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.289039945602415 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 17.07619050570897 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.836798955136395 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.601761490106583 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.367478799450303 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.13444817983187 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.910320920798615 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.678633877725312 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.444346314982365 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.209593395688639 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.987766672063756 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.757638819077435 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.523310462923815 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.289766142333763 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.055552477459255 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.829932042530604 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.595799745397365 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.364381917765444 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.135542609474875 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.912935826513502 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.678678775655811 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.447525256300626 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.213441907143107 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.980364909043184 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.754015684127808 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.52249264717102 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.295094347947481 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.061774881262528 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.833098865022848 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.602466871212055 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.374862547843687 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.14212472622211 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.909688314814476 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.682616535621353 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.451859457687762 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.218899309635162 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.985879741100051 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.759750369154377 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.529126718731746 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.29697271091182 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.066595597700639 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.8355515261730515 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.610402669735298 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.381805102030436 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.151954370137502 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.921845239751479 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.692907216256125 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.461535049039265 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.230825260195429 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.99907720225981 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.7675942693437845 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.5409076105464585 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.308872946238114 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.077621786781911 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.846231211497131 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.617012235853407 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.385710114273577 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.154080372590285 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.9235285396784385 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.692029579826023 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.462955732603331 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.232025033684187 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.001632286265572 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.770210230604131 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.54018303326198 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.309285828941747 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0779749885279473 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8467226326465607 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.615858674667042 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3854206984805078 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1546239241575582 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9238507455709029 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6928010241029227 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4621463399944884 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.23105715387430623 seconds remaining)
    1959 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  37.439 seconds)

**Estimated memory usage:**  1926 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
