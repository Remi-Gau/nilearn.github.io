
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0cc0407370>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 158.09297561645508 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.1875741481781 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.08822751045227 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 25.305776516596477 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.332566261291504 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.985242128372192 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.66305454572042 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.388691118785314 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.09307289123535 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.814648866653442 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.53061819076538 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.242656187577683 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.024989763895668 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.966507324805626 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.772678000586374 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.593342781066895 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.409369707107544 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.211857992060047 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.035895533031887 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.902644747181945 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.734660148620605 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.57244046529134 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.42335984923623 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.282336805177774 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.145262718200684 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.015830278396606 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.882249116897583 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.734747109589755 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.59574246406555 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.46116077488866 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.31826742490133 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.19140080482729 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.068302750587463 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.94131414095561 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.81394630319932 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.678938014166697 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.545396672354805 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.423740116325583 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.29902293807582 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.168457239102096 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.057414054870605 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.94577358408672 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.82359590984526 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.71400552017744 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.60068533637307 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.483438200420803 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.3687858166902 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.25351420361945 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.13568047682444 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.019744736807688 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.908295154571533 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.788037005592795 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.666691339932957 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.5472276075831 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.43938531699004 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.327871387655083 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.214841229575022 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.097829601220916 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.978803133142405 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.86797000189959 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.748063484827679 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.637649837087412 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.520746969407604 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.403211374131459 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.287870645523071 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.175122059308567 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.0546363845016 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.937330377635671 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.833276916952695 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.716798606126204 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.605259214128766 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.490291484644715 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.373242696126301 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.256120587048466 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.14015972292101 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.022879997889202 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.910023300271284 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.804538002261868 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.700658376400288 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.589518655704547 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.474953889846802 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.357737550029048 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.243763220019456 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.128733772829355 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.013260966255551 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.897754024056828 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.789950742277988 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.676950676687833 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.563436594876375 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.447557157345031 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.333520889282228 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.220618743162888 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.104881960412731 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 11.98877642487967 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.880134607883209 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.76879045837804 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.654869496822357 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.53940947522822 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.427642914713646 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.314672971012616 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.203622817993164 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.08883527009794 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 10.976689521004172 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.865563640316713 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.752571766193096 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.638777119772774 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.526184662333074 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.412442771073813 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.297927150019893 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.184834670583042 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.071259065107867 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.957345960376498 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.844221251351492 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.731881578411675 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.619042467652706 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.506363816883253 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.393364191055298 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.27991131024483 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.16862455465026 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.055255489189085 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.94151496887207 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.828450630519017 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.717368770818242 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.60541849989232 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.494396755772252 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.38077220916748 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.267701190615458 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.15531939972104 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.043545722961426 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.930862108866373 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.818996484463031 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.708614420344811 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.596756992918072 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.4846299232396865 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.372173764812413 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.260189806973492 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.148490569170783 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.036204513842172 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.92407514738 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.8127111239398985 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.701296806335449 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.589386491910785 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.478621573515341 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.3667083903626125 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.2546833753585815 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.142746160770284 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.030654028670428 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.918505240459831 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.807917240503673 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.696271585938114 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.583965142567952 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.472686221268003 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.3611623362491 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.248618247462255 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.136566837112625 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.024591907378166 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.912501989266811 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.800202548883523 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.688808094097089 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.576908525430931 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.465254783630371 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.353392174525291 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.24166198424351 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.129790758062725 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.017889022827148 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.9058694767229487 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.7939276321824775 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.6823791186966583 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.5728083565121604 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.4610420204478607 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.3489140342263615 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.237046337964242 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.1256238249845287 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.013794000438183 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.901897767494465 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.7901156629834856 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.6783527786081485 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.5666192332230047 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.4550868125444048 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.3434136459947297 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.2317075729370117 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.120249108056337 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0088481876876325 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.897510058241464 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.785870303278384 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6742863655090332 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5626542388751943 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4509234300909195 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.339124710001844 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.227368979226975 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.115835101980912 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0042508821836942 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.8926515082518259 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7810285239639677 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6694443668286825 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5578376513261061 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4462484340278469 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.33467118026036297 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22309792884672533 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11154215659328441 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  58.119 seconds)

**Estimated memory usage:**  1852 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
