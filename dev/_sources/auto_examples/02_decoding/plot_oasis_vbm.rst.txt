
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3572361b50>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 162.05787658691406 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.135199069976807 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.012446641921997 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.18326163291931 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.725472927093506 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.374937295913696 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.125885248184204 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.116881779262 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.906728744506836 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.68781050046285 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.504616260528564 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.332909497347746 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.154209852218628 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.013574600219727 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.87979224749974 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.75418496131897 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.716971039772034 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.566728760214414 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.414294640223183 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.26734401050367 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.13481569290161 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.001656532287598 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.86800930716775 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.734272231226385 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.661300341288246 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.525850296020508 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.38961340830876 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.25839477998239 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.132931096213206 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.020702131863295 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.906397501627605 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.79415419793898 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.677213549613953 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.612880526166972 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.486161722856412 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.362921851021902 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.2409819761912 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.11686266435159 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.9946245394255 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.87434194638179 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.755735397338867 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.913519795348005 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.897112256004696 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.763428078141324 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.636549126018178 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.511415375603573 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.37737183985503 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.253692459552845 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.129956086476643 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.030007625112727 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.90267586708069 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.772211766710466 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.643286319879387 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.519655744984465 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.39333807097541 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.266822121360086 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.145663397652765 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.024002380538402 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.924988500003156 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.796438467704643 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.66893458366394 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.547993265214515 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.426458235709898 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.300449621109735 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.174271881580353 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.053957829108608 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.929277781284217 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.823974427892201 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.69620431170744 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.571131585300833 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.445791006088257 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.324272824005343 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.200124528672958 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.0782437357184 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.953569618431297 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.856730302174887 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.733275714673495 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.656906462334968 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.534909009933472 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.416102901289735 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.29186499118805 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.170189574912744 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.04947166908078 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.928602316293372 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.81879929133824 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.697688803953284 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.575621577196342 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.45554525002666 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.334147886796432 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.212776489472121 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.090855015648737 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.96810765842815 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.867220526156219 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.853279972589146 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.728628868752336 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.603988936072902 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.47780402501424 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.352522343704381 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.227680833972231 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.10539968567665 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.992324352264404 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.867920301928379 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.743051435433182 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.620064096543397 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.497373947730432 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.376091037477766 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.253987852132546 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.130712181608253 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.010313502064458 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.894472793701592 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.772087704051625 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.650549151875952 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.5295478616442 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.406646884648145 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.284261582190531 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.162349338116853 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.039740110265798 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.923940994800667 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.802514136847803 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.67992729098857 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.55850076675415 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.437789044104333 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.315970823413037 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.195996957096627 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.079385096027005 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.959487199783325 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.842968168712797 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.7218611409345 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.600876167416573 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.480001778565637 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.359073162078857 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.237771480138065 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.116726557413736 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.996589411470227 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.881022463983564 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.76044127676222 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.64039421081543 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.521507750462441 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.402069807052612 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.281898064579037 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.162056991032191 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.0424954265567425 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.923186577541728 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.807502499827138 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.7056465413835316 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.598885248447286 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.477773921130455 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.356324799206792 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.2349579592008855 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.114151801038909 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.993347962697347 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.8740567371545245 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.752957067991558 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.630768983192693 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.510913350365378 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.389694336921939 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.269071279427944 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.148272799838121 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.027647244779369 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.908799550818197 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.787306129932404 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.666163672571598 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.545270563643656 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.424435581897665 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.303812608486268 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.183379216627642 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.0629819100161635 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.9424375731074166 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.8234162557692755 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.7031287582668324 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.583093643188477 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.462852406920048 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3431706816651103 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2231048724554867 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1031595043752387 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9833229609898155 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.863122842528603 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.744432695841385 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6244021506791704 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.505581369613136 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3857033517625594 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.266221913184909 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1466890900999633 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0273018795284417 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9075623180555261 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7876900660025108 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.668869613319315 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5491895165672915 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.429816093850643 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.310484112885894 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.191025834334524 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.071615861972589 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9523406624794006 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8330949736382677 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7138731405907071 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5949956514896491 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4759480369334318 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.358828855650074 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23916389002944485 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11955053363014106 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.886 seconds)

**Estimated memory usage:**  1919 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
