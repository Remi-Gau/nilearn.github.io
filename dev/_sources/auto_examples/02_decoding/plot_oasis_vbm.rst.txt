
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff7d4355d30>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 151.94416046142578 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.034895181655884 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.355090856552124 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.668769121170044 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.27810287475586 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.520948886871338 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.225460688273113 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.994627067020964 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.792814254760742 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.565692901611328 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.345112085342407 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.21337875452909 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.040207068125405 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.884582006014313 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.821049826485773 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.672409772872925 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.52153182029724 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.365478768068204 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.213249021106297 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.070928523415017 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.955167770385742 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.847407897313435 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.711567466909237 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.65693781686866 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.54501406351725 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.412898778915405 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.26577320465675 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.12766503404688 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.018102850232808 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.899485744279005 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.783032814661663 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.65255251238423 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.58050113916397 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.475779894626502 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.36863289159887 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.24934434890747 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.176021681891548 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.055046513273908 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.937699142255283 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.816805197642402 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.72208881378174 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.60727692813408 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.491004875728063 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.363229923470076 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.230995091524992 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.118851900100708 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.99118969751441 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.86982004693214 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.746340791384377 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.659633835967707 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.54372549057007 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.428055866091857 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.304446880634014 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.179233123671334 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.058921125200058 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.94013786315918 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.811631815774103 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.685799694897835 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.587320779931954 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.46606407327167 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.34713649749756 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.22377797032966 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.098005233272428 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.97471933516245 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.850156366825104 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.725370718882635 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.622564987702804 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.500279266442826 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.384838847553029 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.266896171846252 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.14782442365374 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.029465332837173 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.907983991834852 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.787976927953224 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.674757036002905 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.570290247599285 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.44989013671875 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.333563662194587 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.21605658531189 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.096852806550038 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.979400515556335 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.862939325379738 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.74315700879911 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.628208065607462 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.523931355703445 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.407816522261676 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.29179705575455 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.172905625968145 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.053971854123201 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.93780567137043 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.81995979944865 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.70260494357937 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.595590467038363 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.476521294604067 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.358057696768578 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.238691154279207 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.120547930399576 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.0079078108994 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.891789776938303 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.774849000603261 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.656773090362549 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.546435849501355 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.428406841614667 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.311394235462819 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.191783024714544 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.073541947773524 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.954609052190241 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.83903995629783 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.721392755155211 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.603818626578795 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.49384431405501 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.376497904459637 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.258025697299413 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.139269244354383 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.020609487567032 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.903676136680271 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.786689511660873 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.668100467095009 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.549226275945115 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.437528642285772 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.319528102874756 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.20267820949397 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.084457174676364 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.965630267693744 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.848466942387242 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.732183933258057 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.614689917791457 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.503241002090334 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.386167347431183 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.26989768457043 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.151995402116041 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.03462858054474 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.916948845892241 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.800673156752623 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.683249715548842 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.566097683376736 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.454843072330251 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.337992920492687 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.220356236333433 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.102787546116671 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.985400778906685 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.8679938705254955 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.751653902967211 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.634605756172767 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.518136779467265 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.405751326988483 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.288390535197846 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.171695183734505 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.055456651223673 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.9398131978591815 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.823637326558431 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.707667616029449 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.590709209442139 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.473969755609051 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.361394560182249 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.24402581491778 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.126217817648863 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.008865726981194 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.891895101040224 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.774635886246303 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.658718645572662 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.541549778873136 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.426607102523615 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.3105707446490324 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.194387848784284 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.077429619702426 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.961328348481511 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.845682081348168 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7289221173241023 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.61179431373551 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.494885570862714 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.37967204211051 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2630110785018567 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.1461223356985633 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.029323717643475 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9124101911272318 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7956627498973496 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6791340644750217 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5625859217697315 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.445943338244987 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3302884101867676 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2136930286555 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.097121584546435 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9804711380942925 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8638477325439453 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7472011012000008 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.630573106068437 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5138968554410068 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3978524410978275 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2811007449235865 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1645850633320054 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0480377337071285 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9314472377300262 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8149435952537417 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6984522932583525 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5819734365512162 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.46557220147580514 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.349305846364365 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2328556547261248 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11642945831145474 seconds remaining)
    1971 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  59.519 seconds)

**Estimated memory usage:**  1919 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
