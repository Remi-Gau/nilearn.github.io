
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1e2f9e13a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 157.99760818481445 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.566662073135376 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.64550757408142 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.05610235532125 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.62426733970642 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.817853689193726 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.524564743041992 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.310696056910924 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.1628475189209 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.952897018856472 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.73702096939087 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.535774621096525 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.35173225402832 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.34628989146306 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.178825855255127 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.995931943257652 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.856277108192444 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.708017475464768 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.58803211318122 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.44475367194728 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.307807445526123 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.17131356965928 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.14179169047963 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.000009858089946 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.889617284138996 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.766900539398193 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.655800837736862 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.535460692864877 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.42239921433585 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.306368934697115 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.250208457310997 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.134976187059955 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.015369653701782 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.891281763712566 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.76918496805079 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.64500880241394 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.524933046764797 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.39902029810725 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.278918140812927 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.18323509509747 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.04900074005127 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.922546654212766 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.79749896412804 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.686531144519183 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.565418633547697 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.44191884994507 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.31971582122471 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.232462238758167 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.12523059050242 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.998269256280395 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.871532917022705 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.74850377849504 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.620224916017975 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.494458553926002 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.367037852605183 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.243622042916037 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.153351988111226 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.031133379852562 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.910200678069014 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.783522125017843 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.658549944559734 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.53632140159607 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.408449296028383 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.282969028230696 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.15569442510605 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.05048020069416 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.92155699296431 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.794531288431651 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.67460207378163 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.550709385802781 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.423157112939018 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.2981189640475 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.17499287923177 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.071973046211347 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.946584740200558 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.827537536621094 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.710691615154868 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.597721158684074 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.480084737141928 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.362773436534253 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.244885206222534 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.124095890257095 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.0173687237065 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.895136077719998 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.773545594442458 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.655554547029384 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.533620695735133 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.413107129349106 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.294615485451438 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.173419671112232 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.067356771892973 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.945149447891739 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.828481404677682 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.70635154939467 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.585383734804518 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.465189645164893 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.343024551868439 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.22379040963871 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.104425250267496 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.997035765888715 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.87661600112915 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.757038354873657 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.636801294251985 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.515752567828281 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.393231832064115 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.271974381946382 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.150563294032835 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.038609983765076 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.916267465662074 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.795177549397179 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.674310164018111 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.555156181524467 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.435001288141523 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.3164078282044 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.196707173397666 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.076693254968394 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.96455400565575 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.84321764187935 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.725560252949343 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.605642831626058 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.485594431559244 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.365686692482184 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.246067238635705 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.126571054381083 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.00615869798968 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.891825294494629 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.771808590207781 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.652125058211679 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.531926229596138 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.411621404248613 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.291845321655273 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.172025844341016 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.053656881505793 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.939469710328526 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.820148489368496 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.701806156723587 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.582619723151712 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.463799815978447 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.34439898573834 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.225054403003171 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.10648969241551 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.987575552987714 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.871999844698839 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.7525625012137676 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.633886814117432 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.51561611274193 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.397082874219711 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.278157188778832 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.159205932874937 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.040988354074875 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.927113612492879 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.807614509633045 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.68883574636359 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.570004791995279 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.450916058057314 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.331236716239683 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.211679617563884 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.09223152118124 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.972999524466599 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.856263343643093 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.737119376659393 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.618438375662573 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.499636711897673 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.3808692320724205 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.262194825381767 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.143845449794423 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.025074338338461 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.9065798028500494 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7899177642095654 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.671102085057095 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5522363746867462 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4338072824199295 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.315476456353831 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.1967991556046327 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.077826023101807 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9594493934086388 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8424546176737002 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.724948593452152 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6063454606559837 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4877841046402573 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3693212138281927 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2503845968299148 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1315041321974535 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0126411836655413 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8941228908041248 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7762299872733451 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6581869176639024 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5395584743928143 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4211607537371045 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3026602179915816 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.184173358114142 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0656849501644754 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9472253322601318 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8290875612762925 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7105949834450004 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5921231538821489 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4736953462873186 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35526291731045334 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2368233950451167 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11839953499223718 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  0.299 seconds)

**Estimated memory usage:**  1943 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
