
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f5b0aacfe20>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 201.83086395263672 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.141764640808105 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.753993034362793 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.888039827346805 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.451340913772583 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.210049867630005 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.420302549997967 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.12398079463414 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.855775833129883 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.62752106454637 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.45064926147461 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.235681035301905 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.102547486623127 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.123558778029224 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.941178934914728 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.824669202168785 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.658437848091125 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.522753757589005 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.40087416436937 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.27601968614679 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.222740411758423 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.07212479909261 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.90361618995667 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.7465355499931 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.60982879002889 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.452110052108765 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.30066462663504 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.15129551181087 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.069653272628784 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.914549605599763 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.751965443293255 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.611427284056138 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.474832594394684 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.34123079704516 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.188699385699106 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.091947180884226 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.963206079271103 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.81434006304354 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.66502384135598 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.508883384557873 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.35980224609375 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.216943316343354 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.127050127301896 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.97770179704178 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.83739592812278 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.69084652264913 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.543556006058402 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.404748049188168 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.26945360501607 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.163350499406153 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.018983602523804 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.87981802809472 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.737562821461605 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.595378803757 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.448851029078167 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.310335506092418 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.17430775506156 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.060581307662158 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.91642700392624 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.768127166618733 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.62131134668986 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.479451027072844 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.338728681687385 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.194269589015413 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.080154806375504 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.934262092296894 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.790420893466834 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.652432121447664 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.512702296761905 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.3703381082286 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.231026206697738 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.109927916190994 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.964817470974392 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.82123777637743 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.677595402743364 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.537294626235962 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.394959098414372 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.25113067069611 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.131892192058075 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.98785762847224 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.84427261352539 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.702374749713474 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.55777288064724 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.41824888895793 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.27576090040661 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.13954159792732 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.013882792273233 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.870639820208496 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.7296800179915 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.58788764074947 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.445404158698189 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.301403724230253 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.15726511374764 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.02766510235366 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.883155624917212 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.739802875016867 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.597184578577677 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.454386966744648 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.310371350268928 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.167631888630414 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.036831855773926 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.893499693067946 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.749832980773029 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.60523725713341 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.465693033658543 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.322697264807564 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.178921865967085 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.045610991593833 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.906019307948926 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.764935965931743 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.622401887720283 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.481716441678572 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.340384806905474 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.198046034416265 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.05593649128027 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.92082519116609 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.779208125739261 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.635770693803446 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.492963010981931 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.353191063183697 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.210556030273438 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.068636772061183 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.93528075687221 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.794712124801263 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.654015318039924 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.511471843719482 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.372339502213494 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.231783279283778 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.092874512076378 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.957118091657179 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.815091133117676 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.673147348957206 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.531137358058583 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.390359410665987 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.250513507359063 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.109809548766524 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.969651951509363 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.833637430720085 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.69359733056331 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.552816845530229 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.41447285243443 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.27322399531696 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.136143587004971 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.99446397394567 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.857672333717346 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.717236099572017 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.577374827371885 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.435847811147469 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.294470632398451 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.155423810818052 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.01468269030253 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.877403802429603 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.73673885747006 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.596120739294813 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.454830203737531 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.316267559605261 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.175314035171118 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.034880879578317 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.897864196873917 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.757396711493438 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.617437720298767 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.4772876552913505 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.336447380207202 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.195507347949444 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.0549706075249645 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.917214538111831 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.776638140161353 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.635910436778725 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.494778860182989 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.353837672069933 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.213882011525771 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.072933452171192 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9323268213937452 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.793186314533212 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6523553201521954 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.511745861598423 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.371108000928705 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2302944067507813 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0894334878814353 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9486199237780863 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.809264341990153 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6683979232008284 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.527733700616019 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3875063820614844 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2469163562940513 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1061777488605395 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9654997856386247 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.825823043119461 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6853020343374698 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5447040108776595 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4044031720412404 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.263972826653126 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1234472692012787 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9829763674365424 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8428661724955766 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7023567786583533 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5618618605088214 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42138725367899477 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2809243322622897 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1404443470077898 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.963 seconds)

**Estimated memory usage:**  1888 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
