
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f11efa059a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 267.35782623291016 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 55.135990142822266 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 53.391499042510986 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 52.130575656890876 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 52.618821144104004 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 52.41762185096741 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 51.647368669509895 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 51.023422888347085 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 51.54140853881836 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 51.034277809990776 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 50.22304081916809 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 50.389186425642535 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 50.07067195574442 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 49.62282543915969 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 49.397621563502724 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 49.139069477717086 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 49.5113639831543 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 49.36128679443809 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 49.260805182986786 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 49.20424515322635 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 48.81104350090027 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 48.540223121643066 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 47.997247414155446 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 47.79534502651381 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 47.39064280192057 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 47.15786004066467 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 46.78500839380118 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 46.71712010878104 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 46.25110656874521 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 45.727942055669324 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 45.37531550725301 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 45.09263980004095 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 44.76777237653732 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 44.412972031217635 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 44.2164867625517 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 43.99277809688023 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 43.67541397942437 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 43.419217496304896 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 43.160336870896195 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 42.837822999709694 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 42.624146461486816 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 42.25601616138365 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 42.01647088641212 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 42.246225262797154 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 41.858403877778485 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 41.55653916464912 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 41.392318476801336 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 41.12310997983243 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 40.827079494794205 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 40.458289131826284 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 40.263540744781494 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 39.96136327818328 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 39.6679604787093 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 39.36162299030232 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 39.057070317091764 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 38.75606794790788 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 38.460315227508545 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 38.171562834789874 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 37.92932849094785 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 37.57446933600862 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 37.20381045341492 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 36.85553378746158 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 36.570000148588605 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 36.28925041925339 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 35.96801421046257 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 35.61300560144278 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 35.32661362850305 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 35.02899536801808 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 34.68876591850729 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 34.33824708841849 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 34.007335901260376 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 33.723814799752034 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 33.401027255588104 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 33.10448096223074 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 32.77501429738225 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 32.5028657913208 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 32.2121819069511 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 31.92259095241497 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 31.65660059146392 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 31.36019786098335 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 31.098035216331482 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 30.79156455581571 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 30.538206234210875 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 30.24406730123313 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 30.002943572543916 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 29.73851220748004 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 29.4555333270583 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 29.181566652210282 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 28.89855285124345 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 28.596260652113497 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 28.323308944702152 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 28.033926135891086 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 27.744913070098217 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 27.47150460879008 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 27.200817321209197 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 26.92873654867474 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 26.658934295177456 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 26.391252060526426 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 26.11080794918294 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 25.81594609010099 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 25.541279315948486 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 25.286314076716355 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 25.00710914181728 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 24.740097157006126 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 24.52853327531081 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 24.26986689794631 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 23.998065957483256 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 23.748054314996594 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 23.50190117624071 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 23.250144652270397 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 22.96153619072654 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 22.69355618846309 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 22.4421135868345 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 22.1745978140198 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 21.90462679193731 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 21.639312350231666 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 21.37561975676438 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 21.116797188408356 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 20.85834765434265 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 20.59608118273631 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 20.33170986175537 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 20.0572433846056 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 19.804248954429003 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 19.547051693365823 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 19.287058445715136 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 19.0215256690979 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 18.74860701863728 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 18.486739241232083 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 18.217715576291084 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 17.951635379199832 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 17.685497210575985 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 17.43119980906712 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 17.170783808737088 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 16.90936607884285 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 16.648379792028397 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 16.396268041045577 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 16.13068905998679 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 15.869800830409474 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 15.621684492498204 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 15.357552044683223 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 15.105419908251081 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 14.84525388014232 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 14.586166140059351 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 14.329440803794594 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 14.079852554533216 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 13.824381039060395 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 13.570599562501254 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 13.320137186115291 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 13.065780201473752 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 12.805073275662108 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 12.54947543144226 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 12.29134494579391 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 12.032743730043109 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 11.77884428173888 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 11.52574299527453 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 11.273954514534243 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 11.019497853059034 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 10.763484055828895 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 10.504167740858053 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 10.250561549228692 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.995971739292145 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 9.739622087952513 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 9.490742453822383 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 9.237136539506034 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.98841809063423 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.735913421168473 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 8.491357878030064 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 8.239141334316688 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.985651652018229 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.731593845864019 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 7.482657278285307 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 7.229663617429677 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.974415069402651 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.724025413480108 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 6.471401025509013 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 6.224123307636805 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.9713556007905435 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.720941267444589 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.468066137828184 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 5.217692413809579 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.967720111211141 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.7173804591373845 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.467738814406342 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 4.219957463728274 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.9712685294773267 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.720926652083526 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.4713784417798443 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.221736988281821 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.9737835488420847 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.7261331623824185 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.477546704442877 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.2291532087076398 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.9813059369723 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.7327219822246174 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.4852242912213827 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.2370046407748492 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9893541141432158 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.7422090641738195 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.49495545059743556 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2473662270972477 seconds remaining)
    1977 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 49.750 seconds)

**Estimated memory usage:**  1921 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
