
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9162faaac0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 157.7281951904297 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.668479681015015 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.864901542663574 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.322460492451988 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.915699243545532 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.613913536071777 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.387100219726562 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.1546927860805 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.960121154785156 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.78345537185669 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.622150421142578 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.480595241893425 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.34197211265564 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.19884283726032 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.07258268765041 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.93863344192505 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.819684863090515 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.692831460167383 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.58993413713243 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.46436819277312 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.333987951278687 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.206643967401412 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.076332222331658 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.95519336410191 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.86188761393229 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.732810974121094 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.60731623722957 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.483604784365053 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.35658577510289 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.23390452615146 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.112032334009807 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.98186767485834 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.858262836933136 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.733023202780522 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.609992686439966 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.48854160308838 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.383887237972683 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.28418346353479 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.177076302076642 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.072964692727115 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.971675872802734 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.879219026100344 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.769251743952434 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.65434334998907 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.542592937296085 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.436430639690823 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.327862086503405 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.217633526375952 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.10531465212504 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.98636608221093 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.866695642471313 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.751209202934714 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.636052700189445 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.522095846679974 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.405597969337745 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.295259974219583 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.182039669581822 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.06577812161362 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.95154750758204 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.83842327635167 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.72051453590393 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.60794657175658 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.496872786552675 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.383911726966737 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.271174281835556 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.201840969232414 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.08629247636506 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.972657762356658 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.859475780935849 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.744432622107906 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.623881816864014 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.503676884610888 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.382142808702255 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.268567333482716 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.157309171315786 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.044876734415691 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.924791461543032 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.807071608382385 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.684901689871763 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.565736456762385 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.440510869026184 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.318162229326036 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.194021381982942 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.067794538406003 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.941533815293084 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.81964306270375 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.697029269018838 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.570779381127194 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.448817643252285 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.32751093553693 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.204496251212227 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.0869893346514 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.969394217366759 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.846078524025538 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.723885997812799 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.602301120758058 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.479319651921589 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.35452438138195 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.232687259206967 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.111265786970504 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.990161895751953 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.867937361839974 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.746652626523785 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.626249901299339 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.505701945378231 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.386253663471766 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.266303521282268 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.147164908524985 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.028591447406345 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.908978919370458 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.790356180884622 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.670496588354712 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.548302105494908 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.427163520745472 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.305815240793061 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.183470477228578 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.061155187672583 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.939001073185196 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.818434230351853 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.698939131087617 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.578869819641113 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.457636379998577 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.336306716574997 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.218220266869396 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.100753322724373 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.984073972702026 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.862625663242643 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.74215033110671 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.620336800813675 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.49991323781568 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.378790543629572 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.257385452285067 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.13607281627077 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.014769195614004 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.894621215649505 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.773898477907534 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.654661963967716 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.53592094713754 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.416066173194111 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.296449131245236 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.179410423551286 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.061758220618498 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.941319052602204 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.8216346227205715 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.7011730670928955 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.57952644907195 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.4581554066644955 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.3364973360178425 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.2153075836800245 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.094531673713019 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.9737590948740635 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.852467380612102 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.731444283535605 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.611254632862565 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.491205336211563 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.371279224272698 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.251565059026082 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.132850136726525 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.013255955297735 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.89387871934183 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.773357331752777 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.653383154306352 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.533694800035453 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.414192211408556 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.294333498652389 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.174387577808265 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.0542567724204925 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.9341939894739024 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.814289365495954 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.694104945165871 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5743320128496956 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4548461172315807 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.334886617438738 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2154570604335366 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.096175892599698 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9767260892050604 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8569530790502373 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.738573114750749 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.619018503789152 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4994731415583433 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3798757394154864 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.260509141900921 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.141158764178936 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0218804716412486 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.902594939522121 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7834733434625576 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6641917818336076 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5451885519180706 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4262135941931542 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3071939100033392 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1882467646347847 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0693706367652454 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.950452595949173 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8317227499472661 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7128429216207918 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5940153965583215 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.47517604243998623 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3563480982320563 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23753574400237115 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11875368841928453 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  59.475 seconds)

**Estimated memory usage:**  1885 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
