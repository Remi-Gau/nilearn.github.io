
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fda8473b040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 192.26789474487305 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.417961835861206 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.698647022247314 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.453431288401287 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.13565421104431 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.50290274620056 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.087138970692955 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.794751269476755 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.518421173095703 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.24465274810791 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.03335666656494 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.858032898469407 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.66328660647074 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.510347036214977 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.390042611530852 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.16936469078064 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.977935433387756 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.854645069907697 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.703458574083115 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.5185662947203 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.33451223373413 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.150714624495734 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.96302383596247 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.781798113947332 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.62174050013224 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.467511653900146 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.28145848787748 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.120380993242616 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.95869391305106 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.794507906354706 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.650439500808716 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.50039772064455 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.33682781457901 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.185246417016693 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.025616140926587 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.868253231048584 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.704238414764404 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.557494814331466 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.400537980230233 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.247844952803394 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.081253051757812 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.929165450538076 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.761877502713883 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.606362764225448 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.4602443521673 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.337397469414608 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.187189941820893 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.032547326798134 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.872764786084492 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.717131668207596 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.561975479125977 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.416822311924953 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.265120084469135 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.12667354997599 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.969142887327408 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.8185687715357 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.658346108027867 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.511142726530107 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.355300056523287 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.20151130223678 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.046927531560264 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.892164851798388 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.730728018668387 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.575734672092253 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.42702952027321 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.27561451838567 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.12928110180479 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.981829315868776 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.830782217137955 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.680605280226555 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.537651130131312 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.38949520487181 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.235855950249565 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.085684279872947 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.932941945823462 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.77679467201233 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.622431767614263 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.476978227689667 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.330621297542866 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.182915065861955 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.032803773880005 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.882264143154945 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.72870010864444 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.574404472328094 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.425671407154628 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.272148693309113 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.11880912337192 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.966211477915447 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.812750686298717 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.65907986780231 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.50387970606486 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.353558134246658 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.201462890790857 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.055981100246473 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.905490986844326 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.752789045635025 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.599819560845692 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.4484341169141 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.296035854183899 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.142513125833837 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.990754842758179 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.841142493899506 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.69432225414351 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.544208065977374 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.395443182725174 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.24426896231515 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.091836434490276 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.939794195032565 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.790038117656001 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.63739011265816 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.485888069326228 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.335859260043582 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.186624680246625 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.036841635155467 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.886564053987202 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.736935045408165 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.585306693767679 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.436305649260172 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.287077766353802 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.135875792062583 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.98544422785441 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.838706493377686 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.691802048292317 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.541839423218393 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.392423668215352 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.244058513641358 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.093951736177717 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.945302112834659 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.79874823987484 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.652019332545672 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.50202466891362 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.353168665907765 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.203255855675899 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.053667928939475 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.902625219145817 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.751566136324847 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.600242951337028 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.451933987819364 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.302874896837316 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.153374790287703 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.002213103430611 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.852822457644956 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.701866018940025 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.55052365623154 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.400681257247925 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.250269585642322 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.100164230555704 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.950203451169592 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.799852332553349 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.64956867774861 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.498589595158895 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.349340626735561 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.199042596315082 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.048536319358677 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.898700209407063 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.748499970282278 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.597970534593631 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.448329825310191 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.297509356390071 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.146936415126489 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.996307373046875 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.846213063838319 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.695698770475976 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.545590620099401 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.39636714284013 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.246583750753691 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.09649695545794 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.947256385209318 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.798168591090611 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.64811331562742 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.49801937271567 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.348229754040813 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.198465585708618 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.049128441452291 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.9001834940636297 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.75053071975708 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6002651453018184 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.450132592249725 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.299904855449548 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1498258140500033 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.999904182222154 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8501534527836583 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.7001974766071024 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5501941996193978 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.400489330291748 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2508254824457943 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.100839622559086 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9508197741074995 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.800742651553864 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6506895590080786 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5005457150308708 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3506614962173382 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2006255388259888 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0505248672603942 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9006853300271576 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7505578505687225 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6004757735193992 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4503832420116754 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3002592313169229 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1501527982740546 seconds remaining)
    1971 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  16.496 seconds)

**Estimated memory usage:**  1921 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
