
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9dd2f4a1f0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 266.0393714904785 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 52.555582761764526 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 48.61149573326111 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 47.76975766817729 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 48.773791551589966 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 47.66323971748352 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 46.94333299001058 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 46.51551866531372 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 45.940486907958984 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 46.003356562720406 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 45.699398040771484 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 45.22238926454024 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 44.755223512649536 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 44.62853275812589 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 44.20275163650513 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 43.97628219922384 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 43.9892772436142 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 43.87181816381567 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 43.92085968123542 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 43.59013820949354 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 43.24572801589966 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 42.8653971240634 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 42.874009110710844 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 42.586173441099085 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 42.36510515213013 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 42.0684494972229 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 41.98074245452881 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 41.645966671131276 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 41.411783763340544 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 41.11882046995491 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 40.80768092473348 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 40.69246204437748 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 40.437887728214264 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 40.086808905457005 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 39.82748811385211 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 39.77471647943769 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 39.57116134961446 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 39.32569407772373 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 39.006809611069535 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 38.82454668558561 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 38.53929138183594 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 38.255160308465726 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 37.9670954545339 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 37.70399000478345 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 37.49268156831915 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 37.19533448749119 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 36.90217144592949 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 36.63104703578543 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 36.46206887563069 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 36.174083967598115 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 35.93199849128723 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 35.644145311093794 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 35.39624680005587 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 35.195411209790215 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 34.95305789841546 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 34.706519712101326 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 34.43623229435512 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 34.25188004343133 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 34.01699813481034 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 33.74419397822881 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 33.49701277414958 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 33.25267548639266 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 33.04182725567971 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 32.764786799748734 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 32.499819219112396 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 32.22479328742394 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 31.996326374285147 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 31.75114348397326 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 31.48123623343075 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 31.232787239378776 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 30.967164993286133 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 30.76556008634433 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 30.524400922987194 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 30.274461298772735 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 30.013456260835802 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 29.79070822397868 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 29.535029210542376 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 29.300184571897827 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 29.054871369630863 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 28.80602291565907 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 28.603145241737366 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 28.344639474962968 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 28.097356546215895 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 27.85665647954826 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 27.6415083635421 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 27.38726732310127 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 27.14378105762393 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 26.881813049316406 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 26.622639309276234 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 26.397938947999073 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 26.141391860114204 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 25.884570766281296 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 25.628852792408157 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 25.408549229303997 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 25.149536259630892 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.900925134357657 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 24.65858366092046 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 24.406252969171582 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 24.176759997192697 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.922435384808164 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 23.677579641342163 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 23.431116229236714 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 23.21329495018604 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.96446044236711 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 22.722681999206543 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 22.47890079589117 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 22.231898150354063 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 22.013365458105213 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.771144301803023 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 21.532551338913244 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 21.29075561870228 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 21.06864004306965 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.832089458193096 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 20.592392174543534 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 20.34629687928317 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 20.106003647265226 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.879868301851996 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.641081009155666 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 19.400208978329676 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 19.1692843797828 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.946033159891762 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.704659188089295 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 18.46717655463297 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 18.22538416560103 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.99138331413269 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.780446100234986 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 17.547618075022623 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 17.307989081059855 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 17.068857192993164 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.846761052922684 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.607688958828266 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 16.36884957233458 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 16.124039989529233 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.896188626612041 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.65278319814312 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 15.41125358475579 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 15.167899636661305 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.930150573271034 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.700153616891392 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.48157703619209 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 14.261881010872976 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 14.033452972452691 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.813007566290842 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.580886565721952 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 13.362800187534756 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 13.135244895671976 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.922353323191812 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.691390893897232 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 12.461142991040205 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 12.23745885631382 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 12.009581963221232 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.781443599044092 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.549960111316881 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 11.339002638860466 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 11.106567828686206 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.86794206403917 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.634251930774786 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 10.408309039036938 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 10.171500568148454 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.94010382628291 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.706246554851532 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 9.480988323318293 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 9.244241649721875 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 9.005713908950243 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.762801815823812 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.526807257623384 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 8.283934986734964 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 8.037601176850096 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.792491912841797 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.5519806661549405 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 7.305189875995412 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 7.059876628786499 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.814142127369726 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.568518438780239 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 6.327106667661119 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 6.083083936146327 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.8371229063380845 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.591803517045274 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.350477869591017 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 5.105141728949946 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.860901594161987 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.615369271178272 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.370435368883741 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 4.129398652113201 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.8860440876172935 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.6416123106672957 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.398112645713232 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.1560551151234835 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.912465602793592 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.6688518751235235 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.425359813790572 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.1820566966271526 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.940113365650177 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6974602140910884 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.4547582164253157 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.2119456926981607 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.969949435214607 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.7271724207147124 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.48462918069627553 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.24223909785400086 seconds remaining)
    1968 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  41.694 seconds)

**Estimated memory usage:**  1892 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
