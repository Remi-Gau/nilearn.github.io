
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0085bb0670>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 180.47809600830078 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.306304931640625 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.315353631973267 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.28116583824158 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.74159288406372 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.48826503753662 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.48844893773397 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.196848494665964 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.062335968017578 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.958167049619885 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.729875564575195 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.441012230786413 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.210850318272907 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.99673709502587 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.9751193523407 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.82019670804342 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.640424132347107 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.48226199430578 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.333780209223427 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.192826045186898 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.025168895721436 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.972498564493087 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.82029975544323 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.707608720530637 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.538684527079262 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.3854079246521 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.23873574917133 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.073235909144085 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.994098969868254 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.834534390219325 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.670536994934082 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.51380057488718 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.368907690048218 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.21020631356673 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.03813848775976 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.87190580368042 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.76899642414517 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.60356183954187 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.434697866439823 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.268389066060386 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.208473205566406 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.354436717382292 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.653782662891206 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.856120603029115 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.087250514463946 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.272467745674984 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.54034403096075 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.735631328948 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.91955765088399 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.03930165329758 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.044048309326172 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 23.81036526549096 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 23.573721243784977 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.340886008064704 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.1168367156276 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.890774445100263 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.67045729500907 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 22.449261514764082 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 22.29086298778139 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.07785002659943 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.86419367790222 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.653299226135506 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.45146503756123 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.249581560255987 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.046182990074158 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.87041128598727 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.678460532968693 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.484355189907017 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.29386318431181 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.101721200390138 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.911549159458705 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.72343082159338 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.53892644246419 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.383667710709247 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.201133502496255 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.01955286661784 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.83863804214879 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.65979673026444 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.481787528747166 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.305117573919176 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.147367358207703 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.9738434450126 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.798928260803223 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.62503754661744 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.45573474112011 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.286044850068937 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.11703580479289 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.947806854357665 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.808092854239725 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.63909473847807 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.471398168139988 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.306200399503602 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.14109079734139 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.978331199256324 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.81585903370634 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.6814291100753 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.522093057632445 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.357212794195746 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.196757759366717 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.040799010883676 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.880480527877808 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.720964764604474 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.58404920615402 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.429800091437924 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.274341143094578 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.123628763925462 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.971081562761992 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.810423657158825 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.65214256004051 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.502071196879815 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.34408660368486 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.185216706078332 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.032858388764517 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.876064595922958 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.720242458477355 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.562752744425897 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.40596260695622 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.259645459998367 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.102760961500266 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.94689030206504 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.795978705088297 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.643134513177163 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.489296885787464 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.334886194244632 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.187911195139732 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.03336477279663 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.880996268893046 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.728509041268055 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.575443476438522 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.42208225043245 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.27025662935697 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.119198571634657 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.9740221861637 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.821094964679919 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.669668549921974 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.517860668676871 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.366957047406364 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.218218667663796 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.072005337563114 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.930041990691809 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.781375646591187 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.632855344325938 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.483520632058802 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.333063103935935 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.184991147783068 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.037702617974116 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.894585299165281 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.744713815702062 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.596098816072619 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.4475044772128935 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.299003601074219 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.1506149358307285 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.001863153357254 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.85694369615293 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.708595740330684 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.56133431773032 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.413619469373654 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.265588532587525 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.1173111124883714 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.969393595209661 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.821648180484772 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.677339087361875 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.531049072006602 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.385747486828295 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.239649255101273 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.093138680313573 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.947185490504805 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.8009779567490085 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.657621565319243 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.51144349927733 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.36390404140248 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.216581114551477 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.069965229477994 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.923878607722376 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.778183134122827 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.63421174458095 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.488534558903087 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.3426985121042714 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.19685276974453 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.050768484616413 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9047895272572832 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.758751264593219 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.614379238296341 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.468291647447263 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3231370138085405 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1772803744754277 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0314702936398086 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8858103305898248 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7406486906903853 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5960887954348608 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.450660002859015 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.305388122328913 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1598976055781045 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0145402967621007 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8697028258412155 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7247552627172226 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5799039286010119 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.43478073323438615 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28981653849283856 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14489350726257016 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 12.591 seconds)

**Estimated memory usage:**  1911 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
