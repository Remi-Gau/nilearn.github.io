
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f951cbc4820>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 154.6311378479004 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.16759967803955 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.64590883255005 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.77627992630005 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.274574756622314 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.32381510734558 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.011940479278564 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.817641053880966 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.620712280273438 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.439001268810696 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.25166368484497 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.08737559752031 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.938384850819904 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.7991894025069 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.806152786527363 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.668137232462566 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.543630838394165 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.40003676975475 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.255734788046944 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.09667542106227 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.94550108909607 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.798124177115305 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.676187255165797 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.61065899807474 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.483396848042805 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.370988607406616 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.249176080410297 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.126244324224967 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.001008374350413 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.86875813582848 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.736854314804077 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.62455165770746 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.54955792427063 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.418067346919667 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.290431275087247 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.162937777382986 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.036676751242744 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.912418984078073 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.7848159388492 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.663247884848182 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.58570957183838 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.4724713360391 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.355032727831887 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.235855013825173 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.1179114038294 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.998578548431396 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.88344284762507 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.76166497900131 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.6442688703537 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.548254922944672 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.43787693977356 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.322439132952223 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.201386800179115 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.10420098844564 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.98939636901573 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.86831001801924 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.746683733803888 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.625624635763334 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.525592976603015 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.40283558732372 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.280558983484905 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.16212962494522 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.036823341923373 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.912777189224483 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.800587773323059 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.680448752183182 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.585763692855835 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.46263941366281 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.340033965952257 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.219294164491735 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.098222289766584 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.976568917153587 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.854573991563583 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.734776029848073 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.617461629816002 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.512468179066977 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.396172523498535 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.277185607266116 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.158865445699448 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.039818298967578 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.921868205070496 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.804462921472243 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.68465396253074 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.56665091629488 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.461602369944254 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.34130560650545 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.223594926124395 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.105421696586172 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.984816247766668 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.865035833937398 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.74820884068807 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.63505282506838 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.517245987187263 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.411153055006459 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.294599583808411 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.177987512789276 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.062612911065418 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.94500792886793 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.827026362321815 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.7080872853597 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.591989278793335 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.474501914317065 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.369474303488639 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.253034591674805 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.136292384221004 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.0179283618927 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.900441462138915 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.781244665662818 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.66306930118137 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.545149212583489 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.435884605754506 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.319720152262095 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.202757120132446 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.085016995404674 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.96624367697197 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.848219114801157 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.731200810136466 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.61475221723573 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.497927221201234 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.387780688390011 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.270114103953043 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.152682779249082 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.03545226034571 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.917737972445604 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.79977608496143 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.68213677406311 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.567920771856157 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.4507491344542 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.338686883449554 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.220998228058335 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.10328511091379 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.987031030290909 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.869886152672045 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.753140284602804 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.63587549907058 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.519325274008291 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.402980804443359 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.29087018096534 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.173939300620037 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.056593517605349 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.941300868988037 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.824939404819029 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.7085478507297145 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.593002636115868 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.476623906029595 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.360366163582637 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.247889943318824 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.1321622352210845 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.015802480079032 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.8990314806867765 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.782304048538208 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.666160120869314 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.549785588916979 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.433613219292336 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.321180628491686 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.204731625895347 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.0888405946584845 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.972436065127136 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.855855084672759 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.739414933342604 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.622938930988312 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.506746207705196 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.390930814507566 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.277485025440988 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.1612503993801955 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.045044183731079 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.9292813381516787 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.813357665867149 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.6973910104660757 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.581578779502733 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4658741249757656 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3500462512523805 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2354807576467826 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.119547591733106 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0036252504107597 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8877856731414795 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7720674059607764 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.656175108279212 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.540576259741622 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.424907854815435 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.309246646033393 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1948892688224326 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0791005354661207 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9634240650739827 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8477449417114258 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7321830504649396 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.616752875748501 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5013409680861203 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3859774001101228 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.270491602559569 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1555572559959009 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0400698035175264 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9244638880093892 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8088968973703334 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6933352873497403 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5778987407684326 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.46234262232877765 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.34675213286114226 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23127357646672414 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11563401845232327 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  58.823 seconds)

**Estimated memory usage:**  1895 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
