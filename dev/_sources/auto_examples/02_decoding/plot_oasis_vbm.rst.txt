
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb2d67e7b80>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 210.70480346679688 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.01079535484314 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.03624701499939 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.76594924926758 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.579461097717285 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.959450483322144 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.431671380996708 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.97218428339277 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.592687606811523 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.265645742416382 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.354811191558838 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.094480839642614 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.285855134328205 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.02869752737192 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.77380531174796 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.553181727727257 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.30299937725067 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.28192466848037 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.07752087381151 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.893427133560184 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.68183469772339 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.4825846240634 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.300278793681755 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.120053840720136 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.072426319122314 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.898516178131104 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.720186123481163 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.527099662356907 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.333348819187712 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.151340114659273 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.96398989359538 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.881226501157204 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.718003511428833 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.55144775275028 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.390142230426566 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.229125091007777 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.062561088138157 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.94706029505343 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.83097493021112 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.67367476683397 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.510518074035645 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.350924003414992 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.18830523036775 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 24.026565124822216 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.927344842390582 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.79151463508606 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.630742352941763 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.466951918094715 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.316720565160114 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.153929885552856 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.98576307296753 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.87474535025802 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.720037405307476 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.560512389776843 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.394799029385602 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.235381971706044 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.08133752005441 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.954772589499488 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.842113240011805 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.679115137811433 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.516616185506187 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.358953014748995 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.197564778789395 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.035084482223265 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.911867290735245 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.74856554544889 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.59880765279134 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.435998414879414 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.27900505065918 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.1187924336696 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.95681960242135 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.837821903363082 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.678062862820095 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.52150093366022 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.358955782812995 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.197090069452923 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.03520415958605 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.87305927586246 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.746376538888 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.58961782877958 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.43402898311615 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.27836965042868 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.12364284585162 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.968139338206097 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.85048004559108 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.697259482215433 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.53999614715576 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.383973176451935 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.2270619652488 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.07132393322634 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.912592490514122 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.779051235743932 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.624959251155026 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.46786593878141 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.31144051856183 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.154379995245684 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.998128791650135 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.841982116404267 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.705245791649332 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.548519965374107 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.390391111373901 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.232905135296358 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.07476412081251 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.919842912155447 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.763337722191444 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.631818953014555 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.474647391517207 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.318085688296879 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.159834852925053 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.024284157184285 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.868914539163764 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.727525388872301 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.570855515343801 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.411151020927766 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.250422423346 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.095426797866821 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.937195646351782 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.780359484191635 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.634755583132728 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.475123643875122 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.317579746246338 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.158341173298103 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.000943750631615 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.84542127353389 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.687439049443892 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.541451406478881 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.38417811242361 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.227171505530048 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.069855198264122 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.913087408672007 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.756846281198355 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.602410829704226 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.455583319519505 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.299189357829274 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.142245456353942 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.985218224702058 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.82805756961598 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.673310018803951 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.524516661961874 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.373208352987715 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.219202688762119 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.063749673518728 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.908494667268135 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.753003527234483 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.59736114078098 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.45016548551362 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.294980875433307 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.139951581046695 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.984905577994682 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.8303834799952154 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.675657510757446 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.520900148429618 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.374225666648463 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.219886296714833 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.065151158865396 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.911319540392968 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.756663988798093 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.601561490137866 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.446961155420617 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.296992648322627 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.143543183803558 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.989758808420312 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.837124462480898 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.683098991955716 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.528877845624598 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.376305890805794 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.225628298449229 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.071479354789871 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.9176698412214 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.763805355546037 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.6097204404718735 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.455613284083137 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.305296088373939 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.150953939195313 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.9972159999540486 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.8435638972691124 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6899838989431206 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.536360958875236 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.3824027066820124 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.2303565933717695 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.076175636715359 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.9216846642573233 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.7677125092391126 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.613742936504343 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.4598680371823516 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.305894490834829 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.1537991159705707 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9998047237090248 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8459825465019712 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6919904436383928 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5380413155806691 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.384122578885543 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.231091688076655 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.077099041617596 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9230896762965881 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7691418513273581 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6153719619828827 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4614870862912406 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.307628176429055 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15391978906027637 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.867 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
