
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f0f92994040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 161.68594360351562 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.312976598739624 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.530471324920654 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.95020961761475 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.351456880569458 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.0308039188385 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.797805547714233 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.582341057913645 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.393022537231445 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.21953182750278 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.05892848968506 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.898381384936247 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.73771540323893 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.62499990830055 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.43746989113944 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.270588954289757 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.124421000480652 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.00129210247713 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.880746126174927 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.750902364128518 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.617658376693726 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.50460003671192 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.379547639326617 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.23701656383017 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.136610666910805 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.012491941452026 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.878349414238563 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.733892608571935 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.60743168422154 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.485583560220125 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.354234377543133 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.23149679553124 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.10460191965103 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.980476625037916 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.867625811520746 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.74555495807103 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.616368823581272 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.49628510346284 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.37709275044893 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.259246043669872 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.134425163269043 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.007227891828954 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.886669556299847 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.76418715854024 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.636366540735416 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.51766978369819 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.39718835250191 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.277538233614983 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.153540531794228 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.03290021176241 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.922025680541992 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.8029918904398 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.682940263014572 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.566418409347534 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.44684483386852 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.326205145228993 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.218070166451593 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.091152325011134 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.96699784541952 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.85980484041117 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.75580350557963 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.637222391660096 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.526011013215587 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.411326124554588 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.303538918495178 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.1909436079172 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.080565055211384 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.973800730349412 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.862783964942484 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.752954659254655 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.645213501793998 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.540980876331599 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.426652696397568 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.307603391882491 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.185158156059883 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.067150195439657 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.948608687049465 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.828742761116523 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.710808943479488 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.590888095807426 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.47040319442749 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.355545417762098 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.241822417189434 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.128170352384268 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.014036462420508 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.901065896539128 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.783991724945777 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.666846790532958 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.546021894975143 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.425794596082708 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.304257498847115 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.186279197315592 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.067989048750505 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.947049125548332 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.828340464449942 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.70779972327383 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.590064764022827 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.470330159688734 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.349575315202985 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.229127551570082 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.11018705368042 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.989369578880838 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.86865606027491 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.74795353296891 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.63892569908729 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.51844114349002 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.397250692799407 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.276126801410568 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.155913352966309 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.034720503955805 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.914084629579024 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.796004840919563 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.675861086164202 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.555095586101565 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.432282100644029 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.314485332240228 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.19398308622426 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.07429450393742 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.953611297122503 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.834245801973744 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.714990615844727 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.595217210202179 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.475429163604487 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.354879233895279 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.235286351173155 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.113780164718628 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.993216722730606 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.873650661603673 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.754900678992271 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.634203326794529 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.514104182903584 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.39209042250655 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.272255911971584 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.153030438530715 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.032354564809086 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.91203392876519 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.790752074297736 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.669193514942252 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.548067504081173 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.426814852858619 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.307372535978044 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.185755448983916 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.06347805681363 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.942013783888383 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.8204176558388605 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.698062559653972 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.57600881955395 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.454146146774292 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.332628817171664 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.210473011004045 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.089007298151651 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.96725624602362 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.845666408538818 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.723555985619041 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.601346839557994 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.479343245106359 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.35783513998374 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.236608136231732 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.114907738528673 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.993250677420658 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.871472418308258 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.750268346774653 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.628494804288134 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.507035227641006 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.38542649804092 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.263728336854415 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.142289227749928 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.021207102758442 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.900813329787481 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.7791946710214104 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.657909435384414 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.5363021928664535 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.4148636862289075 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2931227697802417 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1714669918191847 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0496940953390936 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.928143653002652 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8064131750225347 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6850062943576427 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5635928654803912 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.4422045548756914 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.320329724095803 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1985327359084246 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0765366945110384 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9546075281889541 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8326296419710728 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.710319052460373 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.588037038231916 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4659079744460735 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.343758704170348 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2215016641114886 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0993177166783996 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9772075116634369 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8549559425195881 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.732837180501407 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6106238548572247 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4884609105635662 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.36633220420876134 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24417359419543336 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12207276497653981 seconds remaining)
    2000 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  2.148 seconds)

**Estimated memory usage:**  1929 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
