
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa419c75bb0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 293.6530113220215 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.528098344802856 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 47.62945103645325 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.598724365234375 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.518985748291016 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.39802837371826 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.99129358927409 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.39634057453701 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.87569808959961 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.47668348418342 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.99341702461243 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.91829993508079 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.89655343691508 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.821772190240715 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.49297499656677 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.18030675252279 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.9385541677475 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.69682762202095 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.538255267673065 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.46781344162791 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 41.36787700653076 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 41.13345774014791 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.88480247150768 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.70147712334343 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 40.591721057891846 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 40.37789344787598 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 40.201183539170486 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.92518918602555 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 39.69567969867162 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 39.448894377412465 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 39.27214042345683 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.978484276802305 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 38.72130846977234 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 38.51777035539801 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.378997592365046 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 38.16013445172991 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.88270200623406 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.67976001791052 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.486939317301704 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 37.21612005356031 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.98318099975586 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.7234531611931 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.46203093301682 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 36.18004383042801 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.91490465944464 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.65419692463345 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.385703377101734 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 35.132078114976274 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.921931664148964 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.663175826170004 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.42901873588562 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 34.23557485318651 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 34.001305671838615 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.73299941026939 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.47085687849257 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.269805669784546 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 33.04477950504848 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.808506446972224 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.55675938211638 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.31806826995591 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.054055293401085 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.831012725830078 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.6076903112473 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.37634005622258 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.126089066267014 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.88442576848544 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.663894508824203 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.450739340995675 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.208583677516263 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.973657269408736 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.759787729808263 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.521015647431494 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.282814025878906 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.078039623286628 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.86863366333214 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.685408035914104 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.46629019787437 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.229663065501622 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.988461194894253 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.75478219684166 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.53358292579651 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.306397573447523 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 27.081763383818835 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.85473993600133 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.63754577863784 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.409490767647238 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.21839035389035 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.98442747401095 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.759147037159313 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.554978622479386 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.307294103834366 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 25.06138789522779 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.83057169292284 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.585787365513465 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.337032810170598 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.098635497846104 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.87123252948125 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.63575403469125 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.398886086989425 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.165647995592366 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.91897225379944 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.696248384985594 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.463653915068683 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.218487640029018 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.987462263840897 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.751102799461002 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.51245566134183 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.298381992589647 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.07342157540498 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.84109593312675 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.615892323580656 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.397239156671475 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.17168414592743 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.94138446107375 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.7152235758932 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.489931272423785 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.28163577770365 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.04962781351856 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.815574945029567 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.577195656399766 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.355809688568115 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.122466932643544 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.89545184276143 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.67002604841217 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.446813260355302 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.21490125656128 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.983112331420656 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.75274646000599 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.519633322954178 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.289668373359266 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.064625666691708 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.82622325875377 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.58721621831258 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.35569384940585 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.125635257407799 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.896605209068015 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.670379638671875 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.440265794740107 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.214125609052354 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.006476108976406 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.773572955812726 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.541472369051993 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.305122100131612 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.069612881520412 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.835428211424086 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.604684706391959 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.372273111996584 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.139973839934992 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.907076603657492 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.675712423836625 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.445821523666382 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.212388518630274 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.980282557638068 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.748322454153323 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.517980269023349 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.28766687454716 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.0594500150436 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.831614706926285 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.602534701552571 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.37012674823497 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.141112208366394 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.909982599827075 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.681026497004945 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.452554205443962 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.224385540659835 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.9936324032870205 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.760992848729512 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.530343384086015 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.299682344709123 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.068985110909275 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.841456258998198 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.6134285843163205 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.3853914737701425 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.15952559564844 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.9338213465679654 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.705679791314261 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.477352261543274 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.250487619874168 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.0206960078035845 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.7922842222885045 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.566000991397433 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.336747103633143 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.108407340206942 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8802035884127593 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.6509089884550674 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.4224032066963814 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.193834063827351 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9653195276617366 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.737528750236998 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.5088642387793807 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.281052827835083 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.052904529721325 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8244919776916504 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.596013167979186 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3680048185525482 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1398659241505158 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9119079015692886 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6837774085514436 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4559042718675402 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22792141401588017 seconds remaining)
    1977 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  41.832 seconds)

**Estimated memory usage:**  1890 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
