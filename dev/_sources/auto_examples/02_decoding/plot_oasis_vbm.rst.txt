
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6616e4d190>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 179.8248291015625 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.12839412689209 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.737059593200684 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.0313515663147 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.49732232093811 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.728805541992188 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.168976306915287 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.730021612984796 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.34492301940918 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.03318969408671 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.77325129508972 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.75408920374784 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.729866981506348 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.47914147377014 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.268690177372527 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.05971948305766 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.861918330192566 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.68062313865213 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.494452900356716 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.443260707353293 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.239504098892212 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.026073614756267 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.80847436731512 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.62057175843612 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.45086908340454 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.264205932617188 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.183614914233868 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.997628609339397 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.823358740125386 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.64119320902331 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.483478148778282 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.31474567228748 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.175534069538116 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.06847964633595 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.897577159545 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.719486372811453 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.542043500476414 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.39212973053391 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.220847819980825 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.056103033897205 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.931007385253906 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.754388524264822 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.582394554501487 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.41395242269649 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.258449576117776 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.09693535168966 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.93533816544906 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.817472787613564 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.66936989625295 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.531701949177958 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.37496042251587 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.254358927408852 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.126339765695427 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.02384607746916 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.878819041781956 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.733208071101796 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.58007771628244 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.42782391999897 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.280369799712606 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.12378647367833 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.057852904001873 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.905383981642178 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.746158945944998 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.587678050237987 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.43681526184082 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.28461634195768 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.132158850178573 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.001126307160106 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.838302920846377 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.675388491672017 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.518656424113683 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.359882811425436 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.208062913682724 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.07307736514366 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.918209398115003 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.758860031763714 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.599876065003244 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.44199977911912 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.284786419990734 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.125696511208258 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.986048579216003 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.83176126892184 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.677536446873734 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.523211818143547 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.370102144422987 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.214717696694766 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.061603401982506 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.926745570939165 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.77071731740778 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.618110501364374 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.46618821885851 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.314459609461355 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.159960207731828 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.00982467846204 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.86894982926389 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.716349890357572 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.559608956178028 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.406444237404262 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.25121153617392 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.09856005389281 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.947929620742798 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.810428576894326 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.658521315630745 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.506748359180191 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.3574705857497 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.208157039823986 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.083336402785104 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.93356298063403 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.79473453980905 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.646240525289413 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.497054056687789 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.343243560275516 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.19140418938228 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.036946815727031 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.893306991510224 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.744565476541933 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.594583930640384 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.449650026794174 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.30071643651542 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.153547483332018 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.002188205718994 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.857840275961506 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.70655345916748 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.554606005428283 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.40292614506137 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.252960157394408 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.102764962211488 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.953068245114304 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.80843959748745 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.65568477423616 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.504319704495943 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.351621655107454 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.200060403708255 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.048261375355542 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.897022044480735 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.752179022188539 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.599448821123909 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.44820137093537 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.296514908472696 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.144129916060743 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.991854667663574 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.839802583058676 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.694400112393877 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.542565605857156 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.39103298717075 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.240000280840643 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.089553176540218 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.938814466502391 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.79211763433508 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.641795753632616 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.491322835286458 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.340502150011378 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.191822579032496 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.041343375748279 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.8905150766496535 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.7432678976366605 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.592060327529907 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.441018191112834 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.289976799035373 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.139382489822196 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.9889339208602905 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.838055949773848 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.690530932979819 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.539759562790759 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.389212108239895 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.238600803144051 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.088187823812645 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.93780214772253 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.787115369524274 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.63928092443026 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.488948667750639 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.338967800140381 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.1887389837309374 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.039065748280873 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8891091538571767 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.739282233374459 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.590547225692055 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4406409910169695 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2906994551755067 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1408317728415547 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9912217722998724 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8417188554837556 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.69183556326143 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.543966265975452 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3944520950317383 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.244732431463293 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.095263565740278 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9461920261383057 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7972249020921423 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6481045869292406 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4982404206928452 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3483660420822223 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1983946561813354 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.048647883024858 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8989183755265069 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7490448584923377 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5994043739474549 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.44946109946004026 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2996033056817874 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14977946473126436 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 15.947 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
