
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f54e692c340>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.55405807495117 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 28.805795431137085 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.04862093925476 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.340663909912113 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 25.956154823303223 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.647884845733643 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.45595979690552 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.18510835511344 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.964679718017578 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 24.81107301182217 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 24.662173986434937 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.53059315681458 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.425469080607094 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.30109082735502 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.16228611128671 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.000397364298504 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 23.840524911880493 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 23.69108727399041 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.54770980940925 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.449786512475267 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.34101629257202 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.20543607076009 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.080016179518267 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 22.95688667504684 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.805796941121418 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.69107675552368 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.555764693480274 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.429595329143382 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.287123577935358 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.16031343361427 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.030930042266846 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.89247401299015 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.755703628063202 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.616848692749485 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.48676164009992 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.357256242207118 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.22292317284478 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.08595610953666 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.952670774961774 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.813626044835804 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.829771995544434 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.691806368711518 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.561066718328565 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.430588871933693 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.294524929740213 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.155942016177708 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.021095172218654 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.89179018710522 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.756388147672016 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.62038806019997 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.478023767471313 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.335142570383407 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.2008257829226 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.056281022305757 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.91975955609922 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.784750895066693 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.650833266122003 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.517072857471934 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.386394681601686 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.260066525410796 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.165306727091473 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.033421539869465 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.903214108559393 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.77128732015216 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.64261645078659 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.51344810999357 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.393588940302532 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.261325067548608 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.126511181102078 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.99601918372555 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.865002257483347 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.7309429511218 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.598895602756077 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.46676967241993 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.33393801225198 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.202428738276165 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.068855800126727 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.933524432120384 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.799682910625751 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.666821066337295 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.534160494804382 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.400606711705526 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.269508135028001 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.137665926691998 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.005214146205358 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.871001510059132 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.73888411632804 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.605879279388779 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.474238915876908 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.340346644433696 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.210319810443455 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.08821085521153 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.958068028740263 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.825416003504108 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.693349412147034 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.560631061855117 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.431470414002735 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.305496582050914 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.172067330808057 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.037849286589958 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.905939102172852 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.774100039264944 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.643576444364061 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.512267976131254 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.382264577425444 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.250505924224854 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.120234174548456 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.991874714878117 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.862371497684055 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.732654879946228 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.603022206913343 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.47346889006125 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.341653415134974 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.215768714921664 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.087435910576268 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.957106144531913 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.827713407319168 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.69779531364767 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.566808021674722 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.435978306441749 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.304407437642414 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.174806957402506 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.046183343793526 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.919001391263512 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.79160096568446 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.663626718521117 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.53516984364343 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.405773864956352 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.276649743318558 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.147005351014839 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.017674427766066 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.888869258283659 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.760096181522716 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.630919090787271 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.502781327091046 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.374132765663994 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.245795867022347 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.117120039724085 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.988014919170435 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.858768255590535 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.7308342797415595 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.603664322102324 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.476430936598442 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.34693228114735 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.217107772827148 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.087629096261386 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.958437181498906 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.829046875441156 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.699867235647666 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.5711599804411 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.4428361256917315 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.313988202455028 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.185751312657406 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.057625594481924 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.928479962534719 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.800243977577456 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.670697719622881 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.541775012471873 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.414721114726006 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.286324412567811 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.159164309501648 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.030682079540276 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.900959285688988 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.771343497410873 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.642251753225559 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.512972622206717 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.383607301367334 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.254537041315776 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.125398862929571 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.9960541273715227 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.866822340909173 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.7382880832716734 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6096634532130043 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.480578556226168 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.3515266248549542 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.2231203828539163 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.093781146136197 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.9645314620713057 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8351185696848322 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.705797341948781 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.5767058531443277 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.4478669469527774 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.3191518993168088 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.1901400831879165 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.061169209687606 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.9321007406389392 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8030146757761638 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6740001816163088 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5451501379621788 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4163254038997428 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2874856497112073 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1587757802134409 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0300939579804738 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9012330467836843 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7724189537087667 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6436266043247321 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5148425978057238 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.38609675344476846 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.25739836933636906 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12867966968210498 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.916 seconds)

**Estimated memory usage:**  1910 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
