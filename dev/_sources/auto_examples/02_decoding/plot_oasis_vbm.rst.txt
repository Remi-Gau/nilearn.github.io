
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f72bcedc940>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 134.9353790283203 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 20.979788541793823 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 19.188392400741577 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 18.587361017862957 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.219634294509888 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 17.992471933364868 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.035535097122192 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 18.464392525809153 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 18.193382263183594 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 17.981281359990437 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 17.788382530212402 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 17.641699595884845 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 17.481100479761757 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 17.33721580872169 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 17.20185879298619 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.05888358751933 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 16.93305730819702 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 16.809063350453098 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 16.701722939809162 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 16.742313121494494 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 16.6175057888031 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 16.487110467184156 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 16.37455266172236 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 16.253685173781022 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.140827337900795 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.027596473693848 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 15.91014339373662 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 15.80694274549131 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 15.699832030705045 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 15.598981421569297 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 15.598705450693767 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 15.491006558941255 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 15.464193642139435 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.789408857172186 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.660641684251674 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.535934380122594 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.415510442521837 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.296639442443848 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.192557686253599 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.084264871401666 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.037529945373535 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 14.92431481291608 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 14.808582305908203 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 14.699898342753565 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.588496468283914 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.47438054614597 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.362066030502321 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.25244235485158 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.140867392222086 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.031159770732023 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 13.925374031066895 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 13.818651881872437 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 13.779664828227117 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 13.673339312931278 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.567316382019609 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.463095404885031 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.36466339656285 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.258343671497546 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.15540025974142 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.051251775127346 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 12.950226306915283 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 12.85238374256697 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 12.75073791319324 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 12.710465923188224 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 12.608086228370667 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.506330691851103 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.406685294526996 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.303657620700438 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.203128085416905 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.102010198261427 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.001612322671074 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 11.902199053428543 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 11.80373340182834 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 11.704306671064195 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 11.605395072215313 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.537761688232422 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.440700568650898 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.343903566335703 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.245585771707388 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.147635064547575 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.05079448223114 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 10.954127117439553 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 10.856102454953078 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 10.761621417769467 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 10.665635926382881 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.569466184167302 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.50129617646683 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.403928107228772 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.307851227847012 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.211385622453154 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.11435553762648 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.017814539291047 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 9.920967205711033 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 9.824482594766925 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 9.730768792172695 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 9.635864119780692 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.54120792945226 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.46692655258572 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.372853138008896 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.277882674727776 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.183972358703613 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.088655750350197 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 8.992079318738451 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 8.898953058187244 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 8.805625622089092 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 8.712439627874465 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.619084160282927 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.524630368312943 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.430400892540261 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.354264637745848 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.260068069804799 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.165655466887328 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.07132271357945 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 7.97718787826268 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 7.8836871531971715 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 7.789537253587142 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 7.696854780460226 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.603138128916423 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.510063086525869 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.4167766771396675 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.335376103719075 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.242488269963541 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.148420544921375 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.055026672719939 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 6.9613839426348285 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 6.868073415756226 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 6.774589250958155 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.681842950385386 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.588602364063263 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.495191938193269 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.402349215287428 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.308657677119014 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.226336255218043 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.132862173525015 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.040137034743579 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 5.946548223495483 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 5.85323917164522 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.760155846602725 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.666866924451745 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.573977810015781 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.481147357395717 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.38811468232608 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.295307619470946 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.211466597510384 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.118657893604703 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.0260040513400375 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 4.933190571118708 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 4.8404256762290485 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.74777027078577 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.655286340905516 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.56283974647522 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.470139291902251 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.377835374129446 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.28546404838562 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.192612025644872 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.106674571191111 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.014444919732901 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 3.9222261298234296 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.8301054918313326 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.7392412251646414 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.6523791551589966 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.563199760010524 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.4709117883517417 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.378743443752359 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.286702987624378 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.1944583040295225 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.106730288769825 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.014661235009839 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 2.922535669235956 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.830761632975742 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.7386498030494244 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.646830826474909 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.555451143619626 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.4643136352472914 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.372511052537239 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.2808665207454135 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.1891756599599663 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.099999074882033 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.008302554655611 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.9166790466734818 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.8251363701290553 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.7336212982788928 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.6420710191621883 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.5505610828191205 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.4591738037441087 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.3676560376141522 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.2763237876276816 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.1850027834030397 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.0937368108871135 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.0035634431889449 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.9121841380470677 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8207829547802191 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7294275760650635 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.6381540249048736 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5469379154677244 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.45570537982842857 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.36447287578972015 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.27409157898220315 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.1831702030066288 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09165493687193597 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 44.357 seconds)

**Estimated memory usage:**  1899 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
