
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f7f56de0b50>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 155.5633544921875 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.644519805908203 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.50542116165161 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.058826526006065 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.16242218017578 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.194491624832153 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 24.151627143224083 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.38213062286377 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.278457641601562 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 24.105341063605415 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.855647563934326 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.64110320264643 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.510058959325153 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 23.364879369735718 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 23.27109595707485 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 23.1528582572937 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 23.038341522216797 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.943895283867334 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.831410964330036 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.726951900281406 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.689162254333496 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 22.620426870527723 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 22.556897921995684 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 22.48398330937261 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.414292812347412 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.34001064300537 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.25152609898494 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.165679384160924 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.06691210610526 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 21.98811258118728 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 21.89054091771444 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.76872980979181 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.661965250968933 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.55722618825508 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.45020834137412 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.33896245275225 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.238014936447144 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.038104102418227 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.838421545530622 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.64451871162806 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.457283973693848 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.29266997662986 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.12795612925575 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.97094566877498 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.802621581337668 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 19.630724483066135 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.45878177103789 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.295168516483713 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.127869248390198 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.96396632583774 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.798723220825195 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.637795738145417 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.48813238510719 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.33967274989722 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.192998788974904 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.038232586600564 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.882745470319477 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.731558172326338 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.578441652758368 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.426905729002872 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.31182591120402 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.204744213917216 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.14054485290281 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.036738456241668 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.914011627435684 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.777701176129856 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.632285811684348 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.495052821600616 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.34861401950612 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.20562434196472 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.066594089780537 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.927259300796079 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.787372165256075 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.649753332138062 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.513133222992355 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.377216339111328 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.239780074671694 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.102155304574348 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.967642521246885 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.83434001101723 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.704039335250854 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.5691035411976 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.437762574451725 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.303994388465421 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.169089646566482 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.039597160675948 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.933520311533018 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.825962724356817 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.715332117947664 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.611669382352506 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.503044790691801 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.389837694692087 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.277224862057231 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.164305579277778 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.051618621704426 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.938519992326437 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.825013021628061 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.734627740899311 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.623179245968254 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.509577640379318 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.391322374343872 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.262032770874477 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.128405225043204 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.994680923165626 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.860062525822567 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.72663756779262 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.5934324309511 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.460450557904823 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.32724928855896 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.195821541164992 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.065609541806309 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.935379780090607 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.8104282276971 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.68252120608777 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.555113098077607 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.427286365757817 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.298179914211405 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.17575476719783 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.056021027645823 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.937138657609957 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.818686485290527 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.70024684046911 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.585071196321582 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.469557130239842 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.353507895623483 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.239218997955321 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.123109624499367 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.006329157221035 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.891413047909737 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.77192160695098 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.6515778028048 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.530686340259232 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.409972436500318 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.289675180177044 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.169726346855732 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.04873020560653 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.928094527300666 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.809103222659035 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.688747983047928 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.568506743410508 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.447259698595319 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.326263287388686 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.204983892575116 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.083981433948437 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.966493633058336 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.844897656605161 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.722846315331655 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.601566926151717 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.4797554531612915 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.357319900653507 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.234905242919922 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.112682224109473 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.990337045569168 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.86782463391622 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.744723539847832 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.621547391337733 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.498513386799739 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.374547932557999 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.250782516938221 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.126806560552345 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.002993106842041 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.878983494657907 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.754946373127125 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.630108074176531 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.505299155305072 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.381151827898893 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.256756251116833 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.1336845580689205 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.009506498064313 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.8850411000336416 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.7612099086537083 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.6367266624294525 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.5122020133706027 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.387207505330874 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.2631232491854965 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.1383218084062845 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.013579422777349 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8887056913753013 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.7640486727939564 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.638866151511336 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.51357454723782 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.388378552968989 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.2634549743526584 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.1387132634230652 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.0138331081556236 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8884928355345856 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7623822227601083 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6361205641598624 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.509974165165678 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3838271590136977 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2578275831122148 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.131925132262145 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0062281688054402 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8804055693236039 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7546182661941371 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6288736233344444 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5030853505037268 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3773305573439235 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.25154053562819356 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1257569837809807 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  2.427 seconds)

**Estimated memory usage:**  1833 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
