
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8be9ad4970>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 278.9616584777832 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.31026101112366 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.991063117980957 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.244875669479374 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.33005166053772 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.77940011024475 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.45670008659363 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.712785788944792 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.387042999267578 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.076228115293713 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.323119640350342 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.286367438056256 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.0757151444753 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.91207535450275 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.991676500865392 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.73445741335551 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.58062720298767 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.351022706312293 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.122265444861515 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.896277553156803 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.700286149978638 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.690187545049756 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.45703313567422 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.23868929821512 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.044630209604897 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.85948657989502 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.662702505405132 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.458216623023706 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.390758548464095 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.183709752970728 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.990886370340984 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.808568293048488 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.637072503566742 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.45597163113681 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.32572521882899 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.17306355067662 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.00206152598063 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.82581014246554 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.660984428305376 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.49651535963401 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.326932907104492 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.309661929200335 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.14078525134495 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.97559618395428 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.810883326963946 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.648521423339844 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.477574047834977 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.367514326217325 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.269553184509277 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.10168919757921 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.93960976600647 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.783150294247793 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.62299832930932 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.45310162598232 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.32593306788692 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.23326121677052 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.082966463906427 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.93001745876513 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.77796302170589 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.613772768085283 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.449239253997803 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.300770806484536 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.156303313470655 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.99692332555377 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.83997717499733 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.680231607877293 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.518730734333847 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.35996666950966 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.24567930838641 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.084140283474024 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.923551525388447 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.771085722345703 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.620804256863064 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.468676658525858 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.314527962658854 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.194826285044353 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.035951037155954 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.880723510469707 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.727397973720844 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.568725564811803 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.415887594223022 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.266647188751787 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.15650161882726 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.004183677305658 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.853887069792975 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.699709373361927 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.545635306557944 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.388712987132457 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.255211960185658 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.098792558305718 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.9426347149743 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.783457423304462 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.62712806204091 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.47184452446558 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.313647818058094 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.18442837815536 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.034046411514282 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.879334245760417 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.720340753088193 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.562125564825655 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.404321193695068 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.245824629717534 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.110166021421845 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.956261472794617 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.797309948847845 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.639901036307926 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.48277531030043 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.325352399148674 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.186658523700855 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.033179156277157 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.877888722853228 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.721331278483074 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.5642283814294 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.407768905690286 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.25364388917622 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.113439197125642 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.958233833312988 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.8012722944602 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.643195358373351 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.486781056187734 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.33287000656128 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.175799413160846 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.031593314936904 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.875253995259602 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.718025584374704 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.561157989501952 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.404223472353012 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.247129049826794 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.0923463255167 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.94715844568356 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.789372444152832 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.632244943662453 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.475960052374637 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.31992054523382 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.162568722198259 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.017136503148961 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.861921086030847 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.704824729557455 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.548633202262547 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.392920804538315 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.237660884857178 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.08266080017631 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.935832393001503 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.780732161515242 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.623902506298489 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.467784322541336 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.311247495755756 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.157223354391501 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.002306512884193 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.85343539954832 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.69758931795756 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.54135444464273 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.385298653652793 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.229486922033472 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.0745064407200005 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.9200047754472305 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.769426657603337 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.613836397790605 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.458155641072913 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.302219347383991 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.1479427218437195 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.993433899020556 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.838735336138878 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.688276555640566 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.533265677894034 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.377928697701656 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.223109750862581 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.067952124658459 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.913508188156854 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.760959611136532 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.60812045546139 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.453757990173429 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.299173521441083 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.149460820104346 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.9948272924313604 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.8406453813825334 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6888104243711988 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.5345808867007324 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.380293396081817 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.226158441778002 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.0720091925726996 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.9180925616901883 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.764249005160489 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.61260547273146 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.458481436190398 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.304221836296288 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.149995283413959 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9966473209666695 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8428817606986836 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.689141171319144 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5362445429751748 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3823760142501111 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.228548357884089 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0747849360648831 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9211955684976479 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7675567957071158 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6141872406005859 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.46071321952161454 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.30709800094065043 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1535499587130906 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.318 seconds)

**Estimated memory usage:**  1826 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
