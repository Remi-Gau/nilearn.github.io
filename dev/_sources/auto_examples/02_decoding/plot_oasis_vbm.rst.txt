
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8c8b9da940>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 189.06116485595703 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.836079120635986 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.582048892974854 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.754999319712322 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.163448333740234 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.848891258239746 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.552463372548424 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.7679774420602 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.5002384185791 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.242065800560844 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.006325006484985 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.76164252107794 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.538978576660156 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.362969471858097 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.379411016191757 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.348530292510986 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.848148941993713 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.807280722786402 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 29.827573352389866 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.505515311893667 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 31.20359230041504 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 31.664569729850406 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 32.314457850022755 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 32.68685099352961 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 33.103510697682694 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 32.994311571121216 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 32.46344689222482 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 32.042996380064224 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 31.568532058170867 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 31.12823702549112 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 30.716122309366863 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 30.31147693818615 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 29.91692179441452 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 29.541605682084054 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 29.1941775153665 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 28.927467073713032 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 28.596084382798935 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 28.271889886340578 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.955710260491625 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.64549439381331 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 27.341215133666992 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 27.047316923374083 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.808150143850416 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.52876223519791 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.254036708311602 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.980031066470676 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.716435297675755 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.453940391540527 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.199048161506653 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.99257830697663 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.748706102371216 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.514789109136544 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.279195272005524 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.045332125897676 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.80946005715264 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.58327510140159 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.382368905203684 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.178745039722372 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 22.961088591608505 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.742173045368517 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.524305025736492 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.30951286925644 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.10166598135425 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.89210481870742 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.724569708108902 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.54468396993784 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.35012603528572 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.154029839074433 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.956663496354047 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.763311382653058 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.569168737956456 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.400123394710917 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.21389940049913 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.02838941142984 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.83931332021146 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.651956160863243 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.468982483211317 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.28495818608767 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.119956652323406 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.941331051572966 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.759106993675232 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.58243735336963 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.404048367244442 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.227865741913575 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.05246080671038 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.88922321095186 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.71074071595835 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.532978381233654 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.35619740052657 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.18407978904381 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.010942776997886 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.83692453457759 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.68309816070225 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.511049119375087 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.34035829280285 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.17231194596542 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.004155139128365 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.838626652648768 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.673052306077919 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.506333266845855 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.367447137832642 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.199725009427212 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.031186066421808 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.864748160815934 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.699371411250189 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.533423628125872 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.369406034361642 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.220385344229012 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.055736109062478 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.891226013866039 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.730265205556696 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.56812367997728 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.405624508857727 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.244075996685872 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.09231106021948 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.929800448210342 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.767671946821542 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.606430310469408 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.447661803940596 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.287805793666038 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.127752304077148 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.976578877977104 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.815922182114399 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.655541497517406 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.496904696187666 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.339498949050903 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.18313333344838 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.02556041469724 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.875153243541718 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.717312825742617 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.559535356668325 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.402435164415198 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.247545235084765 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.092502753537401 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.937224455733798 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.781599954322532 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.633526858161478 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.477985778864282 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.322412245515464 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.168032579284777 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.013642992292132 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.859578163065809 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.706330604956184 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.55789905328017 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.404203070534601 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.250334065535972 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.097013568224972 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.944067337075059 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.790264838450664 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.639300149559174 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.490772167841593 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.337258744713486 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.184296808744731 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.0320273598814325 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.879951260306618 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.727555690273162 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.5758391832694025 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.427826611099729 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.275737614571293 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.123217015896203 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.971326231956482 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.819192825637249 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.669029762715469 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.517228022674841 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.368496243546649 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.2168434171965625 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.0652609101261 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.914499852471723 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.763437861487978 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.612313920929587 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.461512257071103 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.311042766124881 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.163413474726123 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.012903735816823 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8629587381735617 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7129299300057546 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.563131115653298 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.413315797256211 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.263923784320274 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.115914796317756 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.966216484705607 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.816737315931373 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.6675718171255927 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.518283575610385 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.369435704272726 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2206772984685124 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0730235115174325 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.924244283992339 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7755868637815433 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6271611067353102 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.478850013331363 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3306047516967614 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.182700047890345 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0351181610878266 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8869759938151567 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7389216789832481 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5909673194495999 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4430996476091104 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.29531198077731663 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1476195984749339 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  14.637 seconds)

**Estimated memory usage:**  1901 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
