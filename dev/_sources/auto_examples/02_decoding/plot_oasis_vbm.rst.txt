
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fd9954d3dc0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 185.05334854125977 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.740903854370117 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.287595987319946 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.584550778071087 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.10526943206787 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.220433712005615 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.84561618169149 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.520779439381194 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.32801055908203 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.10192529360453 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.933949947357178 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.733680053190753 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.80061610539754 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.620292755273674 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.4409282207489 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.28080185254415 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.132936120033264 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.946216961916758 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.760016785727604 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.616959396161533 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.537391424179077 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.35204275449117 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.18961314721541 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.0208086034526 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.844217936197914 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.67021083831787 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.49657834493197 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.401163233651054 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.22522296224322 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.056886039931197 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.89292065302531 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.738284426350745 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.58584439754486 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.43584182768157 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.33679600322948 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.167604071753367 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.016343858506943 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.864700259389103 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.714683896616886 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.565467388201984 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.40262222290039 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.257110665484173 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.145060936609905 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.997106224991555 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.849763545123015 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.700294653574627 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.550154592679895 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.402254348105572 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.257267276446022 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.152220983894505 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.002306699752808 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.85308280645632 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.73597834660457 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.608239925132608 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.484028860374732 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.356931144540958 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.26545810699463 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.139307611867 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.0166110828005 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.905046438766735 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.77369300524394 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.655949119661678 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.581986811853223 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.47489853510781 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.339186906814575 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.205108092381405 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.073129538333777 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.937671497686583 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.798457566429587 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.66724557461946 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.558603967939106 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.427094583779994 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.29431660970052 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.163735304793267 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.02565717052769 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.879847288131714 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.75024447943035 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.598388975316826 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.44940250959152 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.29961182195929 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.150384187698364 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.00494224936874 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.85547014562095 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.704040625009192 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.57294770649501 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.422964488758762 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.272150161654448 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.122567291917473 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.972925662994385 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.821342259310605 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.670436726676094 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.53375965160328 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.384062725564709 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.23701705214798 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.090166173082716 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.941664796126517 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.791822016239164 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.64232863347555 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.50935063556749 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.36384941351534 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.216756343841553 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.069312364748209 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.922661748586917 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.777970522352794 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.63229458148663 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.48750342641558 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.352049728609481 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.207745035118032 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.064408602537933 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.92018801575407 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.77545009959828 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.634362016712224 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.492483309337072 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.3577360241814 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.214744630612826 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.071318439815355 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.929566350476495 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.786850635822002 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.64521198353525 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.503508439584941 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.370468457539875 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.231335955217851 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.093873438287954 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.95394484977412 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.813257048206944 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.672874736785888 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.53159815546066 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.394982240331455 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.24922838807106 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.102803028831186 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.957193081195538 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.811517851953289 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.665989803545402 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.520730196085191 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.38098686132858 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.236268485033953 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.090805839089786 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.946841358268347 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.801612052364625 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.65736674919403 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.511870554515292 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.367599355413558 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.227950203586632 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.083150538531216 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.939079589313931 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.79468875095762 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.653099628343973 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.508504583722069 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.364227249815658 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.224503349137787 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.080928087234497 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.937410746189142 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.7935314429433715 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.650203492906359 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.50726293898248 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.3637725614732314 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.220903977369651 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.081951528597789 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.939320419408097 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.796240130310538 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.653099775314331 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.51020932641829 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.367339143046626 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.224414388094943 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.0847905961478626 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.942654038920547 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.805692046521658 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.6634071244451105 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.526463644845145 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.384073280018462 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.2415420448078835 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.101258252796374 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9595499814942827 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8174022897819566 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6751625784512227 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5329793861934116 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3907381296157832 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2486201625759317 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1080904301632657 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9661128094742417 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.824263572692871 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.682504597289786 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.540673478619083 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.398932957258381 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.257360147393268 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.116139502138705 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9754063390916394 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8341379165649414 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6938458554288174 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5531282740295247 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4122538064655503 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2711456770672225 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.130099316438039 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9896793266652161 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8486200288398978 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7071228271875626 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5657045014050541 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42423155707151156 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2827985816531711 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1414135113433378 seconds remaining)
    1991 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 8.915 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
