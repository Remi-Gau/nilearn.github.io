
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3e078cd640>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 177.20699310302734 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.33007502555847 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.131128787994385 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.258307854334515 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.85605812072754 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.642394065856934 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.387832800547283 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.14992656026568 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.94078254699707 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.76650794347127 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.60021471977234 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.412996508858424 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.29399267832438 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.14031217648433 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.02368439946856 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.86943825085958 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.74280619621277 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.602805642520682 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.480050431357487 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.4595094856463 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.32376742362976 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.193554878234863 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.043516657569196 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.915906522585 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.771881262461342 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.630618810653687 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.501128911972046 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.34909345485546 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.201953853879658 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.08103428215816 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.973580360412598 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.84419714250872 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.702334880828857 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.573288736921366 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.43430328369141 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.295903376170568 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.148538801405163 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.004490845912212 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.867125975458247 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.731732233976707 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.59775733947754 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.468590468895144 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.323963585354033 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.17779260457948 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.03369623964483 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.882922384474014 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.740345861600794 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.60143532651536 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.46744954586029 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.328410883339085 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.192670583724976 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.05382334952261 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.912041664123535 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.7793862774687 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.659767177369858 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.52586806904186 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.383578913552423 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.247745216938487 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.106103847766743 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.96346484200429 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.818655649820965 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.681898969118713 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.536964462649436 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.395028878772067 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.255405455827713 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.116872989214386 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.973675619472157 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.83499984243023 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.694525606491986 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.551009188527647 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.404992989131383 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.26672501966987 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.12856504652235 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.986698865890503 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.842352222751927 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.706666390101116 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.567980678457964 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.4311845797997 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.29178267870194 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.15110482445246 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.008335828781128 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.863062178647077 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.720701932907104 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.580314989549567 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.438690276373 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.296050127814798 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.154125396595443 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.009546373082305 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.873850388960404 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.737771650378622 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.609280215369331 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.46836165019444 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.325417788132379 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.1836989566844 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.040871341177757 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.896088248804997 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.75382492939631 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.611115529365147 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.474537679127286 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.33609069236601 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.19599199295044 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.052775000581647 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.91002883163153 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.768414295992805 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.62893265944261 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.485774494352794 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.341091425913685 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.198861151098091 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.056125075728804 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.914225969839533 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.77226675640453 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.631584397307387 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.49155752999442 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.348696001863058 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.20653241977357 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.066654713257499 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.92475016363736 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.783463885641506 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.642609802343078 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.50043589928571 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.357263882954914 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.218276248490515 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.075932702080149 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.932592735057924 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.789984049335603 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.647907876968384 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.50422690028236 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.361144630927738 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.218889385461807 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.076392768889434 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.934197664260864 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.79230523109436 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.65039918639443 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.51102818582291 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.369101296609907 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.246986698221276 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.137348399442784 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.018031445732952 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.87713186637215 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.733703976912464 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.612360307148524 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.492691491512542 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.354789884997086 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.213207770060826 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.0714772939682 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.928457490329085 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.786031318037477 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.642795249718388 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.498094056103681 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.352670706358532 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.207606792449951 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.062361461437301 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.917144875777395 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.772240232018864 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.627667086465018 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.482328138043804 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.338247769918198 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.193704650660229 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.049815715113772 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.905877360757792 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.760989487171173 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.615950913162705 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.470897391990379 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.3265279217000385 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.182156248790462 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.037968808954412 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.893311621194862 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.749267532440003 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.605053356715611 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.461535999760825 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.316889818976907 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.172252225597002 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.029712460761846 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8855276204258034 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7411426703135175 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5963683809552873 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.4517063986171372 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.307171020130653 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1628175826554887 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.0186845537004525 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.874469545152452 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.730056264782479 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.586216303018423 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4424576629055004 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2982242003731104 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.154236458443307 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0107184763877624 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8667425994567055 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7228855122911169 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.579160591912648 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4355725489164652 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2919321734243663 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.148186594247818 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0045582185755122 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8609912690428114 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7174147642575778 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5738744249149245 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4304138936367132 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2869400520517369 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14345386759120615 seconds remaining)
    1991 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  10.060 seconds)

**Estimated memory usage:**  1874 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
