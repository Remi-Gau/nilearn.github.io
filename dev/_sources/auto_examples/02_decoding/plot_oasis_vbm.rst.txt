
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6bbfb7ad00>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 252.16102600097656 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.77044415473938 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.978575706481934 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.421423037846886 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.688486099243164 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.22688937187195 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.876796325047813 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.58845455305917 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.358922958374023 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.356744554307724 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.184688329696655 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.98184657096863 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.76491355895996 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.545281960414005 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.376660006386896 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.26190185546875 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.15176808834076 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.00785413910361 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.961277855767143 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.828104571292275 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.703716039657593 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.580998205003283 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.44958298856562 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.331481560416844 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.216564337412514 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.09064507484436 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.98260411849389 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.91398111096135 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.779861041477748 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.649256138966 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.538835287094116 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.455409234569917 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.743954062461853 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.609307953805633 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.47513124522041 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.39117741584778 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.24349636501736 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.10850203359449 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.973414985757127 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.834245944634464 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.690231323242188 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.554081056176162 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.51522946357727 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.37240330563035 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.277327797629617 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.1456433667077 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.02141452872235 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.90759111972565 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.77394406000773 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.65209562437875 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.527036428451538 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.396019154903936 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.276414907895603 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.18234045100662 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.055781858938712 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.943962639028374 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.810264655521937 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.688339388161374 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.630031166405512 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.501408665867174 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.37413756052653 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.266757527335745 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.13505580348353 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.011706166797214 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.885590225458145 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.759053652103132 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.630957169966264 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.505168235124048 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.378328000797945 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.263770172561424 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.155538490840367 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.026645311167542 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.905186547173393 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.782751076842008 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.667221681491748 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.551687240600586 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.437590774736906 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.320716433710865 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.20453139451834 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.10206455218641 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.981253385543823 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.862277666727703 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.741995305549807 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.61775652471795 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.59466332481021 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.511997054604924 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.386136592820632 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.274581470708739 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.1527118249373 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.0393281063337 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.918672005335491 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.792947067009223 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.66955786165984 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.545413040345716 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.421852416180549 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.295413870560497 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.184457123279572 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.059822055482373 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.939266817910331 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.819766986249672 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.701363325119019 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.5798445314464 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.45703655130723 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.335484296372794 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.215752234825722 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.102787540072487 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.984088007009255 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.864180948132667 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.74572949939304 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.627514937602053 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.508884386582809 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.388614862888783 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.26969872202192 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.150545042172997 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.041258272371794 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.928397323774254 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.811915964915835 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.69616902180207 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.58005266270395 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.463502667531246 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.34402831395467 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.225758639248935 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.11716410761974 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.997825828025011 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.878447924890827 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.760381746292113 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.64192044924176 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.523528273650042 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.40421338379383 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.28576774929845 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.167530059814453 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.05306939132341 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.934045379812067 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.816330723296431 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.697254892605454 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.577855357417353 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.459217408124138 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.354231147000389 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.257984551830568 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.143869784238527 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.025514568601335 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.907024063962571 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.787723601703912 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.669373652318141 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.550987905926175 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.4327363885682205 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.314716453421606 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.195927259873371 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.080460683719532 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.961743274791129 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.842986901601155 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.724858546099126 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.606953269556949 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.488201692992566 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.36977033800893 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.251735141200404 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.1334073176750765 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.0179710691901525 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.900290727615356 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.782970103077918 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.665202975273132 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.548658954430811 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.431476690151073 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.31363250434033 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.20151310432248 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.083558284875118 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.970250574939222 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8533241306236405 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7367408389136902 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.619578585822201 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5021505496081184 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.384471505706073 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2675157535907835 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.1502389714897023 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.03305109890028 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9184091431753973 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.801155231215737 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6843552522066623 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5675118799959673 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4506188411286423 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.333188878165351 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2159579801296 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0990981191069213 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9829984440829587 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8660778377367102 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.749258060713072 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6323520957782705 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5174663513101996 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.400265242191071 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2831966914827861 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.17111379221866 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0567804094384479 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.93947301308314 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8219831076310705 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7045313623762622 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5870052423232641 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4695930724241295 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35213499141828664 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23475448049680153 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11741021889538023 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.954 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
