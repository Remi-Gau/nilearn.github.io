
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fdbd94adc40>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 185.07957458496094 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.278648853302 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.207658052444458 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.253632148106895 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.74616026878357 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.33571434020996 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.992855548858646 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.697995526450022 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.445632934570312 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.240138027403088 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.06944990158081 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.920249440453272 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.754878282546997 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.63500556579003 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.49083948135376 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.343801975250244 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.205583214759827 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.04347213576822 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.889566553963554 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.708041090714307 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.532357454299927 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.371523754937307 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.20755499059504 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.037901474081952 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.873042106628418 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.71809411048889 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.576636094313404 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.42702931827969 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.273922886167256 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.111503214671693 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.95578447977702 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.810790561860607 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.67591154575348 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.552474672144108 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.42391419410706 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.310394763946533 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.216471831003823 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.080991667670173 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.951315716693276 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.816433044580315 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.68533420562744 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.54852481586177 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.402173065003893 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.25936502079631 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.11177088997581 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.97912414868673 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.838752363039102 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.70005720726987 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.55718640486399 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.415488247968714 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.274548768997192 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.128532489140827 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.988133100362926 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.841137382219422 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.70723069155658 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.563188704577357 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.417973722730366 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.268845127339947 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.135476942720082 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.996616351402412 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.855194091796875 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.716433755687028 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.57438915775668 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.431196015978614 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.28474798798561 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.140370625715992 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.00095638361844 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.865003817117035 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.727068732766543 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.58161238656528 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.43847448485238 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.29352172327713 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.147736443413628 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.00373524835665 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.86338601885615 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.72172292073568 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.579796904011776 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.44535869127744 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.29917452274225 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.15330937240697 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.008082270622253 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.862729422840072 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.722940596138557 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.58203237889761 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.440102406910487 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.296204959644992 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.15218267884365 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.01029267804376 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.866659121079879 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.728279829025269 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.586479584376018 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.446790207873333 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.304719904194709 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.160468503993046 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.015861374266604 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.87567108555844 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.736158629258473 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.591537180635118 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.448620402083106 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.305079674479936 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.166712522506714 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.023982543756466 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.880453525805006 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.738789792199738 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.601226073044998 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.459257875170026 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.322017044391272 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.178763360620659 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.033492114808825 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.893837416937592 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.754333214326339 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.614515706225559 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.47066605091095 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.327644835531183 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.185116533647504 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.041802064232204 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.90016768718588 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.761166709101099 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.621772305440095 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.481100787635611 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.34225829442342 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.200969623140068 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.058105222514419 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.91695286587971 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.776102665931948 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.635973834991455 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.49402688041566 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.352214037902712 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.209757000207901 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.067891248436862 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.924837534244244 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.782448766795733 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.640468684109774 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.500282097579841 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.358808553040916 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.216509086114389 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.073121126960306 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.931527487552948 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.790304608966993 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.6484125363741 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.50686866896493 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.365153645792752 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.223369732709 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.080740191719748 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.9383802149030895 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.797312259674072 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.655649505249441 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.513360317061548 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.370749815090283 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.228758141498438 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.086998224258423 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.944922058787567 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.803697033932334 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.66185871136734 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.5199349607740125 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.377798334244759 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.235587871991671 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.093364745947965 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.95170227485367 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.809592509419663 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.667858242988586 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.526051938903999 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.385400457146726 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.243362239533407 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.101245333508747 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.959330696048159 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.818247183259711 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.676952483411321 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.535020692007882 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.3927274568546455 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.250707962933709 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.108917582104778 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9674311349558278 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.825684789977322 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6840807761269057 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.54253465788705 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.4008997028524224 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.260055601260083 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1180989661913237 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.976363722838503 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.835137393739488 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6934877061053535 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5521207458370334 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.410935495720535 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2693785791811734 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1275835746043437 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9856868943860455 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8439171518234008 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.702256015006532 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5604309367124365 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.418549010628148 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2765595825554814 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.134643127520879 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9928956056505904 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8510016387270898 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7091230368002867 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5673486018667415 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42553596932270804 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28366597734316434 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.141829252243042 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  15.747 seconds)

**Estimated memory usage:**  1931 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
