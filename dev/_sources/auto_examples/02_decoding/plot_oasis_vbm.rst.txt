
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f18eb1313a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 175.15182495117188 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.802056312561035 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.652710676193237 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.493144671122234 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.897905349731445 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.54945969581604 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.148694038391117 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.887846163340978 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.635303497314453 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.411273294024998 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.194044828414917 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.995820457285102 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.82371497154236 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.658066822932316 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.482197114399504 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.325289805730186 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.160807132720947 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.00900805697722 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.850676430596245 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.69967405419601 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.570152044296265 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.42347248395284 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.274934313514017 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.13287205281465 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.985814253489174 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.855209350585938 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.71187371474046 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.57372863204391 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.44122576713562 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.302766553286848 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.16231449445089 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.021616143565023 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.88846617937088 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.765279964967206 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.63131141662598 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.49278381892613 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.360247903399998 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.22040051382941 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.083597358904388 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.952724860264706 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.822166442871094 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.687755701018542 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.554199093864078 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.42120743906775 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.293845306743275 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.168214321136475 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.027804706407633 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.895933161390587 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.816197872161865 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.71377592184106 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.60283088684082 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.485774947147743 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.359651235433727 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.226442737399406 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.09127887973079 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.954995848915793 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.821985789707732 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.686628785049706 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.551319697807575 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.417026669292124 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.28229594230652 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.147372155893045 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.01379003832417 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.881308355028665 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.748959064483643 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.616063649837788 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.486783453912444 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.35252444779695 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.21992526334875 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.087231280147165 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.95778581074306 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.82443121789207 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.694103240966797 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.562966977080254 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.431282597619134 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.297849416732788 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.166484757473594 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.033935274396622 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.901452963168804 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.780116645595696 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.648864269256592 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.517535000671575 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.384961058453815 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.254927322088953 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.122567494710287 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.993019314373242 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.862393495648405 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.7318496731506 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.600485584952615 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.470842015877198 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.338709407382542 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.206707000732422 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.075163665025132 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.942002498975365 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.816872688049965 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.687798788673001 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.55684463183085 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.424953268975326 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.293723339937172 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.16470904783769 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.03342604637146 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.90239922126921 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.77149122836543 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.640423031686579 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.510288531963642 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.378939367475963 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.247960666440568 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.116396219930916 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.985184033711752 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.854260473076357 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.723767844113437 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.592450597264746 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.461335403578621 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.329323715868249 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.197870622601426 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.067726777947467 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.937711205975763 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.808151546706501 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.678975683147625 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.54927102858279 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.4189821879069 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.287822500733306 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.156396689962168 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.026052562201896 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.896305276501563 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.767373704910279 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.637335970288232 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.506957377035786 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.376459300518036 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.246414234471874 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.116140017142662 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.985515929360426 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.855305469397342 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.72508548435412 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.595410617429819 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.464787986543444 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.334426543291878 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.206547378623572 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.076091679973878 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.9454700003425 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.817331382206508 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.686982660428852 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.556863210570644 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.426228348191802 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.2957835462358265 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.1652973438131395 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.034989837097795 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.904434783118112 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.7741584197894955 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.643717336974688 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.513563632965088 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.383532484635612 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.252640222248278 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.122460960562712 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.992321277593637 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.861645936965942 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.7330271402994795 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.602590392349632 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.472345213346843 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.341762551721537 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.211426198482513 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.080870450653645 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.9507737807285634 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.820673146862194 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.69133586418338 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.561179717381795 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.431125543203699 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.300872948355304 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.170723597208658 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.0403688447715265 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.9102352506974167 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.779875536411129 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6494969323624016 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5194394671158986 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.3891254156485373 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.258721351623535 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.128278548067266 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.997963650751922 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.86757639284884 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.7372816048520905 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6068680551317 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.4765430761305667 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.3471525815817027 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.216787105049592 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.086384089096733 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.955919394621978 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8258150239144604 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6953302232976903 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5649765856722566 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4346115891895597 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3041409693266215 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.173727081708259 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0432988405227661 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9128549136028388 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7824612622408523 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6520146039816049 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5216053894587925 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3912072084881933 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26078957018226084 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13038969519150317 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.531 seconds)

**Estimated memory usage:**  1849 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
