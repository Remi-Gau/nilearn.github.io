
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f05ff8d7a90>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 177.79111862182617 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.66025137901306 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.359829425811768 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.54851579666138 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.985640048980713 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.651522636413574 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.3547637462616 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.051974126270842 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.80973243713379 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.50491589970059 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.25877022743225 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.10492626103488 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.92754276593526 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.71206776912396 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.527570520128524 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.407851854960125 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.384969115257263 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.375513834111832 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.462509685092503 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.309107140490884 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.15564489364624 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.996628942943754 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.826219688762322 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.65463741965916 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.49319362640381 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.326407432556152 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.16570157271165 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.013128642682677 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.852873768125264 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.737212189312636 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.586116949717205 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.42668068793512 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.271008610725403 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.1125782475327 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.94925757015453 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.798749923706055 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.70036623213026 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.547201865428203 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.38664874277617 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.236515876574398 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.08347225189209 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.93152140989536 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.777452820823306 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.63126566798188 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.483617652546275 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.342324097951256 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.19744105961012 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.049453988988347 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.901306549708046 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.7551331714708 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.614032745361328 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.47017242861729 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.32443195122939 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.18043914381063 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.03649782251429 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.885669166391544 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.73696838106428 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.594267401778904 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.451561237203663 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.309129282579583 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.166348854700725 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.022068273825724 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.879885750432166 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.734661825119503 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.588767141103745 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.440458811246433 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.296300981983993 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.153157170139142 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.006797257591696 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.858187278111775 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.705766780035837 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.570111268003224 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.42341868082682 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.274688514944625 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.131087180730457 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.98936128616333 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.84283356917532 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.699403846418704 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.5551925439101 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.410668892196462 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.262871742248535 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.117762930599262 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.969365439763884 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.82258451703083 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.676548832938785 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.533956976497876 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.39331829270651 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.252095485555717 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.10803829539906 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.96339665370041 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.820184230804445 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.677388971978491 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.534330616826598 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.390399430387765 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.246879329072668 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.104466639066999 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.960519969463347 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.815299574861822 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.668410038461491 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.521680788560346 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.375622034072876 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.231584140569856 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.08922319318734 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.946379786556207 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.802980129535383 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.660054513386317 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.521730895312327 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.37608128173329 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.23079546292623 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.087756279411666 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.9430975263769 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.798967604164606 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.660482287406921 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.519644901815768 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.375896340922306 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.233015029326728 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.091175868593414 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.949052865688618 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.806250483302748 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.662756192583998 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.51762278874715 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.372292776738318 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.22611436296682 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.082673210438674 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.938513171288275 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.792926836013793 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.649098967748975 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.503564059265017 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.35865581035614 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.212488087572792 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.067798082645123 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.9240845814916 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.780474973447395 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.63707444900857 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.493227791430344 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.348941794148198 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.208163878496956 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.063799830248756 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.920114461926447 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.774872220677437 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.63011029788426 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.486057597694668 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.341567227538203 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.198571681976318 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.055369337399801 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.912354247323398 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.768571504174846 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.625025937346375 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.480628619322906 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.336575484115806 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.196869611740112 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.053140247104973 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.909453241448653 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.765773093778324 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.624142823281226 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.480058677734868 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.336688934228359 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.1924451566805505 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.0480575712421265 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.904149923684462 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.760079443454742 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.616236446807103 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.471995318377459 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.3277057255703975 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.183595064209729 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.03919572541208 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.894832906952823 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.749920042688975 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.605171067374093 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.460526191271268 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.316271122764139 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.171926573703163 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.027809298315714 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.883714645584195 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7394594598090514 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.59601160458156 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.451755198565396 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.3113934131665417 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1674134168732033 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.023284619080954 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8791770935058594 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.735138346477108 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.591030461447579 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.446971726547825 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3029743070187774 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1591653437227816 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0152154353357132 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8711610273881392 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7270700627184927 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5830668986789762 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4390219763705605 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2950891699466407 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1512121657530465 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0072662002682067 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8633535375300142 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7194726467132568 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5756284655356894 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.43171949677055865 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.287812428040938 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1439147115352765 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  9.756 seconds)

**Estimated memory usage:**  1907 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
