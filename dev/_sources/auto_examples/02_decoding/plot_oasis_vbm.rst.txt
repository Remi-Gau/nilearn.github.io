
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f995220ec70>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 172.37186431884766 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.376993894577026 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.232120990753174 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.41982690493266 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.688904762268066 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.276067972183228 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.843740940093998 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.69595125743321 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.40772819519043 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.112006187438965 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.965455055236816 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.956801913001325 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.75764807065328 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.54346935565655 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.331173181533813 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.152668873469036 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.981741786003113 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.797210244571463 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.62068756421407 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.58998387738278 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.41780948638916 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.236870300202142 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.0755174593492 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.941499139951624 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.789289315541584 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.64983868598938 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.59835512821491 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.455856526339495 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.316441842487883 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.18009411055466 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.046571969985962 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.90547768531307 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.76234132051468 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.628324645938296 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.53857635049259 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.39971899986267 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.26794878641764 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.13569842158137 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.998620823809976 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.870708538935737 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.73313808441162 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.645146404824605 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.50878095626831 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.369805491247842 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.231238993731413 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.09876775741577 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.955722269804582 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.814350929666073 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.67583648363749 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.572844768057063 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.429253101348877 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.304150515911626 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.19469866385827 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.09882670528484 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.98142201812179 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.850068200718272 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.74168062210083 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.611368426105432 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.467040423689216 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.329244439884768 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.245760361353557 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.100739146842333 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.95933578860375 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.840673321769348 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.697522431612015 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.55038697902973 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.41282884279887 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.27289291638047 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.12949536828434 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.985886819120765 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.871022530964442 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.727697587349045 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.58389409383138 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.44324021470057 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.298621712504207 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.159637212753296 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.016758579956857 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.873837737293986 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.75279560455909 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.608895944643624 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.487101435661316 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.362019500614686 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.219043406044563 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.081030248159387 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.937397763842627 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.8098523757037 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.666599318038585 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.523603368079526 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.383430134166371 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.243264439400662 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.101470867792766 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.960135087862119 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.81987298053244 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.689768132343088 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.547063761569083 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.411869187104076 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.27064808209737 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.135522972677173 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.141582235998037 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.030966346914116 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.009348630905151 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.987507284277736 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.867287794748943 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.720522470844603 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.572520109323357 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.438152392705282 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.290555742551696 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.145251570460951 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.99774576999523 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.849994792850739 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.702266367998991 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.554365622030723 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.417146376201085 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.269561664193077 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.124809419899655 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.979515013487442 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.8344105769848 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.689224821889503 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.544675107729638 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.41020986813457 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.264355182647705 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.119294075926474 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.974053703370643 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.829904405082143 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.685251389780353 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.541880083084106 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.398805784800697 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.261958805594857 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.117744088172913 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.97420760827471 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.829703386013325 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.686247525324347 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.542328379370948 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.399077155536279 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.261789257846662 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.120543488749751 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.979043062995462 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.83601459621513 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.693525884462439 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.550411407896084 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.40743555341448 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.264638921047778 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.12667696240922 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.984913534217781 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.8424127499262495 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.699860893446823 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.5575911476187505 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.4155980243163855 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.273748436489621 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.13630131907111 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.994482358296712 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.853307193478211 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.711763256474545 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.571590275546305 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.430448643572919 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.289272700586627 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.148213050304315 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.009803314877164 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.869096638281134 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.728005689644964 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.58669900894165 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.445699976097723 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.304896201616452 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.164011390662632 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.025629334333466 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.885276628263069 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.744760725871626 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.604265479984398 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.463615553719657 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.3232229814021546 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.182696230271284 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.042417395184612 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.90425134259601 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.764641086490168 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6242103247806945 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.484291178839547 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.34485096281225 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2056114229105286 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0655712358067544 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.927154220016309 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.787915786107381 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.648074226484773 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5083152383238403 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.368443803057645 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2286900644717007 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.088954023412756 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9506081919516287 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8125669803211395 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.67281496271174 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5330729686393938 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3934095533270585 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2538569947187814 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1142863531907399 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9747732649195379 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.835720045050395 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6962776428613907 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5569114879686005 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.41760666600338703 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2783423939136544 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13913798452022688 seconds remaining)
    1964 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.597 seconds)

**Estimated memory usage:**  1930 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
