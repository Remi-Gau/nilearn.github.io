
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1c34067850>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 278.89490127563477 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 52.087345123291016 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 47.973140716552734 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 47.262420018514 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 47.14798331260681 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 47.375038146972656 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 46.75542934735616 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 46.42547430310931 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 45.938621520996094 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 45.87710007031758 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 45.702260971069336 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 45.30528942021457 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 44.92949414253235 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 44.83835321206313 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 44.50979917390006 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 44.07952888806661 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 43.751561999320984 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 43.47252631187439 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 43.393312003877426 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 43.06850233830904 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 42.796754121780396 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 42.58191666148958 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 42.50375242666765 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 42.22796808118406 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 41.92507584889729 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 41.52158451080322 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 41.349526790472176 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 41.27071137781496 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 41.009983028684346 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 40.75998914652857 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 40.502097606658936 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 40.39807678807166 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 40.14446979761124 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 39.92130867640177 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 39.72237031600055 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 39.64166726384844 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 39.40938025050693 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 39.09581979545387 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 38.82654924141734 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 38.5207213927538 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 38.37215518951416 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 38.13184840504716 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 37.88139320555187 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 37.657869777014085 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 37.45765055309642 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 37.182745191786026 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 36.91177599326424 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 36.65850956896518 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 36.47446207205454 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 36.20671134578939 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 35.915051221847534 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 35.64543394013947 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 35.398782638403084 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 35.19332687359936 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 34.9420762680195 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 34.672828370874576 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 34.41470779691424 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 34.23763598893818 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 33.970113606288514 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 33.71376886610257 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 33.4419158299764 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 33.16998149527878 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 32.9560221087548 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 32.688485743507506 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 32.48111814260483 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 32.25584930640001 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 32.054937080903485 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 31.801420350572954 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 31.542992086971505 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 31.2906567013782 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 31.023745741162983 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 30.803036484919804 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 30.53743447197808 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 30.28161837956677 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 30.029556880126126 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 29.834838708241783 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 29.583554857655574 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 29.337388710542157 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 29.116025808529976 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 28.927343531499933 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 28.741838693618774 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 28.509127325481842 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 28.264261670228912 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 28.06461586147906 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 27.81959056854248 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 27.58647460096023 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 27.348348573196763 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 27.110905756895573 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 26.901778481223367 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 26.665599032734217 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 26.43481058544583 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 26.189448160129587 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 25.967669808346294 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 25.711550458785027 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 25.469258886702516 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 25.22530979859202 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 25.00175873438517 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 24.748044952903825 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 24.499670330359013 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 24.25077627885221 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 23.994999647140503 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 23.76095372851532 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 23.516025445040537 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 23.283202949079495 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 23.038767374478855 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 22.8177136693682 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 22.576495436002624 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 22.33534185908665 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 22.088351223203873 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 21.84195132649273 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 21.6267193664204 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 21.384379285949844 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 21.150487116404943 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 20.894628638714813 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 20.66486965145981 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 20.425264234128203 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 20.185023529776213 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.938220472417328 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 19.708320088305715 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 19.46364471090942 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 19.21861918767293 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.9710156878164 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 18.723130163599233 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 18.48382655973357 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 18.236085384122788 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 18.002972030639647 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 17.75892504434737 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 17.526094894709548 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 17.284683153033257 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 17.041195852811946 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.79339940731342 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 16.560569908782725 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 16.323860320177946 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 16.085385693643328 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.842718430419465 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 15.600381277225635 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 15.367151933557846 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 15.123818735136602 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.875168821086055 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.632659445563666 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 14.397808926446096 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 14.154789101147482 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.91194577620063 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.674765216720688 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 13.483217848671808 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 13.305174104098615 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 13.130920485274432 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.904352296777324 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 12.656166302191245 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 12.40840051318175 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 12.161831776301065 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.923014580808728 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.676828484786183 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 11.430814161799313 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 11.187151370110449 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.941964941640055 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.702529821640406 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 10.458471612565836 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 10.210824468467807 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.964475271836767 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.723719120025635 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 9.479325713578218 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 9.231903735502266 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.985324096094612 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.740207776790712 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.505576494968299 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 8.26300625915987 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 8.017779799992454 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.771821657816568 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.530162155275514 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 7.286331232856302 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 7.04063268014562 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.795897384022558 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.554646128174887 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 6.3092104922765975 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 6.065421172550746 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.820629954338074 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.575824567827127 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.3346965393323575 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 5.0917534042337085 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.847192896736993 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.603942702488346 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.364902897195502 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 4.123228658092478 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.881149043207583 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.6381104572399243 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.3962771995093233 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.1535437553324166 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.909951494095173 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.667800155266252 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.425222961526168 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.1831037186827333 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.9402315318584442 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6976757049560545 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.4551818321660623 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.2130825764093642 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9702722685677664 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.7274912250828622 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.484892259944569 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.24254901205475007 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  45.471 seconds)

**Estimated memory usage:**  1898 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
