
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc762ce65b0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 210.74771881103516 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 34.176318407058716 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.73619318008423 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.175628503163658 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.60177516937256 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.208833932876587 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.8064976533254 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.487648589270457 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.259361267089844 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.072332090801662 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.936981916427612 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.80510247837414 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.629225095113117 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.43902934514559 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.34107211657933 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.188877820968628 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.02225410938263 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.844114696278293 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.68264720175001 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.495329129068477 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.31706714630127 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.15277327810015 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.99280795184049 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.809857503227565 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.63651974995931 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.458022117614746 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.28936294408945 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.126072998400087 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.957823957715718 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.78910945201742 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.628390550613403 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.4628318894294 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.29360544681549 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.12765211047548 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.966621244654938 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.805900812149048 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.648842573165894 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.496989475714194 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.34125856349343 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.187909609232197 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.039652824401855 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.888894546322707 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.735080582754954 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.601957138194592 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.451850500973787 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.32189366552565 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.175498941670295 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.017042606434924 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.859322905540466 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.70694479650381 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.552252292633057 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.397564621532663 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.24425251667316 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.08527183532715 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.928547082123934 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.774587934667412 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.616196496146067 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.461679119812814 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.317792900677382 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.16893697997271 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.02297616004944 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.871771144085244 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.720891983278335 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.571499324980234 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.420228391885757 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.270994021342354 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.116893956155486 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.96826278273739 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.812533518847296 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.659562950548917 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.504959992000035 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.353695224708236 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.201649559868706 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.045892901616554 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.89568533768525 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.744104305903118 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.59122317715695 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.436893336184614 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.287570947255844 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.13871857184398 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.985097646713257 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.839153001337877 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.685875596069707 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.541501510574157 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.388818718138197 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.23709767005023 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.083511202834373 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.93003829320272 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.77943641489202 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.63141766558872 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.482144435246788 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.330829528661873 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.181300702302355 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.03048841671277 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.88118810856596 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.728532201365422 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.577694714069365 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.42522840401561 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.2783181959269 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.13001132733894 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.983594417572021 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.83986767447821 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.694316985560398 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.549269648431574 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.40084171295166 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.251064754667736 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.099708737067457 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.947086394390213 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.796544746116355 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.645751268491832 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.494445779106835 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.34374957256489 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.192722422736031 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.041989058519887 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.892893674080833 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.743917859118916 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.59300920881074 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.442225189290495 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.294470108161539 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.145407758840994 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.99535322189331 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.845412555804923 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.69560597763687 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.549525551679658 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.399907735086257 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.25034303665161 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.09976747679332 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.949640095703245 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.799712359905243 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.648973261663155 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.497783018992497 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.347599853996101 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.19645914886937 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.045608482862773 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.894729575114463 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.743375804689196 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.592069962445427 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.44198830980454 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.291370682094408 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.140393169663792 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.997170754841395 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.847144600347423 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.696371421008044 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.546339120064582 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.396180431048075 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.246137717674518 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.096372307163396 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.94747704389144 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.797516945246104 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.647515869780675 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.497052828470865 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.3471311622897515 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.196182025106329 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.046063600801954 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.896867182347681 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.7482278039378505 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.597294709621331 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.4464337932076425 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.2963005651401565 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.147539155288312 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.997445344924927 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.847428314434076 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.697304554927496 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.546821298774766 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.3982980193161385 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.2477522546594795 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.097857093236533 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.947443422443139 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.797170502798898 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.647589605940869 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.4978419892928185 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.347714104847601 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.197809502135876 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.048142269167597 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8983630887393295 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7485511984143938 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.598589008504694 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4486789043340305 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2985725134945985 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1485286078639536 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9984263314141164 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8483259045616696 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.6983696838001627 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5484532866973044 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.398524927056354 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.248559552270013 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0987035535996963 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.948773529440324 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.798928991277167 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6488782135897841 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4989192360325863 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3490582598441558 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1991894940535226 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0492744235794778 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8993866910639498 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7494812989846253 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5995719676115074 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4496632154822955 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2997726912450309 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1499067910352544 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  12.850 seconds)

**Estimated memory usage:**  1846 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
