
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fec2050ab20>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 221.15230560302734 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 41.66750383377075 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 37.355180740356445 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 35.73515439033508 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 35.19036149978638 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 34.61020517349243 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 34.299449125925705 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 34.20392748287746 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 33.8891544342041 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 33.53096781836616 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 33.36559081077576 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 33.09540776772933 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 33.09941466649373 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 33.22874879837036 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 32.98815986088344 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 32.75977563858032 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.44827616214752 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.2153361825382 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 31.9528042740292 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 31.877668694445966 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 31.643912315368652 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 31.409569002333143 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.169580741362143 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 30.937587603278782 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 30.723187764485676 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 30.56487512588501 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 30.316791882881752 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 30.190150932029443 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 29.96852016448975 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 29.726373713592 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 29.516645908355713 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 29.41051827707598 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 29.2018883228302 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 29.012908408136077 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 28.83021249490626 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 28.640355961663385 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 28.43732272254096 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 28.317054097716873 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 28.126672456139016 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.92966636633262 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 27.747197151184082 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 27.549608038692938 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 27.36911676043556 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 27.195368883221647 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 27.002438566901468 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.835589090983074 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.62709931705309 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 26.44167342591793 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 26.258281032244362 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 26.118563763949336 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.927195072174072 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.752225450440946 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.566037214719334 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.385764630335682 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.234971858836985 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 25.07113994251598 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.890030929020476 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.708330635438884 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.529892395282612 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.35179127272913 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 24.201661507288616 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 24.003515130183736 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.8263769765054 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.64184186193678 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.464685320854187 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 23.283624447309055 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 23.192211736332286 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 23.007870442831695 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.82441753499648 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.648909081583437 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 22.463249853679113 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 22.275699014395055 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 22.120340983072914 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.943223966311102 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.768103857298154 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.58639113108317 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 21.412406933935063 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 21.236176571288667 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 21.08453554373521 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.90685517576676 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.73280620574951 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.554180836971895 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 20.375568227070133 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 20.199953340622315 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.040268137341453 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.86042917475981 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.683730036713357 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.505113705821422 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 19.332454854791813 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 19.156849341446094 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.99922773573134 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.82294853703006 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.647781931835674 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.47223154191048 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 18.298481636859 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 18.120608681126647 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.959810535113014 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.785492597167025 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.608072509571 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.429752162008572 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.248364686965942 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.069332172374914 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.905032097124586 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.725313617187798 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.54537010192871 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.370626960481918 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.194976806640625 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.018809764184684 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.853679807097823 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.678944277107169 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.50054110180248 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.325054551030066 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.153426596096583 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.979213636533348 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.817551608671222 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.652060653852379 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.476471473430765 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.303342173242163 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.129534547611819 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.953807153621643 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.786657651265461 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.61337879866608 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.438397814015874 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.267026829525706 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.094773430978098 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.91950216293335 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.753189647008503 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.579837996189989 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.406718462705612 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.232003557589627 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.056247491102951 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.882772549418092 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.71421936786536 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.539704491321306 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.366060064799749 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.191698109662092 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.015731362735524 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.842087475922856 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.675603859666465 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.501571524915077 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.32588631766183 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.152792891712053 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.978464851916677 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.804814043578569 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.636506160100302 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.464956201356033 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.290807012009294 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.115958882026932 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.94207821021209 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.768621667119481 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.602415561676025 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.42971156606611 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.25596214595594 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.091369007147994 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.917183783147242 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.743577987917009 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.574485503710233 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.400181560759331 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.227310787273358 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.0546526474023015 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.881201982498169 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.7074465262963905 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.538002594017688 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.364785656607224 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.190996710847064 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.018124045747699 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.844418080456285 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.671067017994955 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.506222361610049 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.333504580887111 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.159848956500783 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.986973381879037 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.814367222231488 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.640906678458859 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.470405564911064 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.298001425606864 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.125059951435436 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.9519843435556874 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.7795032276196423 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.6068507666028413 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.435658772786458 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.263514742666845 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0915123184958655 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.9192972626191023 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.746785101683243 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.5746967405886263 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.404077106906522 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2320542475756477 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0599583767830056 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.887995193875025 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7163150310516357 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.544556189581986 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3733736276626587 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.2015127789788913 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.029832495856531 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8581386590615296 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6863627579747413 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5147086230631407 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.34327005617546313 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17161820521905793 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.223 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
