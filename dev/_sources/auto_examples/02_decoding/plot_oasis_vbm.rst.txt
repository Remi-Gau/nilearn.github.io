
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f693ad14970>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 150.93564987182617 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.36833620071411 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.470245122909546 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 22.695285161336265 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.238733291625977 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 21.94820237159729 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 21.71816897392273 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.50690988131932 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.52920913696289 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.336122751235962 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.204578638076782 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.080804586410526 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 20.90911761919657 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 20.758187752503616 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 20.627249888011388 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.515145301818848 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 20.373827815055847 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.328443569295548 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.2023413711124 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.074991916355334 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 19.94600486755371 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 19.820842901865642 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 19.692937200719662 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 19.586064701494966 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.47889216740926 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.363165140151978 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.31492488200848 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.194704753381234 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.068006174904962 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 18.95882616371944 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 18.834811766942344 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 18.71550585377601 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.601796329021454 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.484347025553387 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.368856752620026 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.296634231294906 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.183754788504707 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.065975492065018 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 17.957907613955047 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 17.861397730998505 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 17.747329711914062 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.62727700791708 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.5127177351997 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.40254577925039 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.31913206794045 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.20301143328349 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.08941345629485 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 16.985193364163663 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 16.871594786643982 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 16.754589980962326 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.882320642471313 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.773240061367257 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.660519013038048 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.575920293915946 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.460658841662937 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.34690161184831 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.226661954607284 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.106755612189307 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.992882325731474 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.88198488041506 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.767210563023886 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.652430901761916 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.561920342906827 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.455344665618169 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.343392252922058 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.223232966202957 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.103529063138094 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.98640322329393 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.871856507133035 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.784448471622191 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.711849893842425 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.593211012826838 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.47823248969184 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.362743047818746 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.244745344729036 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.128526051839193 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.013132471787301 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.896361809272271 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.778558761645586 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.676227101796789 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.5608811378479 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.445702773553355 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.329672307502932 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.212922484041696 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.096436080478487 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.979669094085693 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.86418171261632 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.747737547446942 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.644288366491145 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.52812330642443 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.412784152560764 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.297080333416279 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.180959950322691 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.063740286775815 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.947880957988982 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.834169651332656 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.72004920244217 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.603471896083084 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.497393398868795 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.381761351017035 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.265108108520508 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.148285322850294 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.032949742148904 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.918658950953809 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.876120640681341 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.765036617006574 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.657284061863738 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.540756261237314 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.423842403623793 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.30822272694439 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.193316546353428 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.07997432055774 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.966440796852112 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.850725161290802 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.734889335799636 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.627970156462295 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.513380404176383 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.398869049854769 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.283265829086304 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.167948893138341 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.053116639455158 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.93757027239839 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.822310119378763 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.708351158514255 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.599552600614487 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.485658740997314 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.37051828702291 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.257457832651815 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.141610905528069 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.02661972267683 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.911541095146766 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.79616689318009 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.68101979746963 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.570220296544241 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.455616385189455 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.340314273481016 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.226156571332146 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.112027124766886 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.9975401629572325 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.88335293660061 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.768852915082658 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.65572383386869 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.54678884694274 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.4335697364140225 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.319056510925293 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.204314149659255 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.090255329053695 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.975597671911019 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.8614756738817375 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.747758017290359 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.633479277292887 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.519766970186044 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.409254927384226 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.295616232491787 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.181632568309833 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.068396637516638 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.954732442513491 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.841497861655655 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.728155443939981 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.640761910744433 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.5298773646354675 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.416538713881688 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.303251952300837 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.1899246730687425 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.076293352173596 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.962386376930006 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.848219656082521 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.734256510249155 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.620747611636207 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.508749414477828 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.394790242700016 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.280825492234258 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.1668463584988618 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.053752787540414 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.940400633318671 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8275601863861084 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7142704183405093 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6006996052413336 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.4885656244299383 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.3750475252140832 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.2616435951656766 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1482120324234937 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0348547919765934 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.921554868989955 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8082726727361265 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6950226152265395 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5817073006783762 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.469237947208996 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.356011243576699 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2428319517266813 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1297366242659719 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0165566212219719 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9035321374734242 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7904185297575639 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6773479500996699 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5643732486627041 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4516319985292395 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3386672886495058 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22573727790755457 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11285165566295835 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.126 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
