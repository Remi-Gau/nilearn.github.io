
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f132ca60550>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 135.15949249267578 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 20.97921919822693 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 19.385032653808594 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 18.71284508705139 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.4228515625 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 18.609146118164062 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.70710849761963 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 19.04812295096261 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 19.66212272644043 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 19.495291656917995 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 19.32829475402832 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 19.164556243202906 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 18.985495726267494 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 18.716495495576126 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 18.48628582273211 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 18.268430074055992 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 18.056074023246765 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.857214086196002 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.67077883084615 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.797179598557324 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 17.608352422714233 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 17.432036536080496 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 17.265851974487305 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 17.115508224653162 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.960578282674152 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.821401357650757 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.68616665326632 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.55991895110519 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.438403606414795 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.327696841338582 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 16.321723222732544 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 16.247188206641905 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 16.630179941654205 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 16.502410325137053 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 16.350719353731943 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 16.207636560712544 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 16.070386542214287 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.934847561088768 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.804065089476737 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.672866460604547 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.545812606811523 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 15.536622099760102 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 15.409960905710856 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 15.291948845220166 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 15.169425357471813 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 15.048587931527033 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.930890218071317 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.812270874672747 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.694427649180094 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.576157039525558 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 14.476614475250244 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 14.361733796549778 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 14.353529049799993 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 14.235044110496089 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 14.122123356218692 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 14.008488329974087 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.894432476588658 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.780511425252545 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.667983852583784 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.556493928876973 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.443186521530151 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 13.331896105750664 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 13.224656512660363 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 13.115369047437394 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 13.076524078845978 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.96740192633409 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.859384883533824 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.750936728804858 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.643129054237814 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.535359431004178 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.428627252578735 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 12.32332185624351 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 12.300651550292969 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 12.295363746277275 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 12.244857710760993 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 12.13448961575826 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 12.024763885297274 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.922566608949142 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.818491348853478 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.71420206299311 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.612302780151367 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 11.506847122569143 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.401462432814807 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 11.294745787080512 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 11.18668674287342 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 11.12230097546297 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 11.015518110851907 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.908746434354235 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.80196406624534 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.69651935877425 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.593199385537043 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.486374847181551 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 10.380682344022006 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.276464357171008 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 10.171092241368395 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 10.065153950139097 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.960207998752594 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.892659814087386 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.788160119737897 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.68502201696839 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.581798553466797 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.48291848673679 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 9.380509960885142 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.278792230828294 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 9.176640657278208 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 9.074227344422113 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.971274029533818 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.869090532588068 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.78457091472767 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.691483989768072 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.588688416914508 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.492616062765723 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.400619728224617 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.307692768299473 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.21277362003661 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 8.11883458883866 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 8.026541208398752 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.929913516737457 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.829196933972634 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.746571432642576 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.650859991709391 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.549821471379809 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.449904695886081 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.349871199305464 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.2502393184169645 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.152240800857544 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 7.053267319997152 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.953965517479603 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.855003923177719 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.7558441698089124 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.655948914014376 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.574111745557712 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.474872090599754 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.375939333349242 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.276578910315214 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.178480007030346 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.080006992115694 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.981592945808912 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.883679811505304 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.785304242758442 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.687790870666504 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.590960032551001 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.494591602137391 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.408878971646716 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.311425063345167 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.21383000242299 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.116351996382622 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.019004708244688 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.922104307123133 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.825614399557946 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.72900120417277 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.632431101325332 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.535559729525917 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.439198634203743 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.347932066236224 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.254811694545131 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.158029213929788 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.062824132336173 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.9673845798154415 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.871356655216817 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.7795973420143127 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.6889921730349524 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.594130424805629 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.497922496561624 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.401869558706516 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.3058007196946577 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.215532716498317 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.1195088432220643 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.023676009405227 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.9280431016662414 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.8323443496928498 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.736941543936032 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.6417101427566174 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.546537214620954 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.4512547871162154 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.3562804290226524 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.261527841741388 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.1701062897504384 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.075605713919307 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.98051335558545 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.8855306837293835 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.7905595539683137 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.695666200512058 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.6010328290241014 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.5062620743461277 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.4116143213736045 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.3170228722274946 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.222449241474988 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.12800040650875 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.0353826416863334 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.9409056588223106 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8465258251310019 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7562688787778218 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.661590956653338 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5668984762172109 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.4725366311195569 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.37800273603322554 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.28367643792012015 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.18915235635006067 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09474360403703086 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.296 seconds)

**Estimated memory usage:**  1893 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
