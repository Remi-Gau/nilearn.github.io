
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f4f8d1abca0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 194.1823959350586 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 34.80729341506958 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.10478448867798 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.05366706848145 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.641974687576294 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.4523663520813 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.64637104670207 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.2257126058851 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 30.04639434814453 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.730411105685764 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.456889152526855 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.27050183036111 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.037201245625813 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.035975052760197 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.82841089793614 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.66403841972351 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.47079288959503 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.270377958522126 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.117357307010227 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 28.06605581233376 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.887255430221558 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.772241047450475 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.555988160046667 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.347965509995174 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.180290540059406 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 27.003264904022217 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.92477974524865 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.751606950053464 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.56479062352862 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.37711922053633 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 26.391120751698814 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 26.215141534805294 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 26.02750825881958 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.903799187053334 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.757104663287894 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.564029795782908 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.380872938368054 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 25.215355666908057 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 25.034717559814457 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.91282756511982 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.74160099029541 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.554701898156143 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.440195560455322 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 24.652630611907604 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 24.9120653109117 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.138459232118397 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.33834833684175 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.616499743563065 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.81191531817118 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 26.034423803796575 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 26.083793878555298 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.8601805228813 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.59002080330482 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.38682465283376 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.143586335358798 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.891985806551844 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.64788171223232 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.41899820377952 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.174879600261818 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.935677524340353 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.74716567993164 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.510110511154426 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.279118222575033 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.053620637409267 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.841668725013733 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.614279270172123 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.393121762709185 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.223649103250075 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.02002805822036 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.809112496998 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.60225909096854 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.401674666874847 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.19363615247938 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.984847917948684 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.817835247194445 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.611497958501182 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.40926866782339 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.21632226721033 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.030441877169487 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.84026661100267 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.64587712287903 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.488157678533483 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.292803845754484 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.097500286906598 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.913354714711506 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.722807786043955 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.528196018795633 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.339086214701336 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.17751338265159 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.99112813660268 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.803105380800037 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.623144435358572 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.437207615893822 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.25891213263235 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.075146249000063 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.915752297953556 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.736994067827858 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.559899966741344 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.385869736574136 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.20685356313532 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.02675986289978 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.85415513680713 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.696123861799054 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.518100942222818 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.343579805814304 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.173265684218634 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.997274916127044 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.822379299413377 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.652544860486632 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.49702386024895 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.322960051623259 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.15248720280759 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.98348241192954 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.810745779391938 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.638710226928978 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.47353034434111 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.31335371938245 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.144070643645067 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.976992942519107 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.811005381976857 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.642412503560383 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.474141438145283 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.309636542054474 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.152889994101795 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.984959786938083 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.839292335510253 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.67128098200238 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.503640552205363 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.338248565793037 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.172990883967673 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.01611302449153 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.850798426693633 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.688644481427742 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.523183419292135 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.358120163874839 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.198936312286941 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.035421820247874 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.880375364401045 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.718110958735148 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.557470944287966 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.394405194691249 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.231028529769139 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.070505014607605 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.909546823768348 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.755252679189047 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.594982171880787 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.436621352417827 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.275978132170074 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.11444338592323 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.957462045170317 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.7994058926900225 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.644910692379175 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.4867029441030395 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.326894470289642 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.166774808586418 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.007056197812481 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.849010394169734 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.690042182898066 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.5353894354421875 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.37788303393238 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.219283103942871 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.060987959737363 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.903519759943456 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.7455233547585145 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.58717645668402 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.432700048793446 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.275834830410509 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.117947742610634 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.96040643964495 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.803954361458501 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.646458036759321 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.489468991407874 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.335232230119927 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.179213656166385 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.0225116110396115 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.8659094061170305 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.710366249084472 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.554868448925557 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.398709353436245 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.24505490697296 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.0896050135294595 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.933971924017806 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.778188781423883 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.6233487546118233 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.4678450874660327 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.3125378247853874 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.159465797485844 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.00479742677454 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8498197565687462 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.695001581989268 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5407387080945465 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.386582380814078 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2321528196334839 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0785766586738545 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9241896806303989 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7698753002362373 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.615761644986211 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4616480297243535 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.30763600330160124 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1537629863125595 seconds remaining)
    1987 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.151 seconds)

**Estimated memory usage:**  1836 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
