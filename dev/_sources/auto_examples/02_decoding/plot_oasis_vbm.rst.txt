
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2ffcf2f730>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 273.134708404541 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.10469651222229 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 48.61066961288452 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.25655913352966 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.09896445274353 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 44.505789041519165 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.161164204279586 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.739111287253245 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.16192626953125 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.64918123351203 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.2638144493103 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 43.30759106982838 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 43.08977659543355 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.701085989291855 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.41286104066032 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.09337099393209 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 42.047245144844055 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.82591003530166 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.56111812591553 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.28851182837236 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 41.05950665473938 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.866759470530916 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.51424485986883 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.21105888615484 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.8935383160909 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.75300598144531 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.43350670887874 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.17783471390053 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.881303378513884 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.578600275105444 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.387250661849976 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.20859659871747 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.93874216079712 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.68846060290481 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.4548912749571 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.29341503552028 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.109765847524 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.83849570557878 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.60212272091916 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.42343908701188 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.13592720031738 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.859712304138554 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.5977300348736 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.353202448334805 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.162348985672 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.90920872158475 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.661983614382535 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.42418599635997 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.18538169066111 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.08719915273238 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.83087611198425 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.573055832993745 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.32345918508676 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.12126922157576 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.85913442682337 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.607267748225816 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.364717211042134 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.11589333467316 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.933844418361268 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.68628709599123 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.43392093976339 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.18526920725088 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.980848558487427 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.777906092386395 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.530929028987885 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.303475141525272 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.084867332920883 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.899670220133082 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.656340024050543 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.424229625342548 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.202707392828806 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.954769591210592 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.76340611775716 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.531233673226346 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.2878694147677 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.053611516952515 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.805431918094033 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.600752898624965 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.364263931910198 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.12817751003217 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.886658430099487 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.660558833016292 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.45723295211792 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.223432989005584 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.99905601001921 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.76848699064816 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.575862135998037 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.340338112293992 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.11100045117465 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.873831237300056 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.633170843124393 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.426063569037467 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.194130513979044 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.962284231698643 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.73474976864267 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.503336843691375 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.29446313778559 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.086960772878115 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.860750587619084 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.63976272910532 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.429049253463745 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.196086130519905 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.964242631313848 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.739751482472837 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.5098206446721 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.291201046534947 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.061145903929226 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.83696212055527 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.607543768706144 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.41188495749727 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.179163737730548 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.94591404511048 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.718342627797806 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.492017632037136 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.27460489356727 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.04394385089045 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.84545958453211 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.617140627314903 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.38876636553619 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.171374799824562 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.93632968266805 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.703790773044933 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.47430084572464 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.256521680490756 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.02624277914724 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.79927043914795 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.573611183772012 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.342656741930742 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.124346658587456 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.897418872330539 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.669095791303194 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.444119502569883 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.216562090498028 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.004286723029345 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.774155385458647 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.547832056328101 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.31933447893928 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.091539059242193 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.873853217000546 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.645794076027629 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.418888568878174 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.190156632281363 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.98227077134898 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.75880083170804 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.532565898365444 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.305892656589377 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.079009755017006 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.861714995637232 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.634730268169095 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.408526348587651 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.182742913564045 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.957490764706339 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.737180985902485 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.513853263231665 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.291139413784077 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.064322756182763 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.847167742558014 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.621148548308451 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.396045802514763 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.171186714052403 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.944557905197144 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.726509849477258 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.500361569133805 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.275113233028014 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.048397145620207 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.822311726483432 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.602052352514612 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.379041710299647 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.153548149835495 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.929383045117531 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.7076388106626625 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.484336882306818 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.258941805639933 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.033266668374828 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.809066687507191 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.587643010275705 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.3629141070626 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.138881242881387 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.914350815033645 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.690277389973901 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.471746126810709 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.247311991222656 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.023152071041065 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8026190442465695 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.5797089079151982 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.3551127781739107 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.1307063000176543 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9066780939459163 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.682562214262942 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.460712500980922 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.236269863028275 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0120482569589666 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7882429460684457 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5646028493970168 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.341669168668924 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.117854974208734 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.894046807775692 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6703594033488163 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.44697885561471035 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22353348660109632 seconds remaining)
    1963 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 30.903 seconds)

**Estimated memory usage:**  1923 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
