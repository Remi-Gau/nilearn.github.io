
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f094a26bdf0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 187.1204376220703 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.28075909614563 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.22454833984375 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.56699554125468 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.31631302833557 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.733466386795044 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.24115244547526 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.791313409805298 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.35443687438965 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.038251294030083 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.732490062713623 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.753347461873837 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.55341323216756 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.293590747393097 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.042045797620503 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.792771577835083 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.554210305213928 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.32186359517715 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.259622308943005 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.061967812086408 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.879016876220703 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.688141834168206 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.500658468766648 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.32507858069047 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.157251993815102 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.094644784927368 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.915694823631874 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.811885860231186 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.633381400789535 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.456527709960934 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.286176919937134 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.10874367529346 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.946821451187134 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.872074510111954 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.735505398582013 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.56950432913644 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.417244964175755 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.26587819408726 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.102239269959302 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.952926574609222 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.847803115844727 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.69877953064151 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.536451850618636 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.37785903797593 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.228424289009787 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.07022696071201 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.916927296182386 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.81286904659677 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.676554441452026 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.51825846457968 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.368109226226807 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.21814653920192 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.065766939750084 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.913084012157512 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.797897471321953 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.645561868494205 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.488972255161833 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.33942000907764 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.187745653349776 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.03795104107614 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.888745705286663 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.73454894003321 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.61977926377327 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.471028187918282 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.341444492340088 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.191487752474274 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.04155078801242 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.895871052101477 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.744529261308557 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.622472628303196 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.477035522460938 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.334544158317673 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.182891421847874 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.034784245164428 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.889099269299894 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.740505933761597 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.615461085972033 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.46339234129175 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.31503107608893 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.17114952244336 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.026089549064636 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.88046285546856 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.732953682178405 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.602719694735057 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.45566843804859 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.309797904070688 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.163282433221504 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.017808990916986 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.874266104264693 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.728326216172636 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.584992859098648 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.460894348857167 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.3154673990996 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.1692738404838 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.023280696665987 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.877784741552254 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.734216054280598 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.589982993823966 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.460212478832323 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.316280165103949 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.172778606414795 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.030534951993735 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.886091367871154 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.744887581149351 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.600157811091497 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.467340821311588 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.323405913586887 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.203734429083138 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.06480382989954 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.922504720337894 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.779271711002698 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.637702041918093 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.506232687405177 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.362065131685375 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.2195373501694 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.077707031498784 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.937001606513714 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.795375186153967 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.653591285317631 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.519695873020076 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.37768030166626 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.235687478514743 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.094500541687012 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.953272908683715 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.810928360108406 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.669692134857177 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.535288617724465 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.394296062274242 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.252651557326317 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.11139469922975 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.969628022267267 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.828476199666962 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.689319292704264 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.554679124875177 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.41451090841151 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.272143143194693 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.129543080049402 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.987996186653193 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.845883355624434 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.704895853138655 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.567762783595493 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.425534091097242 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.283161257354307 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.140313571983285 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.999528792169359 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.858472750104706 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.717578551540636 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.579953096350845 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.436942493593371 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.2934013949144605 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.150656461715698 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.00851127801352 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.865751115899337 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.722921793756922 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.583351757619288 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.440167480899442 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.297544143138787 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.155514452867447 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.01246493375754 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.869833757292549 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.726736545562744 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.586633873282012 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.443508289478443 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.300311326980591 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.156954526901245 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.014100479357171 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.871210468820778 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.727530225308356 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.587187676202683 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.443400119183331 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.29968316414777 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.156535094244438 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.012946078943652 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.869601661759305 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7265722313146483 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5847865172794884 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.440985560417175 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2975412129008834 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.154100252001473 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.010666696718951 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.867505629857381 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.724397877961891 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5822289959414975 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4388775656132102 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2953792032988174 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1518951751090385 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0083474472004883 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8648787080285383 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7213186000255827 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5784595517254378 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.434899468170969 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2912445729939726 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1477730373541513 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.004290869816597 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8608668809084549 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7173734444838303 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5741494383130754 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.43062938530433 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28708158839832654 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14354995626900063 seconds remaining)
    1995 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 10.175 seconds)

**Estimated memory usage:**  1924 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
