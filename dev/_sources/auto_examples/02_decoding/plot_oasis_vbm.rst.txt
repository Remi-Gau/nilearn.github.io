
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f804861b0d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 211.67278289794922 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.375911712646484 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.298538208007812 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.031320254007976 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.276511192321777 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.043688774108887 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.597169081370037 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.129969188145232 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.752843856811523 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.665872308943005 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.38597583770752 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.137378454208378 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.90028683344523 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.648915859369133 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.42738689695086 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.246889114379883 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.209339499473572 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.008128783282114 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.849182897143894 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.66406059265137 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.466304302215576 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.278983922231763 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.122461925853386 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.968922677247424 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.891541957855225 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.7529513835907 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.599562846697296 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.44541299784625 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.282833337783813 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.12242243207734 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.969733953475952 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.889781228957634 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.718326568603516 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.554209680268258 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.384266867357145 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.235089676720754 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.093375391430325 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.945958027968533 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.846661454752873 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.700563296293602 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.548182487487793 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.383046580523978 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.230948845545452 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.083178281784058 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.942080692811444 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.803882466422188 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.686893877775773 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.543876855931384 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.40252097447713 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.26921828912229 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.11915946006775 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.966129008461447 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.824645831034733 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.709519354802257 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.56127350418656 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.41155975515192 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.264748777662007 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.113829332485533 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.961412125620345 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.813033237295635 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.684166590372723 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.536087598957 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.3908885909665 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.238545531318298 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.090935587882996 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.944099774727455 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.796544277306758 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.64704053081683 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.530905639424045 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.380921965060026 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.232910224369594 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.086409541922556 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.94153552585178 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.794510818507575 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.64640458854469 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.519623835881553 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.374499320983887 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.23366867721855 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.08696498014988 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.94459561154812 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.80019247531891 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.655442520424174 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.52742518448248 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.38562958211784 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.239318121047248 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.09356589878307 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.948583519736001 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.805187017068096 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.661983966827393 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.518386015731297 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.390062252680462 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.246752034176836 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.102825413579527 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.961022969215149 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.818429054097926 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.674961780246937 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.532172759373982 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.401878288111735 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.258406765606939 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.114498636939308 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.970290660858154 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.826064433201704 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.68326237154942 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.540850775913128 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.413536585294285 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.272217194239298 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.129268682227945 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.987268008918406 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.847821774306121 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.7057414667322 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.563487313010476 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.420141608865412 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.288587621280126 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.146764356478124 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.005318056073106 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.864734473435774 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.723284524062585 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.582083498310839 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.441171221813914 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.308812467991805 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.167622566223145 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.026690920522391 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.885502709717048 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.74360012426609 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.60378719914344 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.463243579864502 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.322276440877763 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.189366045899279 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.048289224505424 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.907301388969717 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.767157793045044 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.627179566230483 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.486583912011348 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.345997806778529 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.211817606171564 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.07068598711932 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.929058972526999 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.788435544410762 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.64731975223707 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.506997496104068 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.366749048233032 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.230668348623505 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.089556314575841 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.949017964876615 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.808200518290202 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.66810287278274 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.52748168331303 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.386687895067695 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.246655631709744 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.113268332193362 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.972684065500895 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.833621080348034 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.694506394235711 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.555392511529861 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.4155075395262084 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.277502198373118 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.140592232728616 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.000083113931546 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.860590482059913 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.720493262668826 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.580360293388367 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.439965162217987 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.299424353940987 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.161904732873834 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.021491039090041 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.88141376321966 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.7412856429456225 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.60138854580725 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.461994625273205 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.3223468227499335 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.182798469767851 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.044784497099313 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9047258232915127 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7646851801458814 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.624740258030508 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.485004084450858 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3450571515343404 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.205252167868749 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.06666459662191 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9269277396814783 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.787449359893799 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.647678368657992 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5079236947573147 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3682187554614793 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.228755080181619 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0902332872957796 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9506797764890937 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8111782316218086 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6716665054889435 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5322268526390115 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3927679689306962 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.253359165491234 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.114036609729131 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9751950026793801 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.835874407561784 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6964968106685541 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5571461113131776 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4178126705479501 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27852096942940147 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1392785736064815 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  6.983 seconds)

**Estimated memory usage:**  1916 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
