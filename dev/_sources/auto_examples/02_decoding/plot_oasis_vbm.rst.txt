
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f597f1e91f0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 246.57726287841797 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 45.271401166915894 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 43.19663071632385 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 42.23009395599365 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 41.91259479522705 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 41.27255702018738 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 41.12264474232992 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 40.49360309328352 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 40.327131271362305 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 40.29105099042256 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 39.88574695587158 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 39.53392371264371 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 39.11919196446736 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 38.759067920538094 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 38.45789807183402 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 38.35901188850403 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 38.08614146709442 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 37.76267952077529 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 37.48401527934604 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 37.24685077918203 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 37.007944107055664 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 36.79404558454241 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 36.58043252338063 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 36.367117042126864 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 36.13307158152262 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 35.87120985984802 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 35.66170252286471 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 35.44303454293145 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 35.16439577511379 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 34.94464198474226 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 34.69751826922099 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 34.47141768086341 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 34.21268141269684 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 33.95805317705328 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 33.73324932771571 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 33.50691533088684 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 33.31080781088935 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 33.08094570443437 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 32.872537512528275 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 32.653649183420036 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 32.43417930603027 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 32.23492225205026 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 32.007365204039075 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 31.779948118121123 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 31.56981448693709 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 31.362748278511898 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 31.18399048888165 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 30.986838310322863 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 30.812044978141785 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 30.60889787090068 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 30.39447569847107 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 30.212089776992798 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 30.029016348031853 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 29.82969437005385 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 29.61493996337608 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 29.40117090398615 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 29.212954248700825 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 29.040159108345968 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 28.85151456964427 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 28.652567018896846 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 28.483419497807823 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 28.269873568269073 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 28.0596341394609 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 27.86325365021115 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 27.6395446062088 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 27.457834262114307 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 27.247587023359355 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 27.031390385841256 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 26.81910757457509 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 26.596414279246677 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 26.37208264214652 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 26.15687967689944 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 25.936253017849392 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 25.721662397254004 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 25.540357454403026 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 25.38562774658203 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 25.238453777212847 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 25.054576022284373 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 24.84753010211847 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 24.655157828632788 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 24.47249972820282 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 24.29936005451061 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 24.14233097215978 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 23.98370151921927 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 23.880477292197092 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 23.76137004179113 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 23.653506101563917 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 23.554548323839562 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 23.379041888497092 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 23.264299810602424 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.11755932701959 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 22.93879064098819 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 22.756029491839204 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 22.581546298919186 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 22.413972458940872 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.225205295964294 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.00978620847066 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 21.79460089477067 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 21.585403028799565 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.37035344104574 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.159520387649536 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 20.937803138600717 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 20.715552470263315 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 20.508465586356746 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.290765835688667 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.08291934785389 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 19.8647994770194 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 19.649855682783038 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 19.449024730258518 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.232097326068704 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.02672366662459 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 18.812131286741376 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 18.60292613506317 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.401384315659513 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.20028605795743 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 17.992255801739898 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 17.7809712804597 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 17.56998196218768 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.35784516900273 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.15420703126603 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 16.945576032002766 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.73484421761568 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.528858939155203 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.329025512788352 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.127957628619285 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 15.922389650344847 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.717076259946067 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.50532902131869 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.29860407114029 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.099922925002815 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 14.887787855588472 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.683273872346367 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.468562386252662 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.26618820742557 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.052584388362828 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 13.841221376701636 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.642281924977022 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.437191529865682 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.230641859165136 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.019614087591926 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.815226009913852 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.606202981150743 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.39411624384598 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.18099737500811 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 11.97057048479716 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.756270836139548 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.543147955855277 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.326506556296836 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.11462069202114 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 10.903484176469329 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.690563837687174 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.475531429644452 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.26679297497398 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.057486548143276 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.845714336865909 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.638058139431863 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.424461480898735 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.2086637475688 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.996765758417828 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.787435197230405 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.57241666316986 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.358074537715558 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.145590134608891 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.93055010134457 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.716753540969476 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.501734589085435 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.286270922925099 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.074817074986989 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.8651982716151645 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.655599647725122 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.445673115113203 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.233418418650041 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.017995385236519 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.80595445908563 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.591905421224134 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.376889671598161 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.1621704643422905 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.94941888286569 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.734523253494434 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.519633562205224 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.304648134443495 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.089417801377523 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.8763238702501566 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.660932391067672 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.447767734527588 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.233198365649662 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.017684328940607 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.8026061402285163 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.587308122756633 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.371800037918898 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.1562513803180896 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9409150964926676 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7253422339757283 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5093777809736024 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.2938093721252126 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0781273230528219 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.862614125621562 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6470875994203055 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4317663462475093 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21590076738865532 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  33.196 seconds)

**Estimated memory usage:**  1920 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
