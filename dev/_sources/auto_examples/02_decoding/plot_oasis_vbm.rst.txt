
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc227c47fd0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 279.33359146118164 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 46.47480368614197 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 43.41031265258789 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 42.51658590634664 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 42.12865114212036 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 42.41373109817505 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 41.850762685139976 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 41.36204671859741 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 41.22221374511719 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 40.76925510830349 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.01784563064575 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 40.873111269690774 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 40.67028498649597 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 40.49897951346178 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.55331260817392 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.283734003702804 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.011717200279236 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 39.79321171255673 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 39.51122326321072 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.49203885229011 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.19819951057434 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 38.955495709464664 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 38.66653013229371 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.41987612973089 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.33239984512329 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.114198446273804 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 37.928272632452156 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.662290219907405 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.44369632857187 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.33083050004367 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.05350399017334 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.851166686704076 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.60263514518738 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.345355582959726 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.23941901150872 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 35.98540684155056 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.762689908345536 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.52468980325235 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.40359032781501 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.18502400471614 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.933292388916016 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.664859643796596 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.43458387965248 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.327457627584764 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.10067135637457 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.86637239985996 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.62270342785379 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.39993456069459 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.274602929751076 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.04848576078609 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.814292430877686 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.58890545134451 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.34544801712036 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.22683242132079 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.988348378075493 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.75963393124667 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.524569647652765 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.281678864830415 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.12790170209161 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.899813502521837 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.672123352686565 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.449181204936544 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.25934896161479 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.05059086330353 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.81271994113922 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.605270550801205 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.359797210404366 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.200832139200237 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.95586584596073 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.719834165296692 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.477522202900477 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.243210114223857 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.061762915717228 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.826636386244264 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.59007618233964 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.358665466308594 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.12661395574871 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.94290914163961 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.71688353098356 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.486153768587716 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.259839057922363 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.035953766033973 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.859591524775436 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.63455396100699 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.398422797520954 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.16181846225963 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.945012663685997 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.758463643063074 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.534370855851606 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.307930043574128 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.08123326301575 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.89238312742212 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.666952734408174 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.45183009742409 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.232481860099956 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.225290812944113 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.058257281780243 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.826315619281885 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.59004604086584 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.35229433425749 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.150243759155273 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.913294258684214 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.680331057193232 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.449285625254067 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.227753492502067 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.0270517213004 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.793215508730906 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.572320144867227 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.344948291778564 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.116693719811394 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.91229896111922 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.685369712812406 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.457004036222184 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.222938930038858 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.000861414691858 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.78365363245425 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.557058630318476 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.325805016053028 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.098381103095363 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.895131632059563 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.6695605913798 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.44573524569677 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.21973390657394 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.998683018413015 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.78816466946756 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.564303636550903 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.33919065717667 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.112298942926362 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.888177752494812 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.67810898603395 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.453245749840368 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.228085139325557 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.003439065181848 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.776134725800135 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.579346219105506 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.3522049497675 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.129002402810489 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.904419888545126 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.67779483311418 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.465590281452206 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.24150208064488 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.014197227802683 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.78971239546655 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.581538322088601 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.364356385336983 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.141410326135569 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.919358766242249 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.69870322739997 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.486919577057298 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.265281237211804 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.043622811635334 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.821338533565697 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.599924991005345 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.387362745073107 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.166563721446247 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.943176684841033 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.724006072068825 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.503015287362846 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.288541398470914 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.06823575571648 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.846855163574219 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.625837004703024 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.41019872677179 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.188053973613341 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.965375685110325 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.742396629217899 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.521064017192427 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.304309075464031 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.082348006112235 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.8598978999098374 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.6387111299178185 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.416082242776079 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.197141092877056 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.975778922869291 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.75473183873056 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.533744437353952 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.314522927457635 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.093818652427802 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.871330290697934 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.649703565256556 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.428333865271674 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.208548307418823 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.985704306717757 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.763680140177409 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.5418704903644063 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.319546126030587 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.0990845977619133 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.8773389627589263 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.656234381046701 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.435263289345635 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.2148784712741247 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.993977762641707 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7722631394863129 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5513835311553636 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3297786319378726 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1086490154266357 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8866462804833236 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.664860782284422 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.44321035616325616 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2215740273346254 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 37.998 seconds)

**Estimated memory usage:**  1932 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
