
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f202de09df0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 212.66698837280273 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.263920545578 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 35.482460260391235 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.37134687105815 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.66973090171814 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.18184304237366 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.943605820337936 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.567963804517476 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.34943771362305 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.10606010754903 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.031800508499146 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 31.793321891264483 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.552688121795654 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.423936220315788 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.250971146992278 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.05085062980652 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 30.823318362236023 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.6505940100726 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.481165673997666 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.25705865809792 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.090516328811646 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.893855310621717 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.682234525680546 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.49492436906566 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.311007976531982 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.1247820854187 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.958230623832115 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.949886533949112 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.78378452573504 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.611346869633113 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.4349692662557 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.266828352405177 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.093261063098907 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.913263154752325 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.741144895553592 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.564682040895736 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.40527092085944 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.237738680195164 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.061436929200827 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.86811345051497 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.687000274658203 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.505033208102713 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.36312144143241 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.18750075406806 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.02042898264798 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.864020665486656 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.685267013052236 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.504777588742844 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.340659777323403 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.17997854096549 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.007105112075806 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.82798169173446 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.655296674141518 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.48635637085393 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.306821681835032 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.127828272906214 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.951114927019393 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.78864406284533 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.613403501181764 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.435849420094893 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.260594685872398 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.08959201906548 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.92399993250447 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.754970857075282 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.583360612392426 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.421449899673465 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.247538674961437 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.07646038283163 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.91362514215357 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.7473267092221 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.569371359688894 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.402099619449025 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.226749844021267 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.054651750277166 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.88712340432244 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.716106096903484 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.546354155791434 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.380495473936005 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.207176758692814 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.034145958815948 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.862501978874207 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.695091509524687 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.529366906096296 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.360755908920105 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.190743378230504 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.02518338315627 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.862955963888833 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.69842183452913 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.53539024699818 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.37176233463073 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.201303852929012 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.03057071140834 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.866230259770933 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.703150410805982 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.538365927148373 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.372589224263244 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.2056118051211 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.037293547207547 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.87126840863909 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.706172690247044 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.5412700176239 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.376018066217405 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.208088575624952 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.041042589446874 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.878371458787186 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.71794335047404 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.559267970750916 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.399486318926945 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.238963153627184 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.076613426208496 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.914531295949763 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.752293945432784 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.588478650365557 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.426398870164313 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.263934135437012 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.102121031802632 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.940941572189331 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.783441517088148 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.621476480516337 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.460086944724331 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.297919114430744 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.13470687747987 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.975534228027845 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.8132313693442 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.648426786545784 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.485544919967651 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.321530603227162 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.159017752474687 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.9961606413126 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.832360186318095 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.668210726517897 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.50462353502521 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.341028357997084 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.176763624176944 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.01348022560575 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.849988928547612 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.686098435345817 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.520601991319309 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.354642159696938 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.18935785705237 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.024311201913015 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.85893282484501 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.69522735098718 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.529587847369534 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.363822274737888 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.197130236132391 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.030835968174346 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.863975823331042 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.69745193945395 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.53035574311378 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.363212982813517 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.197668206612795 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.029692875711541 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.862133012098425 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.695220650016487 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.527779356125863 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.359448824173365 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.193174831426827 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.0254117838944055 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.857042650006852 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.688816547393799 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.520486846473647 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.3524904486573766 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.184923700028402 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.017077620436505 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.8494024999213945 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.682161061160535 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.514144192198794 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.346657616751535 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.178841280513966 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.011452744988834 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.843718167634038 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.676646221515744 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.508890347673714 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.341493592865166 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.174160037721906 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.007099129936911 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.840229629796777 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.673012377171034 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.5056606564441872 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.338501983218723 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.1712344193326834 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0044943605150496 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.83738330413735 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.6704057817873745 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.5031511976912215 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3362469083519395 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.1692901919869816 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.002350827480884 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8352526218172103 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.668308709797106 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5014016990262176 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3343920012315114 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1674776052563918 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0007309151678971 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.833860959762182 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6670466880409085 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5004662148238439 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3336425622304281 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1668020420937083 seconds remaining)
    1987 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  16.706 seconds)

**Estimated memory usage:**  1921 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
