
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f15acaba220>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 139.923095703125 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 21.31778883934021 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 19.643938779830933 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 18.930042902628582 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.558754205703735 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 18.28091526031494 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.960190614064537 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 19.10138177871704 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 18.883495330810547 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 18.680364767710365 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 18.464722633361816 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 18.292836752804845 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 18.123088439305622 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 17.9793150975154 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 17.873663663864136 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.761932611465454 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 17.632192373275757 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.77546317437116 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.62432991133796 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.476149671956115 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 17.37513542175293 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 17.24228476342701 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 17.10615780136802 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 16.98233024970345 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.86134417851766 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.73902463912964 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.618721888615536 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.51107250319587 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.566099575587682 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.462062120437622 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 16.34376136461894 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 16.223373897614017 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 16.102639496326447 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.985652995832039 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.876414635602167 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.76385143824986 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.650663905673555 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.542168900773332 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.436737411900571 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.448725303014122 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.349396705627441 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 15.246525502786403 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 15.149778661273775 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 15.051753870276517 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.945747397162698 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.836445569992065 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.73641270139943 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.636320976500816 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.54226803779602 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.434266002810732 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 14.411094903945923 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 14.302497957267013 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 14.197500687379105 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 14.093773463986954 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.990484317143759 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.886290355162187 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.785326957702638 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.684321888706139 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.580637989373042 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.47820957636429 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.3721284866333 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 13.32127983843694 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 13.223188138777209 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 13.121177938249375 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 13.022983431816101 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.921591612008903 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.81783881331935 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.71303089341121 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.612151622772217 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.512767681177111 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.41124735559736 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 12.310568947187612 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 12.253818935818142 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 12.159014616927056 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 12.058804847098685 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.960177421569824 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.864580430482564 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.766758782523018 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.664727045939518 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.561744261391555 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.46139919757843 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 11.361933019426134 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.262597037524712 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 11.180795155375836 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 11.096060820988246 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.996587851468256 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.897134636723717 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.798761211592577 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.69962739944458 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.601931504988938 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.502739058600532 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.404582937995157 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 10.305345763330875 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.206041964151527 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 10.12735625530811 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 10.037699084532889 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.939155042171478 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.841725322389111 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.745166652056636 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.647962471451422 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.549316644668579 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.45044739883725 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 9.352121002533856 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.253820215614097 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 9.155056219834549 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 9.056952260789418 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.988793359612519 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.890945993851279 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.79384575949775 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.695491397052729 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.599159370769154 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.503747950803053 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.405613916260855 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.30832275036162 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.211152904912046 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 8.113189832023952 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 8.023870172171756 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.936579785795294 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.839424238366596 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.741703047471888 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.644599914550781 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.546851601482423 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.44834852218628 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.35102373797719 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.253974922241703 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.159921503067016 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 7.062396439294966 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.964619024532047 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.885232821106911 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.789983705032704 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.693030742498544 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.598159921078281 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.501459179502545 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.403461051166506 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.306303390816076 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.208791741618404 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.111576529110179 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 6.022941284806189 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.966561037561168 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.868146615062686 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.769837345395769 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.671484685113244 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.573500136254539 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.475783938294524 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.3785537878672285 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.291304177251355 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.200348377227783 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.104105114125881 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.005989854400223 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.917503812969131 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.819705565770467 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.72293991916227 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.62555674502724 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.5277253568562035 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.4301183223724365 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.332505218444332 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.235213805467654 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.137838465392969 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.040464512909515 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.943168989517404 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.8521785736083984 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.754734042268362 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.6572754530259117 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.55990903216637 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.4627211617260443 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.3656113292231704 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.268648994974343 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.171834040544704 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.075097356523786 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.978073886160314 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.881086335462683 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.7883656331670212 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.692573929941932 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.5965587693142753 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.4998338660974615 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.4030188151768272 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.3062604882500386 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.209643366646632 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.1130644605400857 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.016602187183316 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.920185195075141 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.8236768640865937 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.7298217920156624 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.633716712232496 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.5373109734576682 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.4408769994168669 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.3444732901870564 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.248121567588439 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.1518720819595012 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.0556571496226799 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.959493549246537 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8633313391221131 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7671870688597361 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.6722961312130943 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5760891806219042 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.4799217933263534 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.38384808812822613 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.28781085934130674 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.19181607949613322 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09588306513263951 seconds remaining)
    1976 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 45.012 seconds)

**Estimated memory usage:**  1730 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
