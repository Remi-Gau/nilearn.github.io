
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f5c7f9f2820>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 177.63376235961914 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.91099524497986 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.39803647994995 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.41140937805176 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.841081142425537 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.4945228099823 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.28861196835836 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.999602828707015 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.789520263671875 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.567036549250282 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.396615982055664 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.21619824929671 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.04481212298075 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.90885120171767 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.738572222845896 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.56367667516073 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.389726400375366 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.2681101770962 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.097743617163765 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.93551151376022 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.792799472808838 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.65482575552804 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.510149500586774 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.385207383529 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.257378737131752 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.11099076271057 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.96147027382484 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.813745551639133 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.67642174448286 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.533698493036727 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.424007574717205 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.285187367470034 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.139300048351288 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.99442101247383 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.852138280868534 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.71495304788862 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.56702529059516 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.426020274291165 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.27847675273293 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.137785232984104 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.98696994781494 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.845917504008224 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.704907826014928 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.564440843670866 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.425089619376443 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.290294223361546 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.148221886676293 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.01819411237189 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.87363537152608 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.735080159440333 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.6054470539093 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.466345029718735 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.322060585021973 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.183275384723014 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.037933323118423 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.893839727748524 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.752315657479425 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.61384830558509 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.475806647333602 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.333348565182444 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.192871967951458 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.05776991218817 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.91808440608363 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.774587078699987 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.637694895267487 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.49614033332238 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.356706698735554 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.218429899927393 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.07816853242762 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.978125686230868 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.83587176459176 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.697762472528808 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.560226016574436 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.421333864943623 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.28785535451528 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.152096033096313 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.01488127206501 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.874511842603805 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.734990217746834 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.59792871113065 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.45886778831482 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.32244747950707 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.186197670494636 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.050836123615863 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.917627607073102 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.806982825784123 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.677813164023465 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.540976170835824 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.406711708415639 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.267999791027455 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.127308766047161 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.986256649205972 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.848928441172061 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.71163965553366 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.571527146278543 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.433209971377725 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.293338835239409 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.15510081507496 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.017025850257095 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.876729500414143 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.737318277359009 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.5993812084198 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.459545046675439 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.319973313692705 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.181677084702713 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.04345543043954 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.903201836460042 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.764158206565357 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.626706688492387 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.487977207253833 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.349081667986784 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.209846380594614 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.070785011563983 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.930978245439782 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.792140508952894 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.653416115304697 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.514908478177826 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.376902657696325 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.240385257591637 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.102515072381797 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.966625213623047 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.827576079644448 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.6895281721334 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.55272527245002 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.415049045316636 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.277421712875366 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.141353894793799 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.004198971695788 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.865943804383278 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.728087626686392 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.590779616282536 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.45320759656775 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.315254774960604 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.176706681574197 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.039563933415199 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.90155095524258 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.76396785062902 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.62811172791641 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.490269011345463 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.352137430108709 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.215158564703804 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.077445114757998 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.939918088241362 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.802419974253728 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.6649817493226795 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.529000208295624 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.392836789562277 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.255363809819125 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.11915482701482 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.982598189539558 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.845269521077474 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.707787059000785 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.571033603266666 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.434531782187668 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.297202553067888 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.159834484900198 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.0227104028066 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.885501942057519 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.74870982652978 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.6119778396198585 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.475048005580902 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.3377764595221295 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.2017105273258535 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.065139077192435 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.92801278393443 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.790981119329279 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.654055265058954 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.517212132493893 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.3799489339192705 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.242818871898764 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.105718388276942 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.969796982424998 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.8336976738863218 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6964377268201356 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5595149692447707 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.422367027827671 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.285334305329756 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.148220646852827 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0110933485995517 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.874071419572031 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7370780838860402 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6002102425085245 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.4632757496047804 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.326414187749227 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.189584545467211 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0525957378181254 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9157120130395378 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7787040401907528 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6417564432671727 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.504817320556237 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3679645437943306 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2311684835643668 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.094393750031789 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9577245045202383 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8208220275406986 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6839804527087089 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5471594333648682 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.41036941436341573 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2735598593047171 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13677347005911208 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  8.994 seconds)

**Estimated memory usage:**  1905 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
