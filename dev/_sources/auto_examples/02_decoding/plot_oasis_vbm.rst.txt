
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f60df74a040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 225.01707077026367 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.66077780723572 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.14204740524292 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.249614000320438 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.30072855949402 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.85679006576538 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.466891209284466 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.226192576544626 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.899959564208984 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.65006881290012 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.520203590393066 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.556963227011945 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.346539576848347 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.124514726492077 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.95337530544826 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.762179533640545 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.584060192108154 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.384866700452918 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.354202138053044 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.164024064415383 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.983713626861572 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.818810076940625 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.645462274551395 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.530208525450334 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.360564072926838 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.304348707199097 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.13629986689641 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.969990456545794 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.819008963448663 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.64394164085388 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.47133231163025 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.31684609382383 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.21394991874695 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.033561099659313 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.862695427501905 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.688941274370467 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.53062393930223 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.385354048496968 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.28082958020662 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.125539253919555 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.95603084564209 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.78970172928601 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.61514873731704 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.44840701236281 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.278353062543 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.16422279675802 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.009127077849016 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.845422729532768 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.680362582206726 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.509816155141714 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.353278875350952 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.189867571288463 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.076171966699455 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.920324267081494 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.769046571519638 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.61009994420138 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.45511068616595 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.297833016044212 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.135655896417024 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.016451318385236 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.86678210894267 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.735048333152395 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.816762416593487 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.956933540011207 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.089877098798752 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.16828801081731 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.259315526846684 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.269567101749022 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.309560831855325 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.378254648567975 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.402869360787527 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.29261563529431 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.1200688680013 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.91808029723494 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.718146672119964 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.52058537801107 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.330061134539154 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.140021163147765 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.94742291401594 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.780039397976065 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.591688632965088 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.41346135551547 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.23260113088096 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.05642745868269 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.86946013995579 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.697392463684082 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.553731047829913 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.36819923061064 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.181604081934147 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.00584981146823 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.82485988405016 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.645164806764203 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.46521239695342 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.307356570356635 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.128247529902357 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.94942243475663 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.780991156895954 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.60705089077507 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.429524275721338 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.25023089755665 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.089173316955566 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.911030311395626 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.735170705645693 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.560494249306837 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.384990251981296 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.212558496566047 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.042297408265888 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.885552664783512 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.71554848882887 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.548948576690954 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.380163864655929 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.211558163703025 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.043134110314504 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.887610566299573 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.719916130367078 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.549795005632483 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.381889943418832 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.21253444802048 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.043555663803877 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.874289520648349 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.717148303985596 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.551233526103754 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.383770864517963 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.217486338886788 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.05254916990957 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.88777780532837 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.722170182636807 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.566715486406341 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.4004585146904 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.234525504962418 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.069183331269484 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.902594844803556 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.738508860270182 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.572909900120328 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.416793851710077 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.252987817481712 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.09111494176528 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.932970013931719 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.771220262499822 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.608449899893012 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.445822170802524 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.290939885673794 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.129478236319313 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.968330281597751 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.807663295004103 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.646462539146686 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.484889739180264 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.323236087552544 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.166933768504375 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.006193690652015 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.845781246821085 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.684971722546003 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.523988322207802 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.364130263235055 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.204356243084003 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.048762090744511 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.889234084349412 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.7308444855319465 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.573048609721509 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.419955698948986 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.264863193035126 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.110418199752429 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.952296000939828 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.794200917694466 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.63535568190784 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.47610558163036 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.317084757678479 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.159027809154487 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.0027806872413265 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.844371148115079 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.686087706509759 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.528272270459181 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.371007259501968 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.213707136970035 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.057193934232339 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.902255501065935 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.745297161015597 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.58902391875531 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.4322637199016097 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.2753893143637884 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.1188323497772217 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.962222963406895 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.807858328242878 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.6511905597207326 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.494621007338814 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.3380225800179146 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.181437764116513 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.0251884205456085 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8689080755761327 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7138104842453405 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5575280565964547 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4013364514755329 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2452966173489888 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.089321507073437 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9334882485497858 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7780655163985032 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6222970631657814 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4665606348647684 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3109696995128285 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15544682651308914 seconds remaining)
    1955 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 17.567 seconds)

**Estimated memory usage:**  1876 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
