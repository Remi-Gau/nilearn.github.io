
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f4ec7946f70>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 193.68410110473633 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.128859519958496 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.874937057495117 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.0151051680247 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.51261568069458 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.679485082626343 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.312239646911625 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.00396765981402 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.74481964111328 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.487856176164414 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.561782598495483 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.42769462412054 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.443965673446655 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.42776414064261 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.228305680411204 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.019797563552856 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.804420232772827 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.598337355782007 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.39315276675754 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.216381185933166 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.18636965751648 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.0190387680417 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.857140237634834 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.67772922308549 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.514427185058594 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.3399178981781 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.805863728890053 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.693258117746424 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.512656790869578 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.342417881406586 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.144490798314415 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.966583090443763 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.783571302890778 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.599414001811635 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.486071796978223 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.32074318613325 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.27876133388943 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.149291508906597 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.974702433535928 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.801438135978504 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.63236427307129 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.52206187131928 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.36371454738435 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.197515637375588 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.02974614230069 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.862072441313003 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.696563078009564 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.53288687543666 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.372795422871906 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.253176445863687 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.098159551620483 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.944743338753195 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.7899570281689 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.638141420652282 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.488197573909055 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.334416822953656 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.21752657209124 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.066691285685486 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.91955804824829 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.762943878012187 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.60828979810079 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.44984706503446 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.296535884180376 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.15014452026004 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.030516296625137 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.88288004581745 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.730236985466696 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.576138179693647 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.42485353525947 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.274786005849425 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.221015453338623 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.203218651489472 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.053407033284504 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.902408737025848 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.75301593058818 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.60352412859599 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.45538888479534 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.309491052256003 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.183929327206734 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.03604692145239 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.890037536621094 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.746124782679995 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.600080356365297 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.452358728431793 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.304651464734757 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.17912145221935 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.03589267508928 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.887498880254812 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.740584806962447 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.592848984043249 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.44510693020291 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.299081972667148 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.152651807536252 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.023994566291892 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.880387225049606 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.735602705102218 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.589674631754557 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.444696527166466 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.297171013695854 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.153232126524953 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.024888753890991 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.88031261510188 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.736713979758468 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.592134128496486 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.44960616185115 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.305517957324074 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.164184291407748 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.022412306794497 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.893270077528777 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.756210554630384 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.614112008701673 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.472827103760865 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.330385565757751 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.188684779985815 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.115157432723464 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.971716289934903 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.827617743919635 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.68365911133269 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.540091550956339 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.395366965221758 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.250816345214844 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.106313756674774 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.969959239490697 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.825807236074432 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.681279205506847 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.536755847930907 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.392720358712333 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.24994102800925 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.106775596737862 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.97096837768259 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.829206301615788 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.687059395185864 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.544978625846632 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.401798988643446 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.25953119548399 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.117979561841047 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.976234323838177 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.839616086361183 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.697652512702389 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.55741312520967 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.414805037634713 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.272486740815724 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.1314910532723 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.004104030715835 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.867538770039876 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.726066589355469 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.584513706703708 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.443750154404413 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.301970108135327 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.160070232096935 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.019458452860514 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.881648112606529 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.740298722919665 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.59901546496971 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.456793413533792 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.324209044056555 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.213308982360057 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.097029933504238 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.953278970114792 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.809982839620338 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.666881561279297 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.52398002962148 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.381374950762148 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.238375339039996 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.0955280152762805 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.955793070070672 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.81287734192538 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.670638068707404 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.528404281252906 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.386005167425031 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.243486404418945 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.101052365107843 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9609631771265077 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.818422025338763 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6761714288558087 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.533919606889997 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3919548446481875 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.249925172935098 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.107853482278545 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9690833464681106 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8272379239400225 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6854491418237845 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5435825966216705 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4019259729020583 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2602718394735586 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1186683757885083 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.977067732041882 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8365769450039786 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6950289797275624 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5535906017141998 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4121438578555459 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2707055925698805 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1293051441510518 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9879698839829992 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8470404639686506 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7057592074076334 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5645276235074412 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42330098394209964 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28214103525335144 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14105019377703643 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 9.901 seconds)

**Estimated memory usage:**  1860 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
