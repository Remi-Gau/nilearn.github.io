
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fdd9c7a1910>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 348.8779067993164 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 48.04647660255432 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 43.118597745895386 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 41.428686777750656 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 40.65975069999695 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 40.035284757614136 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 40.26570391654968 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 39.664410080228535 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 39.319610595703125 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 38.95293354988098 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 38.70283579826355 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 38.87202514301647 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 38.48066282272339 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 38.16287328646733 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 37.949536187308176 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 37.72843138376872 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 37.783042192459106 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 37.5343272265266 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 37.34823391172621 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 37.123646786338405 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 36.90569615364075 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 36.97986498333159 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 36.74543536793102 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 36.482251727062724 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 36.20248492558797 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 35.89026403427124 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 35.80235844392043 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 35.50840247118914 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 35.24410213742937 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 35.02709072211693 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 34.81034755706787 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 34.73919283190081 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 34.54601347446442 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 34.321078892910116 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 34.132018089294434 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 33.908793108803884 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 33.79866441090901 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 33.65038133311916 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 33.449689036921455 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 33.27167957257002 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 33.07597827911377 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 32.955614717995246 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 32.73961523600987 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 32.50139484294625 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 32.26694453846324 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 32.020314375559494 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 31.782531064489614 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 31.62910487804007 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 31.408469915390015 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 31.176132129163157 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 30.94221782684326 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 30.69232142205332 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 30.543642245806183 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 30.295866210505647 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 30.06976227407102 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 29.837244380604137 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 29.616313116891046 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 29.452558400338155 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 29.23260188924855 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 29.038577011076068 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 28.858572165171307 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 28.647175089257665 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 28.51506831569056 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 28.303557100750147 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 28.106974750757217 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 27.898014472081112 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 27.69147668462811 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 27.523891271050296 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 27.33531849524554 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 27.118687463843305 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 26.89354021208627 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 26.685389424713566 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 26.511614905463322 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 26.318439330140205 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 26.153583971229757 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 25.942586660385132 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 25.719989086452284 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 25.57916172758325 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 25.36460119027358 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 25.133997914157334 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 24.906707167625427 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 24.6882296991937 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 24.50517625343509 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 24.291955430823638 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 24.079124779928296 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 23.856821607140937 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 23.647164062012074 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 23.48086139251446 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 23.273804014379326 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 23.0635754874583 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 22.852803627649944 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 22.641337426154166 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 22.46537356791289 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 22.258779146338025 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 22.05456629712531 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 21.84426656522249 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 21.63910049200058 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 21.456478047616702 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 21.24107040677752 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.040553866010722 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 20.825679540634155 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 20.61476693531074 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 20.433253311643416 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 20.22002364362328 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.00935539832482 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 19.79714704695202 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 19.588488506820966 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 19.39915529812608 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 19.1890234152476 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 18.97053403373158 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 18.761224963448267 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 18.54908059738778 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 18.352958968707494 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.13428972674682 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 17.923424712398596 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 17.71450176446334 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 17.499651481365337 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 17.30209381152422 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.08834147453308 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 16.872428649613838 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 16.655042966206867 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.439341618009838 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.237405546375964 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.0365791979844 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 15.834768256833478 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 15.628001689910889 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.416534064308046 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.217850427927933 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.009501904249191 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 14.798540239186249 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 14.590011064822857 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.381679225513953 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.174865383090394 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 13.964572058584459 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 13.755748709635947 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 13.546146851998788 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.33807653539321 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.132804818397021 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 12.926968508872433 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 12.71470472623976 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.503912176404679 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.290237749721987 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.078773864558046 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 11.88238398178474 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 11.674076159795126 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.462808280155576 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.252508196112228 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.042268131865937 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 10.839074727651235 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 10.635251091630668 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.422535339991251 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.20914798856571 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.997915393427798 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.79386122086469 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.585941023640817 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.375529681482623 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.163707898213312 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.953216715223471 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.751912361458887 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.541700295682224 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.331087470054626 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.121180140453836 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.911619907543982 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.709787345371363 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.5006137068678695 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.291004910613552 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.082396998462906 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.873745782646591 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.669065838768368 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.458766762321517 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.249168844784008 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.039995951959264 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.829683292743772 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.622580666073485 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.414765889617219 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.2043183190482 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.994092973795803 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.78507438621952 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.5803383682551 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.371833368386636 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.163998550838894 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.955536141579981 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.747229421531761 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.5415231022027025 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.333150697791058 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.124130236135947 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.9153167714354815 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.706954905056061 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.5002038681760745 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.2922581125188755 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.083924331163105 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.8756243770659282 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.6672661105791726 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.4596168241352614 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.2509797332213097 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.042384575574826 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8338367111828862 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6252771464701231 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.41713324941769997 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.20851584654956606 seconds remaining)
    1964 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 28.044 seconds)

**Estimated memory usage:**  1906 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
