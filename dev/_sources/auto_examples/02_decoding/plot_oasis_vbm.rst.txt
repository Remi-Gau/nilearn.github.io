
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3e945b50a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 205.52873611450195 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 36.43210506439209 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.899991273880005 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.05039024353027 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.42242431640625 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.06819200515747 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.917031367619835 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 31.647858721869333 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 31.39999008178711 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 31.190747340520222 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 31.082884073257446 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.895114660263065 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 30.76783529917399 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 30.532597119991596 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 30.377870934350153 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.214258988698326 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.99725651741028 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 29.772561550140384 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 29.571065293418034 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.38778742990996 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.20636796951294 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.025156327656337 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 28.854841817509048 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 28.66873103639354 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 28.49251063664754 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.321485996246338 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.138954639434814 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 27.974773945631803 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 27.788119179861887 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 27.624283075332638 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 27.50138807296753 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.353597302590646 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.182552218437195 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.013106432828035 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 26.842074828989368 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.668332440512522 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.503276560041638 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.352523288211305 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.176815484699453 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.016620159149173 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 25.856033325195312 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.696181163555238 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.530784550167265 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.382179127183072 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.225511832670733 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.056117190255062 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 24.907961171606313 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 24.77573286218846 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.631497144699097 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.493117420040832 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.345407724380493 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.203098998350253 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.04770587040828 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.88867561322338 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.738744055783307 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.584505818106912 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.434591974530903 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.281776675006796 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.142417735066903 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.97327467142525 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.804863850275677 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.635190135142842 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.46800218089934 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.36326424280802 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.190592408180237 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.024664035210243 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.85538797667532 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.69727424365371 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.529176487642175 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.358492412428927 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.188806874411448 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.022373521831675 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.872269948323567 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.713880548738455 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.552425706708753 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.389809608459473 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.2207194253018 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.058647892691873 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.89424467086792 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.729684630526773 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.56730628013611 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.40030664279137 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.23541481320451 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.066841022077814 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.90828698022025 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.748085372588214 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.59433217381322 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.428163440748193 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.262793280861594 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.096666925408865 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.929764933056305 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.761521114097846 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.60319987587307 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.436889379255234 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.270974580277787 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.10726412973906 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.94156237443288 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.774722305769775 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.615700264366307 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.449238572457823 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.283607721328735 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.119151884966556 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.956518084395166 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.792947586300304 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.63263643704928 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.474927118846349 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.311881591688913 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.149735225695316 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.984833584891426 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.818316092184924 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.657066345214846 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.499592708037781 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.338706493377686 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.175197561230279 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.011123619581523 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.848250772642052 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.684779167175293 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.522127118885008 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.357478521637997 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.193961592281566 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.03180742263794 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.871257360316505 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.710233059085784 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.553193301689333 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.389705973286782 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.224539947509765 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.061709793787154 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.895677085936539 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.730549931526184 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.567902629689652 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.404890665641197 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.24345975613776 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.080675847602613 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.9185871486377 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.754122463624869 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.590625709957546 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.426574258243337 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.26350883497809 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.099324965822523 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.934778014532954 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.771552290235247 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.611137097608959 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.448789526039446 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.285513409367807 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.123466491699219 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.960602431461728 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.7973222340623 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.633846917119968 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.47039263312881 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.30639549549794 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.143226385116577 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.97928874224227 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.81506872177124 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.654250049902723 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.49042796469354 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.326883492931243 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.163060341125879 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.999722681227762 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.837759380099139 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.6750221297426044 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.512527287006378 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.349380117025435 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.186630581632072 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.024127467278323 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.860179906938134 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.697113492272117 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.534050099820975 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.370860008422486 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.208259491693406 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.045977204509035 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.882949899224674 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.719685027473851 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.556996977606485 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.393723746944715 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.230630025096324 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.0681036199842175 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.9058008410713887 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.743239783971323 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.5810691131634655 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.418136146481477 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.255168384975857 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.0920452347117893 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.9293150246798336 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.7663982292342055 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.6038296740988027 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.441301526250066 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.278495324555264 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.115775582624629 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9530194718787008 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7900943995783567 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6272604716451544 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.464496334185775 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3016683061917622 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.138885478281604 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.976132002073465 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.813542549426739 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6509272273705929 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4882538875347467 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.32545680710763647 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16273776011251326 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  14.568 seconds)

**Estimated memory usage:**  1925 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
