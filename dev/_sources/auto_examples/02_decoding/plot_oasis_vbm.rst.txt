
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3567de4730>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 158.74624252319336 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.299861431121826 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.267762184143066 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.51754713058472 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 25.702726125717163 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.20715355873108 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.176783164342247 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.869019644601007 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.59113311767578 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 24.513143512937756 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 24.266165494918823 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.03543708541177 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.88225166002909 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 23.687494608072136 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 23.501067229679656 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 23.32354227701823 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 23.153717041015625 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 23.102690135731418 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.9404555161794 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.763609886169437 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.608123064041138 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 22.436942509242467 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 22.281462365930732 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 22.151890630307406 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.011368115743 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.925278186798096 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.76735342465914 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.641683410715174 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 21.497737237385344 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 21.389425401029914 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 21.316907485326134 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.206417329849735 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.09197098016739 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.020342523401432 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.883023416294773 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.759055171694076 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.635256740781994 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 20.492718941456562 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.357381306196515 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.217267653880977 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.088332176208496 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.985801155974226 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.850690478370304 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.71503633676573 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.580243695865978 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 19.441993448469375 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.30700709508813 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.171667834545705 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.039014975229897 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.904016971588135 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.801707983016968 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.664409062441656 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.537266712922317 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.406003839564775 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.2838847372267 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.151648348028008 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.01993662970407 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.88380698153847 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.77288510881621 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.641607947268728 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.511316458384197 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.379205543486798 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.248878686658795 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.118809518359956 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.989936619997025 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.855872300954967 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.751033956354313 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.6206269050712 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.493758972953348 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.36503355744956 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.241098403930664 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.112746984186305 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.98703638712565 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.85864012861905 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.745389152217555 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.61631719271342 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.484429547661229 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.355112369958457 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.226734448701908 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.096931726117678 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.970242500305176 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.838711753303622 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.723075314265925 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.593192336070969 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.462936923617407 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.33218222505906 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.209182384402252 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.079176256026345 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.95203464681452 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.821576873907881 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.693719201617771 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.576895478007557 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.450296194657037 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.323173599858439 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.196487639812712 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.069097606759323 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.945250173409779 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.818924970233564 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.690723428920824 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.571302929309882 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.445977449417114 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.31887125496817 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.19057931619532 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.066162780650611 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.940560267521786 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.813975277401152 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.687206790132343 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.567273507608432 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.440558089150324 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.316030025482178 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.190651004964655 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.06440603196084 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.939016580581665 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.813051763889009 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.6874401443883 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.570331044819044 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.444090037510312 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.317260002478575 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.19110514753956 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.064765032599954 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.944825808207193 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.819265322251754 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.71168267140623 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.590214436616355 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.464479469483898 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.34112148284912 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.214752836832925 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.08830749519228 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.962895259261131 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.837227041407148 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.711277741652268 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.588569333535114 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.462383277488478 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.337526212061258 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.211696315167554 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.087781332157276 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.96216381297392 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.835673052029018 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.708594681560129 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.582138533214871 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.458728109087263 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.3313644101433715 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.204795457947422 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.077414776061798 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.950659102863736 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.822672893261087 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.694502699865053 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.56713022828913 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.444629566089527 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.318662478619774 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.1937096118927 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.069163789812302 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.948480656272486 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.823481075124803 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.698530745196652 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.573349929624989 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.448426014337784 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.325707801588022 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.200538553769075 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.07573761130279 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.95117449760437 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.826526505606515 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.701812876595391 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.577074428277513 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.452610050759664 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.330135013117935 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.205757457089711 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.08114523373678 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.957835924057733 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.833062509107872 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.708703069125905 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.584457067021152 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.460578901823177 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.337704767381525 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.2137748674414626 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0897091116224016 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.9656479575417256 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8415162590263927 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.7177691057826694 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5939963609812646 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.470240169101291 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.3465205108263216 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.223992641155536 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.1018053247628967 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9779493497765581 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8542183992025016 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7304835857883576 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6066214553812608 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.482849765331187 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.359136698737977 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2361104613856264 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1124196139929807 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9887844522794087 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8651125752246441 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7414687613851016 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6178399293850629 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.49422536090928676 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3706327610209509 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24714796470873285 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12355188868153634 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.930 seconds)

**Estimated memory usage:**  1817 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
