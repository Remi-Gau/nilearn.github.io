
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f33ed640a90>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 208.51850509643555 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.35387682914734 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 35.36083173751831 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.1644508043925 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 34.225876808166504 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.69064736366272 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 33.2059231599172 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.85964495795114 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.56244087219238 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.272460831536186 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.3058807849884 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.01911083134738 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.748936812082924 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.54782562989455 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.321886505399434 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.117394049962364 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 31.065639853477478 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.83334206132328 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.62058475282457 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.663832840166595 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.445990562438965 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.2420908950624 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 30.161666198210284 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.965888365455296 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.748745123545326 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.55959177017212 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.38048399411715 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 29.181448486116196 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 29.067621367318292 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.88635313099828 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.693721532821655 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.511960283402473 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.315780341625214 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 28.143300135930378 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.971112195183252 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.84158972331456 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.644393099678886 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.474283611452258 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.28971990786101 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.098097061499573 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.919803619384766 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.783411438872175 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.602076564516338 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.41994910461958 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.27508726986972 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.106587568918865 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.92963182407877 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.799174795759484 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.62570782502492 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.452016874235504 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.279993057250977 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.111692531436095 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.92615162409269 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.786091453624223 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.614260920771848 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.438228477131236 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.26621348517282 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.107121956975835 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.94336910905509 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.80214844315739 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.63149881362915 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.465299008322546 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.29666229217283 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.127376545043216 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.958994776010513 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.820939430823696 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.649404980919577 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.478849008901793 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.312562605913946 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.14274117566537 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.97055333001273 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.823807652567474 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.660633087158203 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.491828892328968 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.32881485449301 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.163020133972168 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.992973716635454 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.844284116447746 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.670342054122532 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.497264626659923 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.329322934150696 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.160960147410265 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.990884228450494 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.842970942876423 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.67302233832223 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.501062238917633 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.33394255194553 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.165813432342706 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.995173497633502 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.84163053651874 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.67147970199585 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.50291892984411 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.33505585919256 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.165818450271445 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.9933734295216 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.838439953954598 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.66868205865224 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.49774550408432 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.33102425750421 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.16357535304445 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.033251762390137 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.861499682511432 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.692436751197366 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.52056999113953 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.349050228412334 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.178485983893985 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.038041564653504 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.875724959596296 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.70334169599745 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.530725741605146 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.361394535411488 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.191049612320223 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.028894100870405 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.862494407501895 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.689382017704478 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.515796661376951 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.343278424493198 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.17082880704831 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.007093853869682 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.836554517265128 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.664533138275146 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.494039653746551 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.322897989241804 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.152971172720436 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.992435655286235 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.822189474105835 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.649834159820799 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.482834729622668 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.310248255729675 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.135938226714615 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.972636277859028 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.801012042824548 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.631131844087081 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.459055862928693 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.287805856163821 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.116333466989023 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.950979120591107 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.780268126160559 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.609167662219726 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.438059600994741 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.266896213803973 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.096663781091676 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.932204589037829 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.759922462743479 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.588081320126852 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.416141575780408 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.244102536815486 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.072661639881783 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.904679511044478 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.731885585208868 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.56034485499064 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.388782625956251 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.216775994551808 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.044554414312824 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.8768596091827785 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.703681045962918 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.5320960130447 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.360146852055932 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.18767304360112 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.01618185283253 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.848777234554291 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.677097487893905 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.5056221544006725 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.333539623424319 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.161669306638764 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.99025559425354 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.8214461430009585 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.650075080152043 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.478408858889625 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.3067030652740295 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.135163293165319 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.96599046668114 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.794158575146698 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.622759962357538 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.451391631159289 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.279916729245866 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.108319390903819 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.939067334105066 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.7676425435569847 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.596184597335048 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.4247536129421654 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.2532867845250757 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.081782042325198 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.9116570728072704 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.7404213366301162 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.569219022183805 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3978044422723914 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2262862863387656 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0550149552365564 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8845793835069766 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7132278492576196 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5418441869825594 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.370491604010264 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1991433133733087 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0286720560998033 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8575626336611234 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6860319838231923 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5145039255848997 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3429951065718526 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17150008378915452 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.792 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
