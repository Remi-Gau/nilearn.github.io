
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe96ca0b640>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 198.1663703918457 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.01851987838745 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.047128200531006 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.10936148961385 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.26847219467163 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.701865911483765 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.116326729456585 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.716637781688146 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 30.37027931213379 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.075770907931858 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.805826902389526 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.75624012947083 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.46258727709452 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.206602500035213 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 29.000510828835626 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.83702778816223 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.669256329536438 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.481496165780463 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.500635623931885 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 28.35507927442852 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 28.21310305595398 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 28.054191237404233 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.910594680092554 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.722990357357524 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.696478525797524 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 27.58187961578369 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 27.406373977661133 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 27.222045218503034 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 27.05915519169399 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.88989787266172 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 26.714879592259727 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 26.66540770376882 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 26.490512430667877 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 26.32199285247109 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 26.16620780439938 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.006202016557967 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.835833946863808 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 25.751718488899435 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 25.619203542408194 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 25.451988770411567 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 25.27302074432373 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.09993138545897 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.936868224825176 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 24.766225426696067 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 24.679794853383843 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 24.52226863967048 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 24.35281147127566 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 24.186067631904116 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.018240412076313 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.862946442195348 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 23.776329517364502 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 23.611510996725045 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 23.448851053531353 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.284289535486472 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.12684111241941 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.975377733057194 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.810626779283798 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 22.696757195288672 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 22.55288423340896 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.406707666688046 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.252591530481975 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.09820074331565 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.94765600850505 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.84718908960857 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.69288143515587 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.541092450802143 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.386774366552178 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.24211788533339 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.086000624824973 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.976766074913137 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.823174170085363 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.666618474772278 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.518160925971134 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.36570132268618 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.2158082433649 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.087755123774212 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.919648797888506 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.759896606593937 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.61174026513711 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.459151503405995 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.30134093761444 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.178266398700668 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.030160444538765 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.866714750427796 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.701529207683745 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.533801022697897 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.36649218270945 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.1995256385584 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.062658526680686 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.8938043331832 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.727384673224556 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.573988699651025 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.416153161422066 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.25235640874473 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.108858783194357 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.94037753657291 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.76946691672007 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.601381235515948 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.434535167655167 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.273739571523183 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.105522632598877 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.954222034699846 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.782961564905504 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.611765028203576 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.439159319950985 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.267619859604608 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.09759677131221 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.92689046235842 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.77695028870194 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.61247652167574 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.454396096142856 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.286696878639427 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.120738284928457 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.976137547366386 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.822862026984232 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.660342506740403 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.492169848803817 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.328860454070263 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.165937209533434 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.002441536478637 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.8480331103007 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.689750038887844 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.527526468527123 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.364198004327168 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.199694172028572 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.038304662704467 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.878105095454625 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.73210577701959 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.572328835725784 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.40979786436687 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.249721637138952 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.087830268699705 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.925505009564485 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.771967757017093 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.61039771606673 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.448218425114948 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.286298303043141 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.125083183720164 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.961911083995432 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.79905587820698 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.645399570465088 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.483436537127123 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.320589414784607 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.15813233468916 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.996104505327013 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.835871638922855 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.680822506342848 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.517981699534825 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.355724772891483 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.193790634206477 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.031187613805134 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.868970874129541 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.7086059921666195 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.552842955184139 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.390908389896541 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.22903436230075 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.067484837311965 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.905580599596546 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.74578179287005 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.5890495207324715 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.4299949407577515 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.2688384914990545 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.109555220898287 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.950480386523381 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.791176795959473 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.63625742449905 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.4759295417601805 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.317064236738011 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.156407129196893 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.995802099182761 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.835380259682151 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.676866938496193 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.51724209341892 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.356903423463678 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.198727544696852 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.038776431764875 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8781780221245503 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.716912889211191 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.5579225668746433 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.3970952646692374 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.2357663843366833 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.075261959054852 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.9144772802080428 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.753330518639153 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.593724893487018 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.43225164671202 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.270999639264999 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.1090348442608025 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.947203073095768 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7851675528067128 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.624324221360056 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4620742797851562 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2996298571427662 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1371435649654407 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9748105117955159 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8123287298740485 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6503928194240648 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4878902544224928 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.32531333692146075 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16266218861143794 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  18.842 seconds)

**Estimated memory usage:**  1814 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
