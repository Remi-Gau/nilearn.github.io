
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9e8d31f220>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 131.90984725952148 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 20.323287963867188 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 18.69071388244629 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 17.98571070035299 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.66591787338257 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 18.205933570861816 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 17.872870286305748 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 17.639827285494125 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 17.405101776123047 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 17.21138644218445 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 17.052351236343384 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 16.896261822093617 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 16.761135975519814 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 18.18836390055143 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 18.220318385532924 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.976315339406334 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 17.752755403518677 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.547226372887106 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.345482110977173 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.165031483298854 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 16.99610710144043 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 16.829546054204304 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 16.664127956737172 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 16.51740270075591 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.37041362126668 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.967108964920044 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.795423342631413 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.6307894565441 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.469317776816233 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.314366595498445 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 16.159690459569298 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 16.00948703673578 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 15.8631471991539 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.718424341895364 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.58046584970811 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.458308288029263 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.334199561013115 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.29297694000038 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.167079185184681 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.046616676526194 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 14.922877311706543 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 14.801030647463914 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 14.680959474472772 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 14.560997946317805 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.440940510142934 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.32597303390503 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.211871758751249 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.098871347752024 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 13.986756126085917 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 13.947316636844558 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 13.834197521209717 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 13.721008628022437 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 13.609591979246874 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 13.499233097400305 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.389630688561333 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.282905405217951 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.172902924673899 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.065893420001915 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 12.960012937414234 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 12.8572707459078 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 12.754170417785645 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 12.702681932293002 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 12.599699712568713 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 12.495932034083774 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 12.393292874097824 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.290474103047298 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.188972133578677 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.087493739910979 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 11.985361828523523 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 11.896246930827266 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 11.79595685005188 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 11.69530519633226 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 11.629576365152994 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 11.529779254573667 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 11.431144972105283 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.331139405568441 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.232309667687666 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.133626888324688 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.034649347647642 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 10.936245317700543 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 10.83864712715149 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 10.741941349005995 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 10.64526463717949 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 10.548898380922983 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 10.483283417565481 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.38709654527552 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.290169815684473 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.19375221756683 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.097870089791037 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.001711850755669 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 9.906388256284927 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 9.810632053312364 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 9.714898544809094 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 9.620476663753552 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 9.527001172938245 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 9.432696744015344 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.363407174746195 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.269665334642548 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.175592787411748 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.081762930359503 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 8.98784613609314 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 8.89391802797223 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 8.799104405384439 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 8.704339332950926 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 8.613943026616024 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 8.520728133973622 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.427841164031118 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.334811041288287 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.25801270979422 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.164389807149904 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.071165843443438 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 7.978443919001399 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 7.885327236992972 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 7.792959426356628 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 7.700494544547901 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 7.607767519743546 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 7.514541321787341 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.422644505133996 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.33041582673283 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.238446003248712 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.160238742828369 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.068106674950971 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 6.9760654285305845 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 6.884138710130521 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 6.7921143577944845 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 6.7003213405609126 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 6.608799756519378 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.517826660411564 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.426591843366623 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.334886044494866 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.243714204201331 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.162931746198931 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.072821053591642 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 5.981313888291668 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 5.89000542128264 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 5.7985819180806475 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 5.7072613660027 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.616259929907583 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.525307776271433 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.4344424429557305 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.343476670128958 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.252836462453748 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.162240441416351 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.080333866439499 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 4.9896261427137585 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 4.899017276435062 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 4.808565028726238 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 4.718235403502069 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.627938992268331 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.537322879637648 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.4470268090566 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.356860642401588 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.266827231959293 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.176826218374415 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.087221836114859 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.005643544658538 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 3.9156255232982144 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 3.8256336245567177 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.7355489640296256 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.647952711057363 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.566021680831909 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.478021562469672 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.3881928891311457 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.2981417837318467 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.2081747113204586 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.118117751497211 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.031548896467829 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 2.942362534071871 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 2.852555365789504 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.762818490259746 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.6730596317964443 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.583358628010889 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.4942591633907587 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.4046307326741303 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.3150061519666654 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.2255002430507114 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.136108560995622 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.0465928201621533 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 1.9591806738564137 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.869701425456468 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.780194600423177 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.694298828504362 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.610960672189901 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.521008087637646 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.431207801984704 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.3414322298926278 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.2516889802871212 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.1619834963650626 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.0723629758713091 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 0.9838299271921631 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.8942750002208508 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8064169421870047 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7175650497277577 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.6289424476228229 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.539187603390094 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.4492886249835674 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.3595407641663843 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.2695915384341013 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.1796837045688822 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.0898180175666234 seconds remaining)
    1989 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 44.136 seconds)

**Estimated memory usage:**  1862 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
