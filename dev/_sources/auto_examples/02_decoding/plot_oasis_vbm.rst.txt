
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-91

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 94-110

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 111-113

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 149-151

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 151-164

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-167

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 167-182

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f71603d2c70>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 185-230

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 266.16811752319336 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 48.93631315231323 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.309964656829834 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.12250018119812 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 43.12147760391235 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.17790460586548 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 42.690990686416626 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 42.226026909691946 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 41.76398277282715 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 41.3131300078498 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.42861723899841 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.07693906263872 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 40.71232120196024 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 40.46152186393738 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.19782672609602 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.17116594314575 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 39.87660336494446 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 39.605271619908955 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 39.31646468904283 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.05448922358062 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 38.96285820007324 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 38.69378047897702 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 38.414451187307186 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.35730073762977 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.25511519114176 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 37.98693919181824 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 37.73794021973243 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.45491852583709 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.189849512917654 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.109479813740165 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 36.87537360191345 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.629044509703114 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.36795437335968 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.11607269084815 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 35.96998830402599 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 35.71978834697178 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.483688328001236 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.259353212408115 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.08718509423105 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 34.992697446774216 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.8124942779541 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.637480421764096 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.44288655689785 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.33172919583875 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.1447048404 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.9475097126431 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.71946806493013 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.49585240952512 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.32620135943095 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.10149496428821 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.88158440589905 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.65541194466984 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.47500988153311 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.24285377196546 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.08142794503106 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.84502857381647 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.604899815150674 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.412678827319226 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.17254535083113 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.94293331291716 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.70234044392904 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.464381683068197 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.27185587729177 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.031705228109207 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.788147926330566 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.55167704362136 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.322078134074356 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.134658788567158 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.907642168157242 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.68134852423184 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.45384556906564 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.248552127623224 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.014261881510414 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.7762468873638 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.549385592744155 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.327047189076744 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.128126771826494 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.899686804065457 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.666146736878616 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.442752986014643 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.218099236488342 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.01844170358446 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.785459006704933 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.556891665401228 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.323314507802326 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.09519368059495 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.903667255889538 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.676321788765918 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.4521278034557 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.22583460539914 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.001162528991703 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.802691551355213 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.611158961835116 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.38901787419473 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.168903568957713 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.965097941850363 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.744625051816303 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.519482838738824 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.294437165163004 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.069034150152493 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.8625328540802 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.638420990197964 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.421693563461304 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.19472393017371 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.973906150230995 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.77111714226859 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.551429217716432 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.33425957243019 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.114396086445563 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.913739928411783 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.693926962939177 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.473998037544458 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.25398973056248 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.03440927193228 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.827695081108494 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.611615077308986 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.39244210308996 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.172203785333878 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.949262998871884 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.742668362224805 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.523207664489746 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.300688723887294 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.077091815041715 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.870996450021014 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.646140413899577 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.422644519805907 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.199051107679097 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.978520534169954 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.768783777952194 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.547190924947575 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.324442093188946 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.10413339483829 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.881898525989417 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.668320252483053 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.448268687547142 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.225225996088097 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.003006542430205 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.779873388527083 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.568035412525784 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.347639505811733 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.127444641930715 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.904841933690063 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.69279515911156 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.47128541152794 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.24960724512736 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.028047528760187 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.806909335802679 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.591658754413631 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.370230294562676 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.148205000282134 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.925638834635416 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.706992365666572 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.49215861370689 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.270761343388775 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.049234891866709 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.828375162616853 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.607340727096949 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.392229640559785 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.17155115513862 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.950502478101718 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.729089677333832 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.51555777780758 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.30005963054704 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.080216160581156 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.860183686744876 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.6399673620859785 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.424485103193535 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.205482747026546 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.986737523760114 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.76709663092032 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.547992846545052 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.331070318556668 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.111219722171163 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.890960143480687 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.671045563686854 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.452493974140712 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.23687359419736 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.018320969942599 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.799775654010558 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.581893417422332 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.363490502039591 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.146998059025127 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9283111174028 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.7093664166705858 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.490539364192797 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.2737606538308635 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.055080600964126 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.8363167104874067 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6176317397584303 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.3993509547420278 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.181772432829204 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9631384929437288 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7448043127854664 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5263890034176524 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3083528145072387 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0906099172738881 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8722480997747304 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6541201717357346 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.43597438600328237 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2179360221977809 seconds remaining)
    1944 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 30.014 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
