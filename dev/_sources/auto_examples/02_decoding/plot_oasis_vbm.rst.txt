
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb921eddb50>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 211.0147476196289 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.16314673423767 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 37.80841398239136 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 36.226773262023926 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 35.42502808570862 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 34.778653621673584 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 34.35637140274048 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 33.889791113989695 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 34.06135368347168 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 33.826139741473725 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 33.54777193069458 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 33.21397174488415 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 32.975162426630654 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.697612909170296 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 32.68462831633432 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 32.8917039235433 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.74985373020172 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.522197891684144 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 32.30032020144992 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 32.1981330796292 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 32.01787233352661 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 31.796825522468204 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.508820663798943 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 31.245417066242386 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 31.007562001546223 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 30.91300392150879 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 30.725060077813957 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 30.503418975406223 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 30.282629694257466 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 30.052639985906666 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 29.82909655570984 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 29.651394774836877 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 29.48877739906311 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 29.30334973335266 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 29.102000390782077 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 28.90390634536743 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 28.70976734161377 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 28.49499688921748 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 28.38040445980273 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 28.188184102376304 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 28.00219440460205 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 27.83195094945954 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 27.630827336084273 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 27.471720285193864 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 27.331603483720258 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 27.135427845848934 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.944007873535156 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 26.752807845460605 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 26.557665626207985 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 26.394017068707214 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 26.229601621627808 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 26.02619982700722 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.82714577821585 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.63130234322458 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.438471732316195 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 25.261659665541213 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 25.141616003853937 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.953800423103463 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.763460479933638 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.584849523285687 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 24.397131601969402 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 24.20643844369982 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 24.06943981878219 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.879590057191393 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.692379236221313 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 23.505798504902767 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 23.312921784140848 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 23.12802927173785 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.99261286679436 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.81433129656142 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 22.643371684210642 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 22.462636561460897 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 22.278233422173393 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 22.10669741565234 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.96758939768817 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.781493822733562 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 21.600471484033683 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 21.414953869658632 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 21.22486609679002 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 21.05663370482529 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.90514385700226 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.718633660563718 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 20.542079826680624 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 20.355429169643354 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.17083638054984 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.99234170072219 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.839363946471103 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.655404660893584 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 19.478670727122914 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 19.296188600947346 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 19.118846469455296 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.940792136139923 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.792525218880698 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.610867861778505 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 18.437458697785722 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 18.259172389381813 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 18.083582858244576 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.902240153440495 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.743279491152084 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.574420139043017 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.39421248435974 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.21722220902396 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 17.041293003979852 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.85793637303473 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.691293496351978 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.511680852799188 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.328635751076465 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.14973820926987 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.97244339519077 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.820418712196 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.662525458769366 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.487547962515205 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.310701932225909 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 15.13849079714412 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.963820294329995 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.79015947424847 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.630360003175406 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.454686134289473 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.276052955853737 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 14.099085907976168 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.91804027557373 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.740496982227674 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.574948588355644 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.395923697851536 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.216887666333106 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 13.040662908554078 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.867834257701087 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.692735185773353 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.534066259860992 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.356622013934823 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.17813150699322 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 12.004698951735751 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.827811255599514 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.65052436706715 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.484253523954704 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.306633551915485 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.130462534287396 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.955117079463319 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.778759925261788 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.60112441700997 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.433226074491229 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.255644184477786 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 10.077627625263913 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.900101193181284 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.722868469026354 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.546841144561768 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.37895421785851 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.202447377094606 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.029041502926802 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.854124730065365 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.678594191869099 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.503012510324945 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.334745833748265 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.158262481876449 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.9819503356884045 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.805604296345865 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.63060352129814 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.458629381884435 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.288870920108843 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.1140595637027575 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.939782023429871 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.763875863566902 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.588422816476704 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.414507672830593 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.243791638351068 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.0685713002176 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.893870342208678 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.718010772488075 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.543175470261346 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.369671031568177 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.1994483751409195 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.025620304353056 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.851625270621722 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.6773736201269775 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.503540696768925 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.330227749688285 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.1598364981738 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.9869108051903503 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.81320168998804 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.639620599799982 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.465929163826836 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.2920909876322875 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.1200437126578864 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.946742748302189 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.7730164320572563 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.59959255038081 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.426352693188575 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2527287656610664 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0805359191082893 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.9071395258424142 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7336684653633518 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5601244497049542 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.386720061302185 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.213317787091349 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0404679283653337 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8671048482259114 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6935914584568568 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5201311147757594 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.34671955638461643 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17333675389313818 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.849 seconds)

**Estimated memory usage:**  1881 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
