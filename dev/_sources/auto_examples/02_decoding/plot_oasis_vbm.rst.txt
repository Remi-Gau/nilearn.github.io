
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f00d505f070>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 281.9538116455078 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 50.94154119491577 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 48.63389539718628 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 47.405407667160034 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 46.27943539619446 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.57759761810303 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 45.060773611068726 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 45.16611535208566 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.81447982788086 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 44.28655060132344 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.77277731895447 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 44.02713918685914 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 43.86207906405131 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 43.38147974014282 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 43.1567120892661 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.79998389879863 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 42.64669334888458 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 42.32768503357383 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 42.02044124073452 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.648975209185956 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 41.469672203063965 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 41.25146553629921 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 41.09657255086032 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.850817732189014 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 40.65804322560628 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 40.51284313201904 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 40.28914893590487 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 40.07291703754001 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 39.86195686885289 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 39.78191434103867 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 39.52115845680237 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 39.24101747235944 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 38.98318111896515 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 38.747363328933716 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.5461845257703 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 38.23449652535575 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.955230447981094 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.68281858031814 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.536716260408106 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 37.26362246733446 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.95971870422363 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.66360664949185 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.40675808134533 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 36.24119680981303 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.97585517709906 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.746320512559684 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.49651046421217 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 35.32808162303681 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 35.089435736338295 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.83409338581319 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.577736139297485 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 34.33429498298495 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 34.144215125304 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.91360793473586 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.66155344468576 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.40888168595054 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 33.19914722442627 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.98560907966212 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.77182838834565 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.53486841816013 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.28625297546387 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 32.09570119029186 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.855021892055387 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.7352931121039 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.553065568208694 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 31.365975049825817 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 31.16660253929369 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.933545585888535 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.690109112683466 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 30.51646445799565 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 30.307062319346837 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 30.116223456154408 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.888370513916016 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.705423809077644 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 29.48179076168988 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 29.216941992441814 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 29.00942617968509 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.79402669683679 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 28.581934311451057 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 28.3386101813256 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 28.07530689239502 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.826387016861528 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 27.61807058497173 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 27.373970591878315 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 27.120091756184895 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.872908241608567 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.629543953163676 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 26.41545296263421 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 26.17692756652832 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.928642556908425 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.67245592011346 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 25.443107269622466 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 25.192073200059976 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.959744245775287 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.72107119763151 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.478808716723794 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 24.25394304593404 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 24.000402362076276 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.761325962689458 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.521772177532462 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 23.303129196166992 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 23.060474225790195 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.812222457399557 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.571081654539388 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 22.33408289689284 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 22.11138549305144 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.867109932989447 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.631810399973503 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.3939954439799 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 21.170445774673322 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.933445193550806 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.69027513641495 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.444368311337062 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 20.20078489843723 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.978847072835556 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.758853570274685 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.51971745491028 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.282883974222038 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 19.06572216244067 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.834475020400617 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.604992548624672 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.36791884209499 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 18.129414914084265 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.904236025926544 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.67324822179733 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.44355807304382 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 17.204541467484976 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.991544098365964 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.75240159034729 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.514717281326767 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.272978745974026 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 16.03598418490577 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.808624549345536 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.58462677324625 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.34915877100247 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 15.117568069034151 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.896039738374597 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.65818418029451 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.425020573795706 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.196134874288983 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.97033337184361 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.735271536712105 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.49649056246583 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.266577550581285 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 13.029367340935602 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.802745506681244 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.56638235915197 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.32919563403746 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 12.094431477624017 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.862655537240457 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.628832340240479 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.395056173501425 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.16024587028905 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.92768331602508 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.697078172262612 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.460830703858408 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.226092583093887 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.99291462958998 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.760722398757933 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.528107686612591 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.295193195343018 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 9.06193605120878 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.82747859130671 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.597043350430354 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.362290178857199 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.12951532277194 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.8954380707568435 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.66150958095482 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.431655656723748 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.19690423039995 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.96549885413226 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.733339078245107 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.503060241078222 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.268505391357952 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 6.034906568198369 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.802584137235368 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.574897798624905 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.342840609577416 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.110830470417323 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.877782073100852 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.645491706000434 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.416499804396656 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.183343379052131 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.9495873946309743 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.717852965645168 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.485925899969565 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.2535297537362706 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.020574150238445 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7878604290333198 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.554800236666644 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.323313173494841 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.090391015507164 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.85893044869105 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6262589798072458 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.39692931076915 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1683201056260328 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9344871530727463 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.7006480766431935 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4671657759733875 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.23353212802254375 seconds remaining)
    1941 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 37.738 seconds)

**Estimated memory usage:**  1926 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
