
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fd218cb0640>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 156.77690505981445 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.35880422592163 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.42727017402649 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.78158736228943 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.80900287628174 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.42141032218933 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.1298090616862 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.897844825472152 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.67603874206543 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.49783123864068 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.316011667251587 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.157445625825364 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.152577559153237 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.002527988873997 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.859523023877827 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.731857776641846 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.60337495803833 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.479639516157263 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.352627118428547 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.228653255261875 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.116280555725098 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.075666450318835 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.94712240045721 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.813301988269973 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.684526125590004 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.559043645858765 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.434851022867058 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.31142544746399 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.206758669444493 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.13822816980296 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.00898321469625 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.88486225374283 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.761638045310974 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.637945240194146 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.50992450994604 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.385808195386616 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.256634182400173 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.137913388174933 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.053615294004743 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.936604035206333 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.819726943969727 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.70595659279242 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.587651195980254 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.471823686777157 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.355025443163786 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.24266470803155 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.13025409242381 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.047454144092317 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.93628927071889 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.83440866762278 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.736843824386597 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.62215544195736 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.50141508762653 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.384411290006817 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.26780029579445 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.1734139919281 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.051285811832972 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.931077480316162 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.81206602063672 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.69002635600203 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.56698242823283 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.44577753348429 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.327651054628433 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.209086096475993 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.108924508094788 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.98649837420537 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.865913586183028 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.743168247279836 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.61955561357386 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.495767662490623 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.374251910618375 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.25262824582382 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.149038526746962 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.02685668370495 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.905839346550605 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.785261154174805 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.66189055693777 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.539835697644717 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.417349528043697 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.296545339536063 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.175740361213684 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.070846204404479 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.952745978425188 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.836814745362982 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.717207874570574 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.59843579460593 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.480805130892021 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.361179168196932 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.240716934204102 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.13313957010762 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.014755778842503 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.895102707894294 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.775528441304747 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.655876946705645 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.538502683030798 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.41731629873577 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.297885060310364 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.178499243923069 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.069279276594823 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.948128724339032 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.82892632484436 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.713024951443813 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.592780678879981 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.471737704230744 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.353200178879959 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.236978769302368 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.126205120446548 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.006225490124425 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.887801753150093 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.767943382263184 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.647522016005084 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.527440777770034 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.407495413507734 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.28982119011668 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.188334347908958 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.074166577795276 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.954739488404373 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.835082608410437 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.71586296113871 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.59612027737273 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.476295630137125 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.356358508433193 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.236675625941793 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.123312244570352 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.004639848586052 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.885061979293823 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.76538836766803 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.646041275009395 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.526653409004211 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.406803302986678 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.287509441375732 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.168530973769325 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.054323557651404 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.934958543992581 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.816244292615065 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.697255717383491 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.5787602592917045 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.459499933423787 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.340646619382112 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.2218150663718905 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.11739775112697 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.998313330589457 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.879295819242236 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.760540603757738 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.641183747185601 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.522426473683324 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.403175295215763 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.283832125112313 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.164824298910193 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.047992056648203 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.929509401321411 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.8108371030415915 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.693284486469469 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.574742155137406 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.455702196468006 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.336625568328365 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.217563396845108 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.100918621014637 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.981840121595165 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.862913281662659 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.744110107421875 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.6254311777790145 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.5063372394185 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.387840317802195 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.269382098825966 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.150579835429336 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.033249131168227 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.914322060739209 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7952661514282227 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.6765219445764665 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5576109325184544 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4388953607681896 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3203028080075287 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.202883001007786 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0854070076997253 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9666295732770647 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8477378541773013 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.729067293264098 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.61028546697638 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.491718071133065 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3730218940311008 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.254268493441587 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.135614478981102 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.017834421064033 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.899077913035517 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7803345306499585 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6616231190261022 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5429569374431262 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.424225533262212 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3054735370413966 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.186767013449418 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0684864570957204 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9497934679190317 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8311369122618838 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7124323795751198 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5937067056313539 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.47500515957267914 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35624548263356165 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23748296198218763 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11872989568279017 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 0.644 seconds)

**Estimated memory usage:**  1852 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
