
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f7177c711c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 150.2680778503418 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.57239842414856 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.77895450592041 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.127034902572632 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.797168970108032 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.520207405090332 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.596131881078087 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.34103962353298 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.17131996154785 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.977944718466865 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.78434467315674 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.6026818969033 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.476255416870117 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.332577246886032 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.325256824493408 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.180406014124554 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.032408714294434 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.887515811359183 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.75040872891744 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.602226420452723 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.46913433074951 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.342627252851212 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.22656670483676 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.165156333342843 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.035116831461586 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.91381859779358 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.79885502961966 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.68173782913773 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.553262574332102 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.42673297586112 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.3123201529185 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.18175004374596 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.10050767660141 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.9787845250332 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.852743878084073 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.73397673879351 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.61412149005466 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.515814188364388 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.394711394059033 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.29227768457853 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.183056831359863 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.098337022269643 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.979775394712174 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.849035651184792 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.718707279725507 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.596042182710438 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.476729818012405 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.36596514316315 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.245351394017536 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.13326021116607 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.03501057624817 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.908986334707222 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.79698063777043 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.6768948761922 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.559004253811306 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.434493693438444 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.309085164751327 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.188609579153226 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.065667431930013 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.967829643669774 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.842801968256634 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.722221952969912 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.6023974726277 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.48609383522518 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.371924668550491 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.2568951019874 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.142011989246715 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.02073249176367 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.915140123928294 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.79789624352386 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.683884518487114 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.56577839649899 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.444922977023653 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.32950150803344 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.211012840270996 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.09956733385722 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.984828534879183 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.885172803680618 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.769136789517525 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.651133160047893 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.5377436876297 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.419981450210384 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.303626275644069 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.187620062425912 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.072547730945406 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.963413687313304 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.856020844259927 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.738997727975079 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.622757044705477 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.507336512040556 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.391950183444553 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.277376002007788 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.16266709825267 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.048066239203177 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.931266257103452 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.815597885533384 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.708192030588785 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.592713095478176 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.47772925240653 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.362380133734808 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.24760627746582 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.138512096782723 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.025548757291308 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.90961936839576 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.795986028817984 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.690149806794667 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.574073692537704 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.45911636976438 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.343162810360944 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.227641057530674 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.113443873145364 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.998405407140922 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.885902864592415 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.772486051626965 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.664763684858356 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.552135125450466 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.438702575091659 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.32494050824744 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.21097353757438 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.096663621293397 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.985634009043375 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.871271767892129 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.757704750436252 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.650633627806252 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.537757758171328 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.425749921798706 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.31190580413455 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.198639888463058 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.085410848259926 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.973479938137438 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.860273874722994 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.748156438347038 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.638826615882643 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.525454897629587 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.41218194676869 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.298486391703287 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.184704051298254 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.070995858115872 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.957986551782359 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.84489313818568 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.731216056006295 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.621427632392721 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.508433587114576 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.395581898989377 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.2836267948150635 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.171144986974782 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.058729570205897 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.945623782216287 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.832232526830725 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.719412211603767 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.609024922053019 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.495901303575528 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.382633861742521 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.269482698315889 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.156701292310442 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.046074082774501 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.9328861481104145 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.819840350728126 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.7070060017742685 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.596649987142791 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.484310686588287 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.371713108157519 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.258922167766241 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.146602077718161 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.034294250534802 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.9217823201959785 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.8092080742479806 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.6967635069064753 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.5858361834571473 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.4742392421474118 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.36279912555919 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.2506554656558566 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.1386795931084213 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.026889406876757 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.9143924000619474 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.801978417805263 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.6898636492815884 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.57849918651042 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.4661386146974027 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.353899878496564 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.241603003607856 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.129262413109205 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.017491314437363 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9056495121919395 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.7934838170590608 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6813952536196324 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5699020252432876 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4577514997778092 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3457073911707451 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2336227111715488 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1217518605683978 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0096915255042271 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.8974919815858204 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7852699843095373 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6730877836954963 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5611561689621363 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.44890901020595003 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3366867672973478 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22445619949186693 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11221791631612346 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  57.728 seconds)

**Estimated memory usage:**  1876 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
