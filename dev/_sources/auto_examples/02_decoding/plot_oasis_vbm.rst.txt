
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-91

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 94-110

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 111-113

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 149-151

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 151-164

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-167

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 167-182

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fac7b4aa6a0>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 185-230

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 199.17726516723633 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.513943672180176 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.1911563873291 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.351922273635864 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.24910259246826 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.052040815353394 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.654243787129722 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 31.419612237385344 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 31.108074188232422 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.792543278800114 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 30.495018482208252 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.606887405568905 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 30.344160000483193 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 30.110843603427593 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 29.908904007502965 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 29.691253582636516 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.484394788742065 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.333533006555896 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.065338399675156 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.82857131958008 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.578924655914307 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.34360545022147 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.111905358054425 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 28.894121709077258 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 28.848892847696938 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.634715795516968 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.4279826604403 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.241629079536157 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.752962623323715 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.85086391712057 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.672829071680706 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.498755962617935 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.33128386735916 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 28.17229576544328 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 28.012633632211127 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.91798394066947 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.74693671862284 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.57120705939628 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.392409437581115 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.223212767870002 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 27.042736053466797 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.915415496360964 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.75501283009847 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.576377120128896 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.394596099853516 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.215197960535686 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.046176257340807 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.87035509880553 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.76705745855967 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.683832309683975 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.50395894050598 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.31357821296243 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.1761865065648 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.247260093688965 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.036041648299605 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.824515125968237 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.619867801666263 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.418846874906304 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.21589371253704 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.050797583693164 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.873605489730835 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.674583607032652 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.468385619501912 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.265546643544756 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.06389093399048 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.860860604506275 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.708413102410056 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.50513064683373 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.305337639415963 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.108019317405812 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.91792038508824 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.724454953636922 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.536582522922092 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.390912186609558 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.2080786808117 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.015162070592247 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.828021137337934 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.63775729204153 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.449570472423847 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.30224740052525 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.115921020507812 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.92978733262898 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.751883512589988 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.572362138564326 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.39012244769505 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.202644853030936 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.056230622668597 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.876980096444317 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.69908467206088 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.51772068323714 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.341179582807754 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.309931969904635 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.137983467267908 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.963656153730167 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.79442422947985 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.62170918364274 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.450869838396706 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.278935798664683 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.126092103062845 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.958812978532578 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.784727573394775 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.60744838667388 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.429712669522154 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.2538232710755 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.099591915424053 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.924583196640015 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.751741476778715 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.577624450220126 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.40452950089066 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.238275377028579 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.074893062764948 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.898109979457685 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.723011136054993 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.54880097060077 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.373739698476959 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.19889815993931 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.026898490971533 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.86537367462093 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.696478148638192 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.524208960412931 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.349293549855549 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.17642530725022 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.002472846234433 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.837158113960328 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.665493019165531 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.495159387588501 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.321219750813077 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.149836643474307 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.030482992529869 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.870701338893683 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.697899451622595 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.526410530541689 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.355171767148104 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.183196480112866 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.026593404029732 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.859094628581294 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.690381667193245 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.51962303593211 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.346469454143358 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.174411080724044 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.015874147415161 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.843887545538287 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.683337856346453 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.512344787170838 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.341447485817804 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.172630860887724 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.004838087787366 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.83708395925509 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.675761963870075 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.507062350343539 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.337508996327717 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.16878950516909 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.000759651786403 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.833552466498482 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.669496883045543 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.502389669418336 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.333418736091027 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.165155269537761 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.996489902085895 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.82833287700917 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.6598716378211975 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.4960789754523995 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.327970372305976 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.160059174145657 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.993317121412696 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.839470039714467 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.676504522921091 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.511418630976877 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.342585245768229 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.173767572323952 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.0060363657334275 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.837627862629137 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.66951080810192 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.504477782056511 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.336401388562959 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.168822152273996 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.001176682385531 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.833802291902445 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.6671185600623657 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.5023627760690017 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.335512108272976 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.1686967196385503 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0015880249358795 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.8347237735498148 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.667977291604747 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.500975157763507 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3357583245923443 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.168645508149091 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0014541859322406 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8345989272707983 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.667719276327836 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5008065800392192 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3344888190428414 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1675266527758978 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0007966670793356 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8339726496965457 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6671483954604791 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5005419339020241 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3339619130799265 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16696625498671028 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.966 seconds)

**Estimated memory usage:**  1879 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
