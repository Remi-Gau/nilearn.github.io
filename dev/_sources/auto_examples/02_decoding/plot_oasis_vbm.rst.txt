
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f123ee51f40>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 172.20258712768555 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.706411123275757 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.608997106552124 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.658432165781658 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.700260162353516 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.166357040405273 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.738445520401005 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.37775244031634 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.351337432861328 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.068876690334744 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.92773413658142 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.680052952332932 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.426785628000893 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.25990994159992 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.09254813194275 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.90758442878723 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.84261667728424 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.66667262245627 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.472910669114853 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.35777120841177 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.184534549713135 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.030933811551048 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.86119528250261 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.702103542244952 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.641708374023438 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.476029634475708 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.305175432792076 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.136920920124762 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.964788028172087 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.80998086107188 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.652153809865318 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.702706421575236 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.543933868408203 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.385308887019303 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.226316984962015 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.068082809448242 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.915502071380615 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.76215573259302 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.606361476998583 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.49945881427863 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.346378326416016 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.19523104225717 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.04392251514253 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.898448772208635 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.752483476292003 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.603382666905723 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.456028793169107 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.347695868066015 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.205098867416382 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.057801971630173 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.911181926727295 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.76823337872823 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.62547047321613 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.48871399321646 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.3522498872545 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.24567630074241 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.102318627493723 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.9573740833684 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.825452434605563 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.688909158868302 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.551921606063843 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.413376991866066 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.300147356525542 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.16819051712278 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.025148510932922 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.88748256976788 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.746934811274212 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.61587894496633 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.478798529681036 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.33858860057333 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.225015231541224 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.085370725309346 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.96583048502604 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.826486917391215 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.68898222253129 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.552294492721558 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.414710295827764 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.27775078624874 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.16255450860048 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.02671269827251 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.891588807106018 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.755779752024898 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.621784181129641 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.488551760294351 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.350988581067039 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.218384784810684 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.10909210249435 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.973957505719415 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.837917284532027 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.703029313783967 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.5679812696245 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.433453884753552 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.298005135163018 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.176944786502471 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.04250574619212 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.909228036278174 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.776931583881376 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.642849297867608 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.509734645181773 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.376761422012791 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.245133876800537 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.125970297520704 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.99448927711038 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.861479219881076 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.733234405517578 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.600686822618757 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.469068896095708 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.339096548401306 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.216729791076094 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.090158484397678 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.956870729273017 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.824555012556884 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.693425587245397 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.562750609575119 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.429849076689335 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.295916671338288 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.17081095432413 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.036658071045183 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.902003619630458 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.768077020885563 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.634387175242106 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.499945991295428 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.366538368287634 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.23337086623277 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.10553664545859 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.972702169418335 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.8390667249286 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.705772912408422 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.57203297317028 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.438580195109049 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.305932796918428 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.17769174175408 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.044094815398708 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.911150077231845 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.77753299385754 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.644743054001419 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.512024150175206 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.378305972927679 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.244395128194837 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.114713725426213 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.979957444327217 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.846438837389574 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.712546147091288 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.578490934171876 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.454935126834446 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.320981379213004 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.186182740616472 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.056666596406171 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.923066480739697 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.789956585672878 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.656620661417643 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.523113029682084 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.388939882579602 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.255608820447735 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.125087942395891 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.991182650289228 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.8574772492433205 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.723792070036481 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.590108530430854 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.456317487752663 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.324128210544586 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.190319989778981 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.059273369518327 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.9255350879364945 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.792114856766491 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.658460487018933 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.524930026157793 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.391138672114846 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.257621946788969 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.123977445286406 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.9929736782522767 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.859321457600733 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.7258677149927895 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5926178934946225 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.4590803453291974 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.325693028313773 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1923863345926455 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.0604276495464777 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.9271360327688494 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.793942022589998 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6608788437313504 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.527557054277283 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.39405431328239 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.260678163643092 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1272778096406357 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.995033715222333 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8616680201663767 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7285584243223628 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.595371332574398 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4622013871631925 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3290490853159052 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1960987270814587 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.063029239575068 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9304424530483897 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7975773516389513 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6645901631086301 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5316082506763692 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3986540663665927 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26574613349606296 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13285382428959985 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 5.111 seconds)

**Estimated memory usage:**  1896 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
