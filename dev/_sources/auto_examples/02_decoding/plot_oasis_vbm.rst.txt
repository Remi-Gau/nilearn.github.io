
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fdcb2df9b80>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 175.36163330078125 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.592063426971436 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.5529625415802 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.029868920644127 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.4296932220459 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.460007429122925 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.098233779271446 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.767346484320505 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.553165435791016 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.317498710420395 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.08751916885376 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.893597559495408 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.868692557017006 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.687030718876766 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.483599390302388 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.295438766479492 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.116943359375 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.96325290904326 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.835187170240612 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.67639133804723 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.6296546459198 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.45927601768857 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.291083856062457 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.14301373647607 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.00546360015869 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.846064805984497 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.700273788892307 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.619118999551844 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.475123746054514 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.324692553487317 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.18102057774862 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.030820600448113 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.875334560871124 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.72470929405906 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.575642992468442 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.488512890679495 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.340820444954765 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.190486811302804 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.04187644155402 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.89776138158945 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.75668716430664 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.61106938850589 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.516864787964593 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.36502990057302 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.217458031394266 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.072874704996746 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.934606313705444 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.793750925266995 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.648937622706093 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.50687660003195 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.402430295944214 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.26097029798171 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.117807865142822 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.979545408824706 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.8367914447078 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.6941499710083 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.551389081137522 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.43972081050538 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.30037418727217 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.1624840801045 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.089146852493286 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.947560877096457 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.817770111945364 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.673723186765397 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.554267585277557 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.424805622834427 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.28095342173721 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.13804115110369 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.9929818686317 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.848175822824672 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.70338215146746 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.563557164769776 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.44513405693902 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.304043600004015 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.16377045012809 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.02480673789978 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.891125603726035 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.748339132829145 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.606883317996292 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.482819318771362 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.33987784385681 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.20083644066328 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.064165993434628 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.92336852866483 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.784393798737298 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.644262636409087 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.503060850986213 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.378107964307413 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.24006175994873 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.102821998381883 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.963229311837091 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.824210098811557 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.686452907064687 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.548497617885632 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.423203072649367 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.284155720158628 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.147010584672291 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.007750791372713 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.869478371678568 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.731433976780282 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.593314170837402 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.454658005497244 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.329329495336495 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.191266363106886 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.054661750793457 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.917492321559362 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.783245104663777 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.64590252225644 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.508663283454048 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.379453361581225 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.240265716205945 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.104626028387397 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.966817668506078 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.829532226630016 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.691872182645296 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.55390507241954 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.416656609239249 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.287531117088776 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.150570740134029 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.01296301048343 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.874903678894043 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.737936878992507 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.607786143412357 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.469877264363978 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.339509156442459 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.201609897613524 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.065000140477741 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.927235749762827 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.790948033332825 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.65280376109042 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.51539057951707 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.379414340011946 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.249270908760302 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.11270853272058 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.976203847287305 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.839557647705078 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.702986436731676 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.56597793711363 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.42888331413269 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.296845846038927 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.161197628293719 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.025446125801574 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.888495203474878 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.75121766203767 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.614487065209283 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.478195478176248 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.341226120517678 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.208674396787371 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.072493069880718 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.935512952356531 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.80068039894104 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.665774740130696 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.529411817851819 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.393172521217197 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.259895442368148 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.123221258963309 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.986960135973416 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.850578671048401 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.713762874844708 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.577121149818852 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.440379023551941 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.303769252315071 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.169994033413168 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.03342604637146 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.8968378218208874 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.760137167843905 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.623250314988286 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.487236518345907 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.351248105367024 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.217118174366697 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.086059037376853 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9495059663092182 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.8129378141358843 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6764467424050924 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.539891371781799 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4034648282187323 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.2672762437300245 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1327096648135426 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.996266587396686 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.859976326287126 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7235970232221813 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.5869628079029736 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.450466981300941 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.314125184804364 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.178987150606902 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.042705587438635 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9063655919926141 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.770142056725242 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6339308758999438 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.497798135040929 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3615372306422182 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2258710224591 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0896281202634175 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9533537928922188 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8171558699657008 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6810370714236528 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5448004469579579 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.408558441297657 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27234955267472705 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13621728024890076 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.119 seconds)

**Estimated memory usage:**  1913 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
