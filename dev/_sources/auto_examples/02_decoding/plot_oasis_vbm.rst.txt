
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f772e02c250>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 189.61191177368164 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.195287466049194 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.812984943389893 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.91434764862061 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.449880123138428 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.124186754226685 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.838616530100506 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.96062820298331 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.652090072631836 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.366713285446167 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.116538763046265 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.91975376822732 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.68043526013692 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.55711683860192 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.52627182006836 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.37339512507121 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.278690934181213 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.116332671221567 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.974393447240193 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.837043586530186 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.669877529144287 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.60674067905971 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.455573342063214 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.279014431911968 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.102544466654457 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.95639729499817 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.801874802662777 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.63357455642135 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.479112250464304 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.412755242709455 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.245830853780113 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.113438429371 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.94865894317627 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.784220117511172 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.643621612997617 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.485329968588694 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.38352608680725 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.212876416541434 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.054522602181688 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.898150621316375 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.761937141418457 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.61542879081354 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.468712874821254 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.392185810000395 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.224128463051535 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.05680823326111 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.896574403928675 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.73521971195302 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.57681091626485 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.416480852633107 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.297853231430054 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.140226971869374 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.98514329470121 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.831922526629466 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.68215459364432 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.543768774379384 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.38798325402396 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.244737181747166 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.128449020714594 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.975107156624226 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.82703479131063 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.676465065752875 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.53163384622143 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.381843256571933 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.23189941048622 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.110058362667377 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.96269757819898 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.820155930163256 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.67179549441618 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.52669193779213 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.37957402638027 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.229814791343582 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.109850141737194 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.96044019803609 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.813734763377422 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.66732931137085 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.522886778178968 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.374930301269927 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.227194847204746 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.08133528202395 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.95638358592987 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.807983386663743 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.662003668343147 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.517584907003197 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.372907842908585 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.22711899701287 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.08465150899665 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.958802900095096 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.813578952442516 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.669877815782353 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.525564644071792 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.386080545383495 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.242479034092117 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.099028377122778 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.970946727915013 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.8251201604542 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.682761967182158 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.539879646497903 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.401766961934616 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.260540649144335 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.116181373596191 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.973113392839338 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.842480785706464 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.69827333237361 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.554008190448469 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.410740784236364 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.266755104064941 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.122726776889552 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.978675135859737 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.848347084237895 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.703883496197788 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.55964156958434 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.414566295487539 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.271049244213948 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.128601400475754 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.985456000203671 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.850462173593455 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.70715426787352 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.563317500938805 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.419545470165605 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.27516237894694 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.132244819451955 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.988708167779642 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.850179652857586 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.713049519446589 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.57031979560852 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.43079571875315 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.288120868637806 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.148195073008537 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.006473415581755 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.864318022361168 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.73288489662054 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.589904712908195 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.44802943566688 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.30535557020956 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.164302093011361 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.022050633149988 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.880017593829301 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.744946403779846 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.603319735835782 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.46081897190639 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.320424145840583 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.179411391137352 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.037466184242621 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.895502063963148 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.75901934196209 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.616763265165564 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.4748283778729085 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.333048962258005 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.191360803258499 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.049716393152872 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.907768658454844 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.765483705621016 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.627990626042186 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.486835501410744 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.34493701688705 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.202942701486441 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.0618283566395945 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.920183960395523 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.778541431486982 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.641796708106995 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.50119341678501 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.360436221699655 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.219440368055566 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.078129506692654 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.936229821407434 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.7950410929070895 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.656463991382165 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.515194756644113 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.379152245775482 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.237713070476756 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.096175794712981 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9548498863397645 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.812952737587725 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6735080823130994 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.53195766040257 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.390803055329756 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2489143266516214 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1078525098522056 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9660305750436624 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.824323813120524 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6844067270584526 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.542654399033431 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4016438494614567 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2599871262260103 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1184526971868567 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9769520733946113 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8356284661726519 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6942529881254154 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5537252703671731 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.412331468180606 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.270933538207209 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1295670469601948 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9882270462154724 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.846930469434286 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7057414605067326 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5648386721708336 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42358740574212245 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2823489049468378 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14118577966737986 seconds remaining)
    1959 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  12.358 seconds)

**Estimated memory usage:**  1893 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
