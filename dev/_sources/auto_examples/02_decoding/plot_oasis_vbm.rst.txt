
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc35fd140d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 268.0373191833496 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 48.43049883842468 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.053536891937256 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.137029091517135 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 43.76301097869873 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.16960120201111 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.154941161473594 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 42.50650674956186 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.15105056762695 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 41.74149537086487 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.37547183036804 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.162174203179106 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 40.92581915855408 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 40.69971163456257 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.62361662728446 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.33126711845398 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.06205141544342 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 39.826884269714355 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 39.54377704196506 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.359881589287205 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.13909649848938 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 38.89316097895304 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 38.624668403105304 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.41495339766793 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.19099426269531 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 37.92449951171875 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 37.61562697704022 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.39430615637038 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.120112487248015 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 36.904224675277185 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 36.72900207837423 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.45934838633383 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.21618980169296 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 35.958540468504935 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 35.712699735865876 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 35.48274237768991 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.26288371615939 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.02886658745843 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 34.784753548471556 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 34.547064707829406 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.301727294921875 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.077244694639994 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 33.86547692616781 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 33.67639471763788 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 33.43808035417037 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.20499912897746 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 32.970620673635736 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 32.76590892609129 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 32.5606883764267 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 32.33504472946634 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.118635416030884 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 31.897941163941923 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 31.689441497509296 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 31.52034032119895 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.298169409787214 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.062417832287874 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 30.86298976625715 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 30.67206335904305 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 30.454234517853834 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.233619326252047 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.0456170241038 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 29.836329045842906 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 29.640966146223004 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 29.41329114777701 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.19871696829796 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 28.99598886416509 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 28.780029903758656 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 28.567047631562644 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.337314577663644 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.112711782040805 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 27.891179152897426 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 27.65976452491653 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 27.43773227267795 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.217666906853246 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.0136390183423 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 26.789567867914837 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 26.56610295647069 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.370020172812723 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.163518496048756 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 25.940927831432486 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 25.723852157592773 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 25.50319840878616 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.292438460559378 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.072706842996986 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 24.85837818327404 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 24.653552335851334 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.439955350964567 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.216589881085802 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.00734823400324 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 23.79227475369914 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.597565571467083 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.383399211443386 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.16460334736368 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 22.95352787612587 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 22.73969754259637 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.530987626627873 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.335565149784088 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.13502654095286 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 21.917431631866766 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.707167673592615 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.50678563117981 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.290606316953603 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.079872701682298 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 20.864064711968876 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.656506244952862 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.444166490009852 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.222183492948425 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.02017694098927 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 19.80678876241048 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.58985690458105 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.367973219264638 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.14672603478303 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 18.925186702183314 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.710545626361814 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.493514629832486 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.27215076529461 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.053393150198048 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 17.84204130906325 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.645928132331978 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.435208392744304 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.218302726745605 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.9982004934106 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.787258922076617 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.574474160264177 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.359309488727202 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.144967079162598 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.93457395311386 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.726974263904602 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.518143013119698 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.299108508945436 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.0835207425631 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.867133952279127 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.665618614716964 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.455458418767256 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.243706955838558 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.02405203713311 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.809948640711166 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.592253940818953 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.375972011814946 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.17517946263869 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.95796980176653 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.744232586935057 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.527055851170715 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.31057287929775 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.094279461436802 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.877193064525208 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.66330407090383 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.448719952382199 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.232852323635205 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.015028644728181 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.798093159993488 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.57957919386049 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.36271471726267 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.146437914542902 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.92931892964747 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.712262230534709 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.494837119029118 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.278078726142834 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.0594427223447 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.842056956681066 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.627386510372162 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.410385987773445 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.192722785620042 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.975163881032745 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.760253266590397 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.544279611471928 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.329704747142562 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.115597646393462 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.900994709559849 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.685053649033315 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.471624739029829 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.256568289639657 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.040126368056897 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.825047421317569 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.616282813850491 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.400430338723319 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.183811859651045 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.967684163885601 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.751508270756582 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.535087481557324 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.319477637608846 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.102735587905125 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.886225171141572 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.669423690910548 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.452761525693147 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.2366333523312134 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.020481025019 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.804620014792458 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.5889727967850704 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.372893525179101 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.1572233752200476 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9413318022383446 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7260296742121377 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.510169761786189 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.2945143119576052 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.078651067538139 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8628139787790726 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6471311102058682 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.43146422896722353 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21571642429984395 seconds remaining)
    1999 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  37.417 seconds)

**Estimated memory usage:**  1909 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
