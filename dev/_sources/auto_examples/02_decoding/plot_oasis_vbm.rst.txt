
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f335d1aa910>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 181.96582794189453 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.161449909210205 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.886141777038574 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.26350021362305 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.777832508087158 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.79825496673584 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.45765773455302 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.21709510258266 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.998882293701172 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.7761992348565 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.581586837768555 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.448746074329726 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.255902846654255 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.20618932063763 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.02316904067993 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.864779631296795 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.691197276115417 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.522712174583887 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.370550923877293 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.210948479802987 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.15955352783203 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.992989960170927 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.86511505733837 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.727559369543325 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.582135041554768 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.44138765335083 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.32138962012071 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.169099233768605 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.08699917793274 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.940572845524752 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.793918291727703 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.642746925354004 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.49583238363266 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.37163996696472 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.23119432785932 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.13034643445696 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.991288900375366 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.854537551467484 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.71308211276406 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.567854691774418 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.43264389038086 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.29306654813813 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.152100381397066 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.342680554057274 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.207463177767668 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.054231378767227 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.909894538962323 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.778687822057844 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.635101636250813 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.48502386832724 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.368245363235474 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.225053768531946 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.08260470170241 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.93819328973878 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.790882092935068 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.650351415980946 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.516600063868932 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.374754667282104 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.253817706272518 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.11344254623025 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.97104056676229 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.828225253058264 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.68539039550289 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.542580373703487 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.398825019598007 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.277778643828174 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.14090751879143 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.004357437589274 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.87421075035544 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.74150437894075 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.60385775566101 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.46657267758544 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.32809660169813 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.21041338737697 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.06894888104619 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.928072373072307 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.787318568480643 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.646675673398104 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.5072735395187 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.40454088585286 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.278961658477783 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.145028037789427 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.005787831981007 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.874972765704236 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.740417242050171 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.599624942330754 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.460043258445207 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.33437325488562 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.292786901647395 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.165383392505431 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.021658605999418 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.879574877875191 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.737020990122922 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.59311269431986 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.462399711000158 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.319975614547731 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.17917917172114 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.038457563242961 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.897827270079633 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.756129151642924 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.61577558517456 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.475303302897085 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.346406576680202 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.214936103635623 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.114422357999363 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.076076484861828 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.934724875216215 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.793329490679447 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.659786365650318 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.518355715165445 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.377675186504018 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.236179474237803 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.096692970820836 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.955475956992766 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.81364002980684 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.672579775685849 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.538563662561877 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.397957879253942 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.258137945401467 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.118240480663395 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.977837403615315 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.836728365953304 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.69628088982379 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.556889754969898 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.423091173171997 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.283380508422852 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.143742277508691 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.004576527227567 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.868197664618492 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.73185673425364 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.594752953602717 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.460526983246549 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.347734848658243 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.226753604143186 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.090963886744941 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.95291248957316 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.812345055972829 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.67202427439446 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.53656790567481 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.396112366545973 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.255583592823573 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.114940641619635 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.974430060722459 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.834439962893932 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.694702704747518 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.558662587198717 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.419304592968666 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.279619954881214 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.140770834845466 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.001437670432481 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.862465461095174 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.72380184653579 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.584907381158126 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.449143174427008 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.31048026642242 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.172051029820596 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.033595219636575 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.895063530867267 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.75614864916741 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.617825722544448 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.479571163654327 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.343904921727151 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.205491975501731 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.067927533132167 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.929554805523011 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.791280768134377 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.653316035328141 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.515307226580774 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.3793134689331055 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.24138996445921 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.103470339494593 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.96573797861735 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.827850286350694 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.690364300171075 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.552710733194461 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4153339181627542 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.279373754154552 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1420383682358737 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.013861463311013 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8777002515739567 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7400319311353893 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6024123252426064 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.464869583046043 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3283489857866466 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.190846298051917 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0534863471984863 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.916278067455497 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7790242605668338 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.643872504538678 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5066911644405787 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3698629580046 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.233044041388946 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0958444972832997 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9586904258925679 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8215896591697772 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6845036959036802 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5475006784711565 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.41056562680278336 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.273759425288499 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13684917334935173 seconds remaining)
    1939 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.849 seconds)

**Estimated memory usage:**  1930 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
