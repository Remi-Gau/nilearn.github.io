
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1b140b6430>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 193.53151321411133 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 34.43261790275574 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.03019070625305 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.806983232498172 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.043713808059692 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.533238649368286 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.17083017031352 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.856687375477385 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.911224365234375 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.649281316333347 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.419551849365234 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.20120956680992 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.990828673044838 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.80974162541903 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.62866956847055 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.59636704126994 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.40885031223297 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.228332421358896 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.039949390623303 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.85344655890214 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.683634042739868 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.520443870907737 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.432482936165552 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.262928859047268 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.116666316986084 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.94729495048523 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.77382467343257 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.606698698467678 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.45195177623204 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.299982375112073 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.24210063616435 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.08146289087111 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.930031180381775 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.772862932898782 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.611575491288132 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.46234921046666 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.30695941713121 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.217228986121512 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.06661693673385 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.95081833081368 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.795788764953613 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.64068420921884 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.49644078527178 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.34211000730825 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.249520496888593 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.097449567582874 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.947719636170763 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.80500764035164 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.656991084416706 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.513244745682698 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.360933780670166 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.250197878070907 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.106086565898014 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.956666609026353 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.808385972623473 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.65752332860773 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.517599855150497 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.37034433348137 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.25940419065541 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.111914182113388 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.962558587392174 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.81436353824178 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.666012079485 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.519479853766303 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.373142391443253 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.23680982222924 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.099077679894187 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.954263701367733 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.807587469325345 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.667521238327026 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.54197236469814 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.396993559850774 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.25148476494683 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.13214667529276 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.988113957482415 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.841789722442627 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.693186534078496 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.5460464118363 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.40448685792776 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.25731093974053 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.130933165550232 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.99081764103454 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.849670892808494 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.703270992600775 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.56218963577634 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.456029471229105 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.33624688969102 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.19015496078579 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.044598015871916 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.897258096866393 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.749756521648832 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.603763459802984 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.45623943080073 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.311443541639596 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.181263385935033 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.034935499492446 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.88881593942642 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.741147471457413 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.597075365027603 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.45193044344584 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.307587623596191 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.174437643277763 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.02946990144019 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.885954914741147 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.73988753098708 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.594251768929619 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.449223212476047 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.30506242992722 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.170686580516675 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.025867284984763 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.879357706416737 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.733983544616013 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.589825017111641 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.447893395888066 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.306922870769835 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.173040369282598 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.02790747839829 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.882177911253057 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.739318294040228 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.5966327170364 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.451634883880615 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.30644086569794 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.17098017598762 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.028637922876248 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.882941607506044 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.737829685211182 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.593928405216763 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.44945164928286 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.304315865039825 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.167029550833295 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.022439131369957 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.877313845030224 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.733057939645015 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.59041114140274 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.446158188492504 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.302191195664582 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.16335678100586 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.019825009533958 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.876195354738098 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.737536250258522 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.593979767390659 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.450488609625092 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.30684802565776 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.169048901204462 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.026026950942146 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.882154053655164 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.738442110688719 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.594439321634721 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.450975256997186 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.30738782722678 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.166936635971069 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.023813741886063 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.880107503188284 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.736446308933832 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.592604844601123 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.449023131401309 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.305289837030264 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.161564634104443 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.021077119851413 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.8776535178130525 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.733903527259827 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.590467786196596 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.4466198638633445 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.302856353162988 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.159689071701794 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.019703178694754 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.876051305288292 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.732394842330567 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.589210691906157 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.445472041530722 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.301602111143224 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.159899166452954 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.017624594444452 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8736070773505062 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7298162065703298 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.586318186351231 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.4424877275120127 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2986183274263716 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1546869197588285 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.0126109815842614 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8691134717729354 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.725513422686751 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5818800847608965 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.438278745432369 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2945370881453804 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1507920381185173 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0080522619267946 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.864391167533589 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7209055322281857 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5792483173350176 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4354931053362394 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2917805991247686 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1481513381004333 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0050391644393841 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8613513892458886 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7177247634300818 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5741149454700704 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4305289009500881 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28698164766485046 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.143477389560872 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 13.265 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
