
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc034fad4c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 273.1037139892578 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 58.331573247909546 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 56.711251974105835 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 52.28546198209127 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 51.44437837600708 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 49.58650517463684 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 48.878035147984825 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 47.609691108976094 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 46.67401885986328 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 45.95473215315077 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 45.139604568481445 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 44.8911737095226 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 44.401684522628784 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 43.99245920548072 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 43.691504103796824 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 43.75134603182475 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 43.26578390598297 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 42.83540919247796 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 42.626808404922485 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 42.21173661633542 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 42.042877435684204 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 41.640132427215576 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 41.32987824353305 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.99607410638229 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 40.62835534413655 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 40.55468821525574 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 40.29945153456468 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.992669847276474 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 39.729720728737966 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 39.59964480893365 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 39.27437774340312 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.96820702860432 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 38.66339868307114 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 38.35776713400176 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.19213250104119 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.8697053704943 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.602542612287735 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.33140740523467 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.0391490961376 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.88857357318585 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.6358699798584 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.374019506500986 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.12359436353048 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.94679548574048 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.67824454741044 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.38998431629605 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.108060681301616 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.837604071231596 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.648585995038346 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.46395176770736 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.21167612075806 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.94183847950954 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.68731093406677 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.542141797407616 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.28526242574056 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.08080391450362 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.9249598639352 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.76930808184439 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.542239485115836 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.27477923490233 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.02879548072815 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.773052719772842 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.584773702006185 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.333239475886025 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.09353443980217 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.847733644338756 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.661489688988887 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.4386286130592 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.20981984979966 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.968581254931465 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.717168637684413 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.520362840571874 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.301847245958115 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.060081592977866 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.807715100211066 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.580311139424644 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.352042047600996 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.103335349590747 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.870996059515537 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.63472690461557 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.44295823574066 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.227934454694207 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.983609408867068 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.742753379316216 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.501211143675306 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.305370555204505 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.06526393114134 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.821135948444237 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.586496223102916 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.368285816706965 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.126273499594795 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.877715928213938 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.64600669819376 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.417207415385914 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.226094636511295 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.005931088798928 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.762765248616535 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.54431853343531 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.308545360759815 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.10328494418751 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.858811855316162 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.623058793568376 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.39063272756689 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.182691252347336 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.94828385573167 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.714890355155582 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.4790236410105 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.244282742527044 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.035725090238785 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.79368679020383 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.55739305236123 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.325377000344766 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.086889352117264 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.874441340961287 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.637920446563186 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.40557377234749 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.16695058756861 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.957648049052963 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.737748917886766 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.512840112718216 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.278462886810303 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.045364882335193 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.835320949554443 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.604078508004907 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.370855885167277 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.13633770942688 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.897161498902335 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.675577398360243 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.438188180327415 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.20205351733422 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.969360186503483 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.752091566114935 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.519825920914158 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.29840083588335 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.072838825965995 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.849627777382178 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.630618936875287 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.397958564062188 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.166625091995018 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.931725591206721 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.705926520483834 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.48591290974448 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.253421481226532 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.021001575710056 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.786398013432821 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.569518023523791 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.33905778192494 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.110274078083687 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.879874815811982 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.647513672809472 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.427225907643635 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.196282050467484 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.965645940680252 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.733069994870355 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.50985218023325 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.277293820534984 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.04654458241585 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.816809906321726 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.588387794132473 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.368316621900355 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.138441562652588 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.90935816824066 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.68312034194852 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.451723794995642 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.225950432986748 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.99608436497775 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.765476620340921 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.535182324712148 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.3144828251429965 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.085663219880775 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.858333433375639 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.631517507876569 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.402754129365434 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.177577501087519 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.948446043606463 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.7192215238298685 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.489696242592551 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.264034224095317 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.035711950130676 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.806230454471525 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.576608975728353 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.3475124743761935 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.121466597357949 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8972335851909037 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.684951409049656 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.462395648698549 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.2308833599090576 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.000348106425076 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.769332961833223 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.5403408890678767 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.3091625790846972 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0782098545453938 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8474262952804565 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6160635985241034 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3854712677985124 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.154273020915496 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9232546893917783 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6923911462580492 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4615472254126963 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.23087767140949192 seconds remaining)
    1986 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 34.114 seconds)

**Estimated memory usage:**  1896 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
