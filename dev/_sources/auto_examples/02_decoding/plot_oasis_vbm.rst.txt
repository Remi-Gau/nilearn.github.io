
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6a03335e20>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 204.78248596191406 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 36.17049169540405 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.155994176864624 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.71212887763977 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.12698483467102 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.52004408836365 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.47389682133993 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.16402629443578 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 31.77810287475586 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 31.472359074486626 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 31.260847806930542 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.993495355952874 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 30.905728578567505 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 30.609395247239334 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 30.337072747094293 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.087000211079918 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.849974513053894 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 29.748105315601126 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 29.554142342673405 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.506319460115936 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.34966230392456 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.12804633095151 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 28.955700787630953 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 28.80546666228253 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 28.625492413838703 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.549949169158936 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.361238351235023 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.201907255031443 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.038984128407073 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 27.878813168098183 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 27.701271533966064 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.58438371842907 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.41571342945099 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.22170194712552 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.02550366345574 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.844860315322876 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.68294620513916 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.563373984517277 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.426714583447108 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.26850804915795 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.121137619018555 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.998045130473812 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.836245400565012 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.67166035674339 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.55965727025812 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.39249528778924 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.229291667108953 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.079036144500083 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.92776588598887 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.771994512908314 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.65886354446411 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.500376663955986 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.33018211218027 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.17561239566443 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.018201925136424 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.862048149108887 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.73715250832694 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.570416463048833 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.407745723066657 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.247411780438178 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.0920360883077 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.991413413501178 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.86520182701849 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.696892836737252 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.52661293745041 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.361992010703457 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.196637139175877 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.034395847747575 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.906652408487655 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.74609142801036 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.58082778113229 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.41958028833631 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.259141710069443 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.092549229321417 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.936646783674085 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.76867938041687 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.592535307532863 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.41945228638587 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.25261374008961 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.077644972861567 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.927372813224792 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.751496420966255 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.579685536826528 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.407051146748554 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.23445061274937 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.061651440227735 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.90349356518235 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.731818826719262 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.558941277590666 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.388000215037483 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.21560491455926 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.044660287898974 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.87435385455256 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.722089839237995 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.550995390465918 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.38363077766017 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.211300313472748 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.04095255714102 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.871118277919535 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.716121492963847 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.545472383499146 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.378363687213103 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.20672813583823 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.043236922291875 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.878238971416767 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.725765716461908 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.55685790529791 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.39556668406335 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.228950050142076 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.062458020831466 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.898269111459907 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.744862427582612 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.584400875227791 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.420506371861011 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.254361646217212 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.089122513066167 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.922723416624398 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.765517483409655 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.60149472446765 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.436915904533963 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.269857406616211 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.10365641215616 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.936724697957274 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.779058045488062 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.61149057265251 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.4456307888031 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.27849448673309 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.110893469157181 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.946998432278633 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.785905538603316 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.617446881074171 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.449512954886632 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.281813563722553 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.11246977533613 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.947324364932616 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.780152197237367 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.621016109690947 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.453936105226948 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.285037911456564 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.11602789721043 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.947622707911899 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.781036649189943 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.618836829360102 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.451538245994728 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.283609045876398 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.116311969428226 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.950485657339227 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.782465813111287 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.623915930052062 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.45621522320997 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.288341919581095 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.129871658931505 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.962513421711169 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.794924094006906 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.632226947066071 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.46463191893793 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.296756744384766 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.129784110245431 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.963173452811905 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.803640695487928 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.641049385070801 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.475431901327572 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.308807161119248 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.141941895514178 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.975726488159924 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.807919675653631 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.644021875887032 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.478492068673322 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.31354572659447 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.147560352404442 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.981246443355785 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.814949325650756 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.65051458048266 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.484683377205292 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.3182239477661835 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.151914596557617 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.985309221527793 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.819080270616348 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.6530065616864835 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.488727384439394 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.32238327132331 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.156130529898965 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.9897054735120836 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.824820505465315 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.6599422952403193 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.4949155691507703 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3285240691195255 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.1619138194915446 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9958305713978217 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8290323592998363 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6625187898937024 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4967426205180703 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3301922778288522 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1636485349329024 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9972358216944429 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8309183242993476 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.66478629988067 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.49878679798339226 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3324711515445902 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16621690539259407 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 14.087 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
