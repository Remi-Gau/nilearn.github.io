
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f732271d5e0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 307.18326568603516 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 51.00013613700867 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 47.26605248451233 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.363944689432785 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.456706285476685 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.958884716033936 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 45.44825212160747 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.6929190158844 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.30744934082031 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.91351890563965 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.520862102508545 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 43.28958710757169 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.83001414934794 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.55186242323656 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.69930992807661 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.26671616236369 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.91731607913971 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.758539255927595 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.53433791796366 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.29402415375961 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 41.00937080383301 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.723513353438605 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.39157249710777 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.140744364779934 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.86599747339884 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.540647983551025 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.29758005875808 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.0532720707081 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.78616336413793 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.53188818076561 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.27176388104757 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.02131334427864 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.75385266542435 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.53197927908464 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.30428497931537 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.073707478387014 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.87744175063239 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.62328823837074 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.46142532950954 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.19344464937846 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.94033622741699 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.67066511875245 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.422220389048256 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.206518866295035 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.953861106525764 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.70677399635315 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.47613446608834 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.22929545666309 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.98696219921112 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.75337981204597 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.4996919631958 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.25354548529082 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.01552888063284 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.80710976528672 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.585391698060214 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.34855010292747 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.116676330566406 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.886333415382783 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.6588355261704 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.424111948174943 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.186627785364788 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.953628567398574 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.705734091420325 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.52465680667332 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.335956424474716 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.134286018518303 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.962808688481648 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.768561615872738 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.53929010559531 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.29456266804018 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.061108963830133 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.831344043704824 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.59068340725369 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.371830489537487 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.137396967088854 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.921175559361778 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.68279228712383 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.447749274117605 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.212122911061996 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.96987657909152 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.743281841278076 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.513231374599318 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.282947272789187 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.052522837397564 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.84161678949992 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.62884996919071 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.40599332299343 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.178730882447343 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.954617760398172 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.72644410508402 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.493625269995796 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.269364472273942 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.0495067368383 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.820080516158896 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.59156458935839 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.36584221689325 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.139642934004463 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.911370321647407 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.68260770914506 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.465435634959825 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.239944219589233 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.01424196214959 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.790614642348945 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.563889614586692 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.33504911569449 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.114752905709402 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.89340416440424 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.67608861834089 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.459203728923093 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.230832872040775 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.007220094854183 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.784343193243217 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.562149490628922 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.34526889092099 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.12278717860841 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.902781579805456 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.679141439240553 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.46798712779314 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.243264077073437 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.022794034300734 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.809200763702393 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.592111585554015 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.368156050072344 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.14770185075155 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.925909142340384 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.702948665618894 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.480007640899174 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.25600397868419 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.032945424318314 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.814454546270444 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.594696943576519 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.37156722017827 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.149945078474103 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.927217481727888 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.704620475199684 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.484138073744596 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.26486374350155 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.04006918329392 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.81845163953477 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.593972118638401 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.3720121383667 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.14862745535289 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.926808860939992 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.702645253468226 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.482086234622532 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.25872963872449 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.039974398808935 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.814769076652269 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.590468065158742 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.372496896142128 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.152050971984863 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.927794597006791 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.70556532709222 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.482695778990104 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.259960505869481 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.036046735702023 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.812408013221544 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.589805902189509 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.365044645116297 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.144929461509177 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.921985805034637 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.69893679411515 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.475283749309586 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.253388615473648 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.029784028123064 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.806167660337506 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.5837541947881855 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.359643593519748 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.136420113699776 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.915267680523663 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.691298414679135 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.468361542238826 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.2457164664601175 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.023361968167255 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.801650863954391 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.5781603540693006 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.354606314138932 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.1319178726713535 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.909866839312436 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.686566435424975 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.464095248116387 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.241408311201064 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.018083580247648 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.7943474764380953 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.571726073389468 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.348993881328686 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.126073888553086 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9025602289699615 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.679424372125179 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4560477481317267 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.2328252415908008 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.009669623449835 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7862773537635803 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5628075649083586 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.339654057296281 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1163237400543995 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8929791547814193 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6698520183563232 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4465784135490957 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22330582920630374 seconds remaining)
    1949 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  36.131 seconds)

**Estimated memory usage:**  1923 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
