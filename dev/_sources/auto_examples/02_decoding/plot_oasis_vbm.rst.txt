
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc992e44940>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 139.22452926635742 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 23.011253833770752 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 20.443222045898438 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 19.57232093811035 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 19.055716514587402 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 19.320849180221558 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.92777482668559 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 18.670065471104213 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 18.501737594604492 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 18.271798292795815 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 18.055636167526245 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 17.87796729261225 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 17.76526141166687 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 17.62966807071979 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 17.526426110948837 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.390806754430137 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 17.431571125984192 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.29717170490938 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.191162639194065 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.06509872486717 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 16.930607557296753 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 16.817230712799798 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 16.692864613099534 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 16.574961786684785 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.46534490585327 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.36347198486328 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.260042428970337 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.274562508971602 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.161794424057007 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.048309959214308 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 15.934285879135132 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 15.82071425068763 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 15.74938040971756 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.699335632902203 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.604858384412879 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.491500343595233 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.376864883634779 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.269786692954398 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.243651904557883 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.136514278558586 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.032315254211426 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 14.932090689496295 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 14.832886718568348 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 14.72715298519578 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.6261014288122 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.527871502770319 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.431778617527176 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.333683612498831 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.23279070854187 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.21777606010437 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 14.11400842666626 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 14.013241136775296 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 13.909686767137968 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 13.801910188962829 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.700781610276964 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.604065895080566 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.498463017599924 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.394635359446207 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.304621606037534 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.214090908988046 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.167546033859253 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 13.07331847362831 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 12.973681326835385 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 12.870689482915967 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 12.765759527683258 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.667734641295214 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.57748559027007 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.482156091661595 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.38074766888338 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.284930042598559 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.186200891222272 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 12.120648068441472 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 12.021006266276041 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 11.946091981783306 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 11.842107585958532 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.73963189125061 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.645454720446939 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.5508519921984 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.452834104880308 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.355142659778837 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.256787061691284 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 11.159207673720372 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.086749268741142 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 11.139175854533551 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 11.040314424605597 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.938442693037146 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.843147183573523 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.74489564457159 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.646410378542813 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.548005851467003 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.450721157921686 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.351581319347842 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 10.275843609934268 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.17660992119902 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 10.077907369491902 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 9.979524135589601 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.880957861741383 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.786051307756876 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.685897277326001 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.587222771211103 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.488226175308228 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.390760844296748 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 9.292982760597678 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.238104679052112 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 9.149541708139273 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 9.05112285841079 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.960326086800054 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.862328411262727 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.763696979593348 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.665336617636024 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.566684354435314 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.470185208964992 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.372784716742379 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.289880906586099 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.192493727332668 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 8.093520589496778 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 7.9949635555004255 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.897583786238973 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.799927448822281 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.703433667912203 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.605129877726236 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.507398049693463 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.4091595899863325 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.311943094904829 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.226141283589024 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.12789306640625 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 7.030612340049139 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.933804737301323 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.838408425450325 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.742533733678418 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.647380883877093 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.554801047303294 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.457609010465217 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.362715466578204 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.270192712100584 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.1830419257835105 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.086104000315947 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.989321090879232 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.8920105125593105 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.796302502103846 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.698732955115182 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.601168164124726 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.506591528234348 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.409901917397559 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.314037217034234 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.22030286131234 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.131399409411705 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.036767831465014 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.941486287761379 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.844356524064237 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.747652928034464 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.65162600744639 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.556577331141422 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.460935076856925 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.365506949362817 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.2701272810659106 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.175881281877175 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.084656972034722 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.989298539825632 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.893742021524681 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.7996550798416138 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.703719852873998 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.607895889399964 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.5121918207297296 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.416593132949457 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.3213551477952437 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.2267818221126694 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.131288231489901 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.039404551188151 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.9437964639720127 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.8492418457480038 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.753985664300751 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.6585728955823322 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.5631949419231086 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.467672065756787 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.3724656105041504 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.2772533243352715 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.1820193926493325 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.086811218368873 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.9934539222184506 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.898137887318929 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.8031571780779085 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.708127024409535 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.613037648748179 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.5178978754126506 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.4228719247354045 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.3277030016786309 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.2326363102000026 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.1378677550782548 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.0429147059324557 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.9489298494238602 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8539314632016327 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7589845657348633 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.664043522869367 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5691134167700699 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.474188670133933 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.37926748820713585 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.2843846463915055 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.18954317979138308 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09474253534671649 seconds remaining)
    1986 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 48.763 seconds)

**Estimated memory usage:**  2150 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
