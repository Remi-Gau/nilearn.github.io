
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb53f6da550>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 195.39117813110352 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.0792498588562 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.058356523513794 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.120127439498905 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.527299165725708 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.066948413848877 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.66819485028585 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.300729853766306 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 30.051589965820312 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.762414164013332 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.49185585975647 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.23825446042148 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.294139862060547 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.06717718564547 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.884923355919977 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.68289875984192 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.49262046813965 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.299099725835465 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.113770220014782 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 28.174910043415274 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.98736834526062 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.80403738930112 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.607963757081468 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.416393870892733 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.243395646413166 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 27.153133153915405 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.956091220562275 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.770409204341746 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.59702583721706 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.420010221415552 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 26.242987473805748 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 26.063324989811065 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.949309706687927 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.769350535941847 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.596230338601508 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.427745785032002 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.267120467291935 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 25.10263314762631 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.945629709645324 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.86074055769505 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.708579063415527 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.53983989576014 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.38214677856082 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 24.219840748365534 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 24.0755153352564 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.959030283821956 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.79572537670965 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.637885697344515 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.471707622210182 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.302259260294388 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 23.143888235092163 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.97795339191661 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.862982144722572 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.70413188214572 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.54102502045808 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.38437537713484 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.2236533846174 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 22.06504528146041 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.905218609448134 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.78650442220397 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.635918537775677 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.472394032556505 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.32452525631074 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.16969479454888 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.025735020637512 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.89553755980272 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.737881075252186 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.579506920344794 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.42324937091154 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.265743822291277 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.11153486796788 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.953097544925313 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.818919711642796 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.662225194173317 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.503120080844774 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.342024326324463 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.183232570949354 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.023876057042703 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.888414651919632 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.73051754734184 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.57107448577881 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.462640359077927 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.303939807705763 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.15083965335984 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.99515280269441 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.854837319430185 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.694672129875006 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.53529161694406 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.37400063601407 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.215825844346806 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.058136542638145 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.918870656044927 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.7590390080991 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.59987356842205 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.436417762269365 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.27434347805224 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.115244805812836 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.957076497913636 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.813763005392893 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.652253418257741 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.490468740463257 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.329209972136091 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.169668940936818 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.008352684743196 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.846992492675781 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.70500746227446 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.547879214556712 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.388960105236446 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.231478037657562 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.074180786762762 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.91963384368203 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.776575700656789 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.619390743119375 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.461917075435672 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.304708915844298 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.149511575698853 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.994172400441663 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.838894752355722 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.692721463866153 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.537289152626231 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.382620175679524 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.226671997180656 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.07480552548268 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.917141358057657 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.760173436134092 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.611638164520263 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.455874121378338 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.298793721386767 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.141673222184181 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.989455960517706 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.832467170862051 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.68483087852711 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.52845355236169 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.370793674225197 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.214646364325906 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.057738383611042 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.901175330666934 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.745517105951796 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.595828654109567 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.438792259573079 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.283251694270541 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.128038665081592 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.97370259190949 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.819608186508392 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.664261036449009 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.51406008621742 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.359707237922981 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.203380156536491 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.04744284217422 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.893743391805048 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.7385687828063965 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.587474906681389 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.432210545790823 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.2761608214160205 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.119851053535164 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.963794900525001 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.807430884776971 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.6521297685659615 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.500380691093734 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.344719721836114 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.1977009773254395 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.044643353231205 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.889261481202679 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.733631394392142 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.580660075676151 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.424908876419067 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.269213357603693 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.112995496053181 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.9567457380748925 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.800788574670193 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.645641551298254 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.4920219663988075 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.335577388142431 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.180037667985596 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.02376065034976 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.868479422160557 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.7129627899690103 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.5576154673840366 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.4038260250948786 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.2484544615505793 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.093068096372816 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.937703754361822 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.7821731645982344 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.627219103724579 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.4729153591653574 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.3179159873240702 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.1630044675642446 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.007893205326509 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8528372074695343 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6980175076338349 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5432286387995668 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3892225282978636 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2344909012317657 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0798473197561471 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9255465723804592 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.771176564387786 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6168400803390813 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4625439329195749 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.308436099929039 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15419155748645266 seconds remaining)
    1987 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 13.994 seconds)

**Estimated memory usage:**  1884 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
