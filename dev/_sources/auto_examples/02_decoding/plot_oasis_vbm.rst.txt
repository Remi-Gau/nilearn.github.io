
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f46b277b5e0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 247.1327781677246 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.48643445968628 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.94611930847168 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.93291195233663 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.26045751571655 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.906294107437134 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 33.48978678385417 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 33.40866051401411 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 33.10385513305664 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.71935002009074 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.259711503982544 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.15594094449824 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.728086789449055 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.413479493214535 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.09376508849008 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.822535832722984 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 30.59352421760559 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.516989413429712 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.251114792293972 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.962668230659087 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.801339864730835 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.60204878307524 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.39903465184299 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.15586867539779 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.06256866455078 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.808289527893066 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.685973644256592 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.491864963814063 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.217248814446588 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.05983571348519 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 27.933885256449383 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.69673027530793 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.474481880664825 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.236520702188663 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.00897424361285 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.776190042495728 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.576803154415554 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.42876677899747 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.22305834920783 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.040772444162616 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 25.83948040008545 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.64075700829669 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.453278246380034 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.264102952424867 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.169261195442893 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 24.97426541646322 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 24.77573721305184 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 24.588177513568958 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.394351085027058 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.211203735701893 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.080916166305542 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 23.894571949453912 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 23.710326726620014 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.523022075869005 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.3357899012389 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.155336423353713 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 22.976981367383686 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 22.839535688099108 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 22.658547639846798 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.479318719799235 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.298294067382812 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.118624331521207 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.93695497512817 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.75702114710732 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.614987641572952 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.43631100654602 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.27550062266263 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.11294215116928 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.98160122422611 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.031726356865704 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.08011565889631 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.902380950014358 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.718631320529514 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.54098903642942 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.35902869379198 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.209222634633385 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.040602119345415 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.865002954161014 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.687651915427967 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.511929557293275 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.336856245994568 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.16353792614407 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.01376999878302 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.837185736162116 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.66204980441502 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.486695051193237 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.317227363586426 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.19481431752786 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.042868050661955 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.870345817523056 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.69684910774231 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.528445529413748 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.356739666150965 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.18332833115773 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.01383413659765 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.862782039140402 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.695437014102936 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.524744812975225 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.355862700209325 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.189399740912695 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.02130436897278 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.85208247439696 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.700946676964854 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.534028210686248 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.367136588463417 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.202350355329967 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.03726838669687 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.877337491400887 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.72309680338259 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.557702849764343 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.392628236250445 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.230355172543913 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.066589559827532 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.901604354909036 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.73759902987564 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.585135003794793 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.419213492294837 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.254113301252708 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.089926048860713 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.925596383439393 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.763283570607502 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.606561304123934 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.441293653894645 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.274870884127733 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.111193356975432 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.946104621887207 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.782069622524201 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.618817327529426 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.460898071527481 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.295471198799074 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.131050311602078 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.969674760148726 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.807022607687747 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.644801268900249 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.483542851547696 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.327022110974347 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.164305069867302 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.003845221804877 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.84279757997264 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.681027676561753 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.52047290120806 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.363939554133314 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.202654072936152 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.039057895020171 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.878795226414999 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.718209398203882 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.557366436474943 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.39611274693288 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.240118703326663 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.078517816210754 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.918209155400594 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.757997315451009 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.598775311520225 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.439245918996973 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.280379044545161 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.124384741629324 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.9632756526653585 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.80324893392575 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.6425409558453135 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.482342072252957 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.32297557592392 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.167149414927323 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.006546829953606 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.846761883402163 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.687843189006898 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.5284394856655235 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.368424941258258 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.208710740426343 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.052190735226586 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.892790656117998 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.734047917758717 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.575502388658579 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.417753446933835 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.259309428275666 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.100341651631498 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.9439054557255333 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.7850492867556484 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.6265873855116677 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.4678873212149974 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.309112255799704 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.1508917808532715 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.99319132388626 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.835144116328313 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.677059471932917 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.5190994635872217 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.3612588805121346 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.2033212056723976 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.045480663126165 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.888885974884033 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7313323121852975 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5736542249980725 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4159414643392514 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2583919167518616 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1011847893808788 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9437879090456619 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7866327640337821 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6292243052502067 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.47184799044265363 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3144962980289652 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15721597623585457 seconds remaining)
    1984 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.702 seconds)

**Estimated memory usage:**  1906 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
