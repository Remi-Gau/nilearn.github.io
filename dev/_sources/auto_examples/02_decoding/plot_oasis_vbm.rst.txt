
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb0f099f550>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 167.85383224487305 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.152952671051025 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 26.611414432525635 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.574128468831383 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.008737802505493 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.631826639175415 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.29624748229981 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.15954385484968 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.99668312072754 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 24.76005533006456 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 24.53203296661377 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.53915886445479 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.239402612050373 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.0243493777055 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 23.802755253655572 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 23.605894565582275 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 23.442926287651062 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 23.278013285468607 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.123469273249306 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.07357655073467 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.947937488555908 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 22.81476742880685 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 22.680662111802537 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 22.542883624201238 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.404326915740967 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.255349159240723 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.105414922420795 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.089350603244924 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 21.959551709038873 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 21.83480069555085 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 21.70766297976176 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.575970642028313 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.421726942062378 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.27098001133312 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.118365105460672 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.053535052708217 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.921112881766426 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 20.78500386186548 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.64671429834868 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.49373105244759 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.33892250061035 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.184488209282478 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.078807365326654 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.988399294919745 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.83848352865739 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 19.696289009518093 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.55754984980044 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.43583405778763 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.30848451455434 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.177355756565017 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.048698663711548 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.010384367961507 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.89230443881108 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.769087665485888 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.645122748834115 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.52393889427185 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.40444156101772 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.268766700175767 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.13104120616255 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.031800694384817 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.899028380711876 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.767612285301333 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.64066015520403 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.51718049200754 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.38949379324913 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.258648817355816 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.138214790459834 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.029699645825286 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.891818481333114 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.76366500578065 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.635167598724365 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.500393833912593 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.361712985568577 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.22245625927024 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.085762520094175 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.973559617996216 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.841063976287842 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.710266466264601 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.581501942414503 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.45108576364155 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.324600219726562 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.19604140152166 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.069736003875732 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.963350907865777 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.835946151188441 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.705783689723296 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.57668219610702 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.44539708104627 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.314883102070201 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.183504265345883 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.05395809809367 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.940594861795613 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.809474395669026 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.675525311500797 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.547505794687474 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.417132766623247 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.28418856859207 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.152934374268522 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.026194368089948 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.913248693100128 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.78503704071045 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.65548808267801 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.527853619818595 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.399445633286412 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.269979990445652 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.138718979699272 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.007909351924681 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.891446064565784 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.761494689517551 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.630027792869358 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.49941559271379 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.37094319188917 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.241099204335894 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.114402728798115 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.98479217813726 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.86405559208082 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.737505205746356 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.612675646431427 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.484422958503336 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.357081872074545 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.228847344716389 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.098876728499231 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.967309314696516 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.842752196924472 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.712189574395456 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.581715059280395 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.450321977100675 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.318951715634563 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.188412979245186 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.05954848703488 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.93247811610882 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.811353330393784 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.682492891947428 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.552969475437825 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.422797256441259 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.294210107238204 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.166938669541302 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.040000414326244 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.911758471226347 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.789955684606977 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.661811998912266 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.535848580353649 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.40735528166865 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.2789502944146 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.1507257090674505 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.022117072138292 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.892383676685698 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.770254662247742 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.640634897592906 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.511555919711222 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.38218347231547 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.253475970779823 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.125329444282933 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.998175176919676 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.869416880917239 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.745826559682047 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.617323147944915 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.488698912274306 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.360894191114208 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.233254567632136 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.105822443962097 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.977868288940525 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.849252221025067 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.725005739305648 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.597334355842777 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.469875993150653 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.342423005276416 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.215008347334262 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.087341671898251 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.9591526025851094 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.830704071942498 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.7064129330261406 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.5775280885918197 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.4492936051649856 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.3213281960322942 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.193350349153791 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.0653477148576216 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.937243631330587 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8088998044474742 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.6826173300183687 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.5546266237894693 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.426389989273324 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.2983691770951826 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.170430068761273 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.0422472953796387 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.914287161182713 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7863301846288866 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6596136348132782 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5320801937833743 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4046456561517462 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2767319679260254 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1489877226465035 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0213881532351174 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8936730530595531 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.765914056718964 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6386412412692338 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5109352238324223 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3831513339492875 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2553965322899096 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12768077251300142 seconds remaining)
    1961 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 3.494 seconds)

**Estimated memory usage:**  1824 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
