
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fd2c965baf0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 208.44459533691406 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 42.20577073097229 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 42.84139895439148 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 38.97660438219707 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 37.030006408691406 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 35.81406855583191 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 35.16994984944662 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 34.91225937434606 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 34.17459297180176 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 33.53188363711039 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.99691605567932 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.6183293949474 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 32.30841739972432 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.07235618738028 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.698709079197478 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.388022581736248 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 31.122960209846497 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.81992693508373 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.59698904885186 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.515277147293094 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.282755613327026 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.01873002733503 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.8278256112879 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.592125851175062 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.423619111378986 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.25678777694702 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.153102434598484 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.96462983555264 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.73828322546823 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.53615933451159 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.352988243103027 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.16083635053327 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.03148353099823 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.838186047293924 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.653168804505295 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.4500378881182 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.259252813127304 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.068087197638846 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.928503939979958 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.142553249994915 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.95014190673828 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.77282108330145 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.57061303229559 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.379421001256897 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.237046133388173 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.040369351704918 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.85747040872989 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.67654104942971 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.49562342961629 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.322167138664092 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.18585753440857 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.006294516956103 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.814303306432873 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.622510077818387 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.43345465483489 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.248267542232167 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.103593145098007 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.922963690339472 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.74129767253481 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.563946788593874 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.383748928705852 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.204489575057735 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.022111931154804 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.8703175726391 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.687753677368164 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.511578559875492 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.35980522993839 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.18347436990311 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.002039923387414 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.85289640357529 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.671314205442158 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.487825245924398 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.31461927625868 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.139945239236912 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.958169350752957 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.803240935007732 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.76948305180198 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.625802015329334 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.446568537981083 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.27449536625343 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.103460550308228 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.952983915069957 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.778910096098738 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.610098996794367 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.432309888658068 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.256065060110654 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.08266163426776 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.923866008890087 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.746208277615633 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.576398045829173 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.404612806108265 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.231810313004715 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.05620398728744 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.895840524345317 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.727920527153827 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.551467870411123 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.380020995934803 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.20555332026531 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.0320142385911 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.857017623053654 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.69913959503174 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.529234534443013 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.363963042988498 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.191741142458127 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.020235281724197 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.848757176172166 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.691660885540944 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.520161339055711 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.348904600849858 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.179819938239701 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.012818358161233 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.848485792005384 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.687821967261177 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.606322811768118 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.434984960054097 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.264555288397746 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.09367508723818 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.92411122770391 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.763517367637764 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.591811987532287 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.420689900716145 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.248210731616691 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.075579170320855 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.903703565519999 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.740834613000192 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.568156099319458 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.398802492353651 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.226933208976204 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.057751938700676 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.888416262560112 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.726145322506245 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.5563619355209 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.387004938992586 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.215653817456468 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.04498424103011 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.874119573169283 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.710999769323012 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.543452031420966 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.375390557275303 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.208444727410516 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.041151387350899 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.871489396332004 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.706577445419741 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.538198401044298 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.368758969836765 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.199153801490521 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.030776621544197 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.861964349033071 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.691557052973154 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.52706488506906 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.384656747182209 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.21498895954612 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.045505448391562 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.878117062687095 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.712761990435712 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.546808019761117 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.3810325219081 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.212527470983518 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.044003073173233 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.875457148881829 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.7077025175094604 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.543923995509651 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.375856114022525 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.206891152025 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.038242264491756 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.870819980447942 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.707384480051247 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.541292434680962 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.37237803141276 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.203682044554038 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.036891236024744 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.869430192032753 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.701652654381686 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.536740123881081 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.369088953938978 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.202316726957048 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.034349885853854 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.86626598525182 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.6979518713576067 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.53036606112006 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.361448817782932 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.1928291307628482 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0239191893692854 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.8555553715085726 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.686840181765349 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.519661310556773 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3588316594400713 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.190241936056372 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0219650116372616 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8536121706483224 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6858116451062652 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5171498890322541 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.348215252161026 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1793741105134004 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.010661216126275 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8420171737670898 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6734596417874705 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5051987425324881 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3367474319958928 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1683537049509173 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 17.423 seconds)

**Estimated memory usage:**  1917 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
