
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9061fa6ac0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 261.19470596313477 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 51.75086307525635 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 47.80992293357849 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 45.90850718816122 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.666805028915405 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.89708352088928 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.35552016894023 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.83249511037554 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.36672782897949 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.86375281545851 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.3812301158905 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.38600531491367 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.93439698219299 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.5921173279102 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.24195306641715 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.90626343091329 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.90329468250275 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.59618157498977 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.395134051640824 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 40.048422587545296 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.77783131599426 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.81660429636637 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.51112008094788 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.24210815844329 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.921761989593506 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.766284465789795 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.63180114672734 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.33699142491376 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.08981391361782 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.794910595334805 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.71581959724426 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.442892866749915 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.16219276189804 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.93010640866829 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.76476704373079 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.642019680568154 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.39816013971964 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.140294809599176 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.885167234822326 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.609971938989105 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.50443935394287 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.251207892487685 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.031391836348035 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.77506696900656 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.50088730725375 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.39746822251214 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.14597765259121 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.92707332144392 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.690004905064896 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.56460418506545 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.313621044158936 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.0560550736446 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.81017890343299 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.58106376989833 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.43980645250391 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.18652291731401 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.949384961809432 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.73397993204886 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.507716524189913 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.340312695099133 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.089850982030235 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.840976937872465 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.60390843883637 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.378729422887165 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.21069437265396 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.989932995576126 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.767819816415958 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.52774370250417 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.342215734369614 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.096637936605923 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.85075385229928 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.606211014196905 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.37962977091471 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.18956985865554 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.937049582197858 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.683865229288738 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.444540676317715 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.207413592895904 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.013699146417473 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.79930000063739 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.56595814228058 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.33246335865539 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.098544894195182 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.90344705639115 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.66576455888294 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.428945948095883 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.195597022078758 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.964861557401463 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.774135416204278 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.53215243039506 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.297284576627945 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.08019369513124 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.85174359445987 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.659941619442357 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.432198103438033 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.208812412462738 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.979706585407257 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.78515789680874 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.568622014960464 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.343172044465035 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.12379002571106 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.9027895596948 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.711001999237958 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.479205610682666 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.24621765430157 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.012287957327707 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.790052548894344 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.592914443149745 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.35962125990126 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.130766321759705 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.908395615491003 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.68271386515987 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.485635382788523 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.259464122552785 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.034523943014314 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.803310715633888 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.582805617102263 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.373340111512405 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.143660149331822 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.91247307352659 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.688731352488198 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.485098980675062 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.26579948331489 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.036140525244114 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.808093394002608 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.586837196350096 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.37456062104967 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.163957036386325 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.935129821300507 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.705026290213414 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.484381950818575 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.278574905322708 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.050958777918959 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.821971947089175 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.598692701823675 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.375833255273324 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.164501526776482 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.939156304310709 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.715341633644657 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.498675459580456 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.286823953901017 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.06837775183062 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.854934927443384 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.638208509325148 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.42457193798489 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.219517452963467 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.993247084421654 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.767952098327429 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.544583513930037 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.317468095945832 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.102382898330688 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.875899648034808 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.653170510342246 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.428898001028822 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.208919330076737 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.00296385057511 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.783678323794634 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.560423085643986 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.336922138552122 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.123041890702158 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.900109887123108 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.675438888324715 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.451086753680382 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.225012704638615 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.007764060322831 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.783727429129861 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.560156905507466 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.341305605665652 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.120751290094284 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.89989615615303 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.678036942201502 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.455190188703481 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.230758700259897 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.012299186232462 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.789569347754292 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.572209324155534 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.353034344586459 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.131748995538485 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.909810409117281 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.686313802303549 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.462345918019612 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.2402144808795565 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.021292303944682 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.79797244593094 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.5738769406857696 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.350315267975266 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.127317079933741 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9058243221140163 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6823616839469744 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4595407796284507 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.236415612070184 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.015275086407886 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7913978199164071 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.566861179826173 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3438584116316334 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1199575142982678 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.897590126310076 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6730620425364693 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.44866038572908656 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2243237076093204 seconds remaining)
    1976 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 36.975 seconds)

**Estimated memory usage:**  1932 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
