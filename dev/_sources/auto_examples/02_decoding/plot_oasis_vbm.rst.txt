
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2606cff220>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 132.2340965270996 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 20.710346698760986 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 19.260359287261963 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 18.850165208180748 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.559490203857422 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 18.352047443389893 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.776149113972984 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 18.48038595063346 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 18.293621063232422 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 18.101278914345635 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 17.94247794151306 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 17.76424533670599 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 17.621290922164917 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 17.48688521751991 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 17.33819379125323 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.22389833132426 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 17.097464680671692 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.159247678868912 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.021735456254746 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 16.880575506310716 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 16.782416582107544 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 16.67419798033578 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 16.547315965999257 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 16.43543545059536 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 16.32778231302897 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.226462841033936 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.12634957753695 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.070580659089266 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.089980636324203 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 15.980744929149232 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 15.879289150238037 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 15.769308513210664 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 15.670492172241211 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.56786714178143 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.471666181788727 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.374078852789744 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.267568800184462 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.159617527111156 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.054761146244251 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.033313677861141 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 14.921323776245117 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 14.809913268903406 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 14.697823138464065 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 14.593273661857427 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.482788042588668 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.376276016235352 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.279726971750675 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.188989187808748 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.096287369728088 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.012259872592226 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 13.915830373764038 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 13.879182619207045 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 13.783396995984592 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 13.698281913433435 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.6002458024908 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.504826003854925 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.407036781311037 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.308161973953245 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.214673543798511 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.118630538552493 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.027584552764893 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 12.930243613290006 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 12.873369155391568 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 12.779380397191122 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 12.678889602422714 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.797963234094475 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.694688609152129 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.593570150546173 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.492109158459831 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.390954649966696 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.290408100400652 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 12.185327496327146 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 12.117709265814886 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 12.01750060956772 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 11.918342461457122 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.819570064544678 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.720385990644756 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.636919244543298 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.534941673278809 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.4324643400651 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.335060715675354 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 11.233685428713576 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.135650594060014 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 11.068356229598264 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 10.971026522772652 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.87292334612678 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.772868649904117 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.672180148376816 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.571435364809902 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.472227688585773 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.376309712727865 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.27952505992009 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 10.182758828868037 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.08437196413676 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 10.013980642278144 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 9.917515302959242 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.819956719875336 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.722328129502916 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.625152154844635 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.526550933568164 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.429425477981567 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.332479278639992 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 9.23518388411578 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.136888522546268 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 9.03849638425387 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 8.96380132720584 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.866094197867051 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.769433168607337 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.671896793224194 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.575557995279995 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.484474550593983 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.388609795956999 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.296080095427376 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.202974220292758 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.109384189572252 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 8.013613939285278 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 7.935684886471979 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.838676252935687 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.7412990109395174 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.6447796801559065 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.548882166544596 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.452550955055174 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.356700424288141 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.260676915083474 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.164424911622079 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.0680228710174555 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 6.972089192223928 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.890428745840478 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.794330343604088 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.698588325071705 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.602884641060462 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.5068906791337575 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.412260539603956 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.3190330598587385 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.223455905914307 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.128383618813974 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.0333866792566635 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.938547524222492 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.8536336732947305 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.758793787990543 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.663839101791382 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.569140491756142 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.474475548300945 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.379059114656248 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.2837470637427435 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.188338649683985 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.092964574082257 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 4.99751709107639 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.902379461236903 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.81407852460874 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.718195041020711 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.622301359050321 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.526381116164358 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.430823601928412 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.335397776071127 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.23976993560791 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.144413593487862 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.048891339332434 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.953556395784209 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.858515842905584 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.7683032155036926 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.6727936830579866 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.5778687324052973 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.4831810333977447 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.388624732087298 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.294265682047064 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.199698657874601 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.105522509820447 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.0108186176845004 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.9162624982687144 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.8219986803391404 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.7307674605944 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.6362969875335693 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.5416751913941664 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.4470553644772237 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.3528150830950056 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.2587253722277554 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.164449014232657 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.0702291392208485 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.9762679331795463 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.8833123048146565 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.7894868060370175 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.6979030803009703 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.6041587115636942 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.5102928203085193 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.4165540708077922 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.3225089683327624 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.2283667217601428 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.1342490936847442 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.040141114482173 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.9459404694406609 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8515986435076329 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.75810041030248 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.6634075048673955 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5686616700949129 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.4738372533749311 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.37906184001844756 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.2842347077306757 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.18943874763719964 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09471549700252974 seconds remaining)
    1921 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 45.941 seconds)

**Estimated memory usage:**  1832 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
