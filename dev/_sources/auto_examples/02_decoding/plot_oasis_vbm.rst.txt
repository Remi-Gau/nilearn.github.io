
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f82e09aa280>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 196.54035568237305 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.46326303482056 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.193233489990234 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.051574627558395 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.543654203414917 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.432567834854126 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.853970845540367 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.24974547113691 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.86142921447754 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.452482885784573 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.17784857749939 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.879817897623237 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.84677203496297 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.52932964838468 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.283818449292866 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.03092614809672 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.80019736289978 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.588400882833145 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.364175107744003 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.305900009054888 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.079914808273315 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.880921261651174 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.684320514852352 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.500341871510383 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.320146242777504 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.164328813552856 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.07844767203698 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.893932068789447 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.723691735948837 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.552685268994033 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.37172023455302 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.19397533324457 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.00831228494644 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.93276412559278 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.759734602535474 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.591119629996165 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.437869601779514 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.270625397965713 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.133200231351353 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.95996829790947 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.842293739318848 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.67253655922122 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.50909116154625 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.353803135627924 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.188136490908537 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.026148690117733 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.862353024275407 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.74283017503454 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.58498140176137 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.426517447646784 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.271084547042847 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.117738475986553 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.955491304397583 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.797070035394633 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.748216540725142 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.596154126253992 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.438372475760325 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.280717899924827 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.147839184465077 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.041901681382775 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.919161478678387 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.769524988580923 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.616770636650823 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.45968543537079 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.302688539028168 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.14388207288889 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.985998276508216 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.869892284051694 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.713879473069134 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.558734762495842 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.40231490135193 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.247407698295486 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.089310540093315 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.94117595398263 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.806763120599694 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.6491060256958 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.490971590343275 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.33381349390203 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.17544478025192 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.018919996068448 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.862139105796814 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.728268958904128 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.571994711713092 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.410259019897644 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.250741061710176 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.096136836444632 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.938842729080555 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.7868483833883 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.650043964385986 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.4923814093129 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.335299862755672 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.17855689551804 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.02296855138696 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.870392312285722 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.714826015715904 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.581255360653527 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.42666306098302 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.275616341030474 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.122777063019422 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.970531304677326 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.817556858062744 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.665362306160501 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.52935993905161 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.373632310663613 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.219561796921951 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.066976308822632 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.918440692829636 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.766422207110395 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.614397940812287 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.492832046036327 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.343875148079613 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.192503321278203 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.041651793888636 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.887523771387286 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.751514112740232 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.598370645357214 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.4552701670548 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.302418234001877 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.151397858635855 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.998723292551121 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.84604263305664 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.692826714397462 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.540628667737618 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.399322389587153 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.246549975487493 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.094829130172728 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.944580430076236 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.792835184908288 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.643287539482117 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.492494082266045 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.351288960530207 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.200379906719878 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.050486918651696 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.899394567747763 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.749885719213912 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.600216503496522 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.450496673583984 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.30656618445459 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.156228507774463 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.006002132841152 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.857271228517805 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.707854079862013 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.558937818231717 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.4092401557869 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.264048178990683 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.11389578621963 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.965926562270073 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.818188587824504 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.668627506977804 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.519070642906548 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.370392878850301 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.225955213142546 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.0766271039059285 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.928507959141451 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.779891655042574 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.633189970447171 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.492654812641633 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.344074310011165 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.199151343937161 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.050283366029367 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.902072310447693 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.7540453561344505 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.606694253874413 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.458695992370324 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.311129104800341 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.166351253336126 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.017891510423407 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.870752220382234 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.7230741410028365 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.575345265089407 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.426709385479198 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.27857526422244 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.132891111595686 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.984911520357077 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8377016385396323 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.689469575881958 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.541129166429693 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.392997068200408 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.244830369949341 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.09849102670254 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9500701427459717 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.802189985032898 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.65435353740231 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5067121292072567 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.358860160993493 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.210961709151397 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0641804613092893 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9163037634150868 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7687740072290947 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6211816936573653 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4736131994347823 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3260987978331082 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.178583929936091 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0315935018766729 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8841538675052604 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7366790954883282 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5893457763049067 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4419289591348716 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2945868005656233 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14729599257809434 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 15.848 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
