
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff442bd5bb0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 232.6798439025879 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.85404062271118 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 35.11568641662598 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.16982086499532 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.356534481048584 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.23432278633118 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.92279187838237 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.57071811812265 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.508750915527344 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.213271617889404 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 31.911303758621216 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 31.87124893882058 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.582043250401814 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.302869338255665 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.063885484422958 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.880401849746704 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 30.667701244354248 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.630908909965967 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.44127379523383 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.251934716576027 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.054083347320557 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.871212153207686 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.643845037980515 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.56121887331424 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.357796986897785 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.160158395767212 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.947463714159454 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.75886369634558 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.571943078722274 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.476540154424203 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.3245218594869 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.148822615223544 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.948116719722748 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.775612339828953 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.594650002086865 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.417573043278285 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.32447052001953 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.15311250171146 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.964882486744933 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.789376154924053 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.61115074157715 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.417396952466266 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.2972157455626 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.12129188138385 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.94896205988797 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.784975820117527 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.626967658167302 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.46719278680517 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.34596359729767 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.176735493601587 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.997474908828735 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.828100106295416 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.6485597720513 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.485443151222086 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.358312094653094 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.176263072273947 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.00279235839844 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.850368897120156 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.671352337146626 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.495987419354712 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.356783469518028 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.18221122319581 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.009011191706502 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.842072074375455 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.67566627264023 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.4985024195451 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.35633014910149 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.195466304892925 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.03311361986048 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.856160913688548 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.67494852202279 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.49575249577912 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.321856604682072 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.16974076179609 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.000111908526033 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.830049514770508 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.65410058121932 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.485313517706736 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.324077679560734 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.18002736417553 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.01729726791382 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.850111581661086 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.685272902977175 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.519339506884656 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.36061224483308 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.211343498790967 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.043299713800117 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.88000712175479 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.708363923159514 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.540099210953443 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.368753936555652 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.208816690759345 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.037719135699067 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.863968772272912 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.695005954580104 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.528469311563594 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.356937130292255 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.200806961846105 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.034481593540736 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.86321574028092 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.695008516311646 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.523204907332318 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.35331913069183 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.201233153204317 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.03456790630634 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.873124009086972 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.705867564903116 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.538604448888902 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.37259813591286 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.217061178399883 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.046976826407693 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.880133066091451 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.708581379481725 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.538727865809888 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.373301200699387 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.215585718984189 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.045911344988593 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.878371664601515 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.711012488704618 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.54280129400622 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.375505288441975 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.212096590641117 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.047412411111301 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.88017144823462 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.711739893882505 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.541404247283936 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.37176295310732 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.204777757013876 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.04353542625904 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.876307694486869 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.708414224477915 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.542170098719707 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.374286138650142 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.205389953197393 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.044985297900526 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.87921620298315 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.72530050838695 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.557624682892849 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.389465117800063 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.220272491304137 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.058779988970075 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.890880287116302 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.7215019548443 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.554374894895753 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.385803474320307 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.218237498710895 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.058595023743093 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.891453507806169 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.723197659930667 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.556708476687438 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.388020277023315 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.22065497707847 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.057193555329976 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.889495581583261 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.720961437596903 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.553062169782578 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.385001262029012 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.217019740183642 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.052449528175064 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.883518275974682 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.714983403682709 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.547208729738035 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.379123776047318 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.212414918501684 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.047689815846885 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.879207921750618 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.710736162691231 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.542203452058895 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.37464005606515 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.2058863047312 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.039924467311186 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.872023802751686 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.703597346017528 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.535045960045964 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.3664492272782605 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.197603600365775 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.031550602479414 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.8628252724469716 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.694513489691059 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.525959638243947 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.357715288798014 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.1897112967559647 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0234707476018547 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.8552265597171473 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.6867377861686372 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.519141010335974 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3514346743142736 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.1831702701548203 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0161331663740443 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8479164845098262 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6796863455521431 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5114928040829005 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3433803617954254 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1754035356748906 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0079989531605515 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8398823432433299 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6719174239100242 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5038585202948092 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3358637347365871 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1679234396872209 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.417 seconds)

**Estimated memory usage:**  1887 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
