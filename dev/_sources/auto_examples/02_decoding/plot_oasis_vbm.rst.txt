
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff9bd7815b0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 167.50812530517578 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.207239151000977 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.590593338012695 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.257196267445885 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.46368932723999 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.91961669921875 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.509561538696293 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.18186092376709 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.91377830505371 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.682289865281845 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.682754278182983 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.417346672578294 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.14621051152547 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.93037385206956 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.71203851699829 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.529019117355347 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.3493013381958 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.168975802028882 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.112500031789143 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.940260824404266 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.77588391304016 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.61675424802871 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.446324153379962 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.282075052675996 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.126824696858723 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.968112468719482 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.88012662300697 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.724672176219798 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.565903254917693 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.419083562390558 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.27627189954122 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.128139749650032 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.97468936443329 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.82522582285332 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.737751568064972 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.590736968176707 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.440802839067246 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.292592879888172 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.150217332338034 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.005504773213314 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.86711025238037 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.726381743826515 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.62505482491993 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.489913790724998 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.35725396329706 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.21474051475525 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.075778753861137 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.93691740644739 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.81252030531565 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.713831025726943 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.571509838104248 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.4683094959633 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.33087418629573 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.189904694287282 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.050842938599764 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.915577086535365 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.7787504196167 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.672260916023923 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.53560843960992 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.398084903167465 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.2580246925354 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.121243566763205 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.98540961357855 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.85027247383481 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.715604454278946 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.60280231329111 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.465876817703247 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.329857239082678 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.19739647472606 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.061538879422173 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.924454416547505 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.789439990486898 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.65472878350152 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.54232861897717 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.407721725670065 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.271897157033287 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.136402318352147 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.01254061909465 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.878929877892519 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.744902671137941 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.609423995018005 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.493999357576724 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.359341487651918 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.22623549311994 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.09461033911932 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.961005575516646 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.827795610871425 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.694380209363741 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.560407291759144 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.442887812518002 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.309876203536989 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.176982583580436 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.044570249059927 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.913175857195291 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.816446552885338 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.821573370381406 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.694836159547169 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.559831063771986 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.424261876514981 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.289367288050023 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.155455589294434 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.020365705584535 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.88541815327663 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.761682542782387 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.628014124356785 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.493832565489269 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.360734350276443 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.227549521722526 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.094525531486228 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.960917260668694 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.826832749626854 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.704353102692613 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.570376924106053 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.438010490046137 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.305729385007892 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.171711227168206 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.038940043284976 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.905094395335924 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.771842204918297 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.646971416072686 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.513591607411701 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.381196959944797 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.24924488145797 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.117544013310253 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.984896544487246 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.852019929885865 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.718936129221841 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.59336291335699 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.460568949580193 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.327632381010424 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.194673960025494 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.06184387753028 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.929109884030892 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.796160855687651 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.669554539580844 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.53723387364988 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.404383939855238 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.271602138115542 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.139397424200308 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.009274259745645 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.8772128990718295 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.745177280818317 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.6196350211828525 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.487461306832054 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.355001171429952 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.2228086159147065 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.090462534394982 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.957853093439219 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.825820832639128 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.693937564056192 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.566012620925903 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.434249588985317 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.303675450776752 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.171256980085685 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.039152736787672 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.907216702738117 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.775434249486679 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.6434933212912 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.515072400056862 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.383070294961989 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.2515498995780945 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.11961743550271 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.988222510726363 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.856474044132818 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.72472740382683 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.595669370709044 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.4637549325644255 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.332394093096613 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.200778370811825 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.068944238346709 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.9371606321895825 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.805483363525212 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6739092261292217 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5438537335809257 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.41290265664287 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.281351975032261 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1498760851946743 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.01832829356867 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8868732505969787 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.755335978289556 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6238646507263184 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.493603730069998 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.362281207199935 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.230821893514831 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.0993839761485225 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.9682860503325592 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8368401553041191 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7062825557382348 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5749182904020267 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.444357853087168 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3130377970243754 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1816162139333355 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0502522190411885 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9188738968705883 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7875900071920808 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6562574337690305 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5252221701096514 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.39386195458736517 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26255013003493805 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13126091621628957 seconds remaining)
    1948 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.112 seconds)

**Estimated memory usage:**  1888 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
