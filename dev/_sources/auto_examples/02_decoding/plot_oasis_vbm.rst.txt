
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6794d46970>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 195.5866813659668 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.63966464996338 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.281425714492798 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.360475222269695 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.827505111694336 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.356809854507446 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.127608537673954 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.301038912364415 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.026222229003906 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.704936981201172 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.455629110336304 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.276687210256405 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.074745972951252 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.859330892562866 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.798557588032317 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.58316214879354 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.391239404678345 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.19291515911327 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.03260580698649 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.84411386439675 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.68470525741577 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.638044845490228 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.461151838302616 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.273365943328194 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.112553119659424 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.9961941242218 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.83311754006606 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.657098213831585 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.581019060952325 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.408311761658766 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.243183771769207 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.07762809722654 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.997203469276428 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.8281086285909 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.740804924684415 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.5766304901668 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.40487625863817 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.243702276332957 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.084427507300127 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.917508149758365 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.751669883728027 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.648317616160323 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.487707978203183 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.329147821248963 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.16712312264876 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.008318371242947 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.847071792768396 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.681810171046155 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.569244345029194 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.412150762519058 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.25586175918579 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.100610854578953 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.946242314118606 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.786742916646993 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.63873608024032 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.527920376170766 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.371801580701558 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.221165502280517 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.06496340652992 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.911236884230274 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.754321257273357 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.597534504093108 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.476075264715377 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.315691410549103 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.161018460989 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.008503638781036 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.866988738377888 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.71287119922353 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.56069315181059 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.43469967358354 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.289972986493794 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.138128609724447 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.985379960801865 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.83455183408032 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.682936810158395 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.52951407432556 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.40223475506431 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.247585522664057 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.090928951899212 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.939929841439934 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.787530064582825 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.635047244436947 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.486166250414964 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.359945561512408 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.207986661366053 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.05832271014943 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.909983557324075 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.760275901049035 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.607452262531627 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.458477162243273 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.322676102320354 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.173930812668015 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.022007434264474 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.870055185851232 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.718940572535738 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.56644264020418 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.414742608865101 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.27826648397544 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.127495386162582 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.974013701833858 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.823976993560791 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.672070590576324 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.52242533833373 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.379655331083873 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.231593058659481 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.079867907932826 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.930573688363129 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.780756901357774 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.631178855895996 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.481113967545536 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.339134368029509 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.18849632331917 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.037582635879517 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.888625872873627 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.738764762878418 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.589102226754893 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.438294903985385 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.299970687964024 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.148484197713561 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.998041046767677 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.848813692728678 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.697265096932405 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.550620098583035 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.400600152287057 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.260164968429073 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.109933185577392 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.96092244556972 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.811254824240375 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.66146406531334 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.511478059975676 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.362183992679302 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.221092446159771 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.072441541787349 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.92315325701147 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.774800265013281 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.626640046084368 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.47865732978372 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.330860043964247 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.190783034200253 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.04308186503623 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.894847903932844 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.746806856588268 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.598637731981949 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.450210824713006 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.300806456142002 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.158030690817997 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.010199060178783 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.863286873110298 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.715069203763395 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.566391559255203 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.417745033899942 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.269149554486306 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.124208475414075 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.976360944361469 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.82815298786411 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.679932878863427 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.532258626742241 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.384143300876496 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.239401310305052 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.091177724442392 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.94247978925705 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.794296936959213 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.6454088540724765 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.496553595080697 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.347917027589752 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.202662619677457 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.05432477342077 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.905992013965538 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.757166362944103 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.6081079745433735 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.459304388831644 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.310565367079618 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.164461950923122 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.015739609051302 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.867158802076318 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7183480603354315 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.569672747091813 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4216349246138233 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.272728220800335 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.125819877539267 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.977039681540595 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.828027310292365 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.679111470232953 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.530163789707455 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3813266961470894 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2336076143625623 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0846388698906027 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9361589350164894 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7875920052224015 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6386089274492213 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4897201437699166 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3407170335659806 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1923044323921204 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0433104631196648 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8942200301848736 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7451303188617413 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5961220361748519 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.44709631876291966 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.29806055203832765 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14908886674660535 seconds remaining)
    1963 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  18.442 seconds)

**Estimated memory usage:**  1890 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
