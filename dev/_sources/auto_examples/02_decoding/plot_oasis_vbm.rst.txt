
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa9d6397b80>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 256.82926177978516 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.59314584732056 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.540671586990356 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 45.078324000040695 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.42086482048035 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.978360176086426 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.676261027654014 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.180636508124216 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.81236457824707 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.70474441846211 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.29258346557617 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.94165769490329 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.64106980959574 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.45459884863634 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.383755275181365 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 41.070537169774376 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.851438760757446 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.72804094763364 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.59477424621582 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 40.339989850395604 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.105541467666626 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.87021057946341 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.68879660693082 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.55379617732504 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.26740725835164 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.98671841621399 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.68898958426256 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.414062641285085 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.27903945105417 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.04463971894363 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.83577561378479 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.596518685740804 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.45773857831955 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.18047845724857 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.97325890204486 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.73296710423061 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.53008789486355 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.36162780426644 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.06780805085835 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.794054495982635 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.533613204956055 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.29438481098268 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.11129826591128 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.86810654817625 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.646122910759665 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.41373904546102 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.2446683075117 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.000168333662316 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.75637702147166 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.553590755073394 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.34007692337036 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.15689900342156 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.9019773373237 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.66220012700783 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.44163650936551 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.205409201708704 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.03513104575021 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.789442263151468 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.58743382322377 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.35759868056087 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.16580621401469 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.9363685084171 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.702258179264682 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.466202380165218 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.246517837047577 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.050339148594784 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.84244813341083 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.600400024385593 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.36874276048997 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.136376059573628 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.943734884262085 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.70412857767562 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.67809804280599 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.670601593304987 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.44190006642728 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.22792490323385 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.99150168268304 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.75175743908077 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.540267161833935 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.2997922746441 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.062693238258362 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.83073470621933 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.615348449567467 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.39663086454552 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.17687547774542 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.949288634692923 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.718340114105576 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.498766578477007 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.26919559998946 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.032540996422927 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.824402120378284 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.582021018960972 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.36382870052172 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.131033705126857 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.91051022549893 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.670671412819313 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.454129060109455 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.22485402933101 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.999770393176956 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.77409734870448 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.54085111618042 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.317919839726816 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.087117901035384 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.86152426941881 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.629961160513073 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.41674394834609 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.19051222981147 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.96474573991009 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.736648868631434 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.508204851675472 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.290070447054777 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.08153604387163 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.84952323777335 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.619806519651835 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.40610206754584 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.17939722019693 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.95573482842281 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.72608695478521 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.498987113015126 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.29025482931057 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.061338901519775 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.83647541960409 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.614882519987763 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.39290542331168 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.165463286061442 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.940661478042603 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.714550828176833 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.486737003476602 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.267536118626595 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.040155893148377 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.809592742186325 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.579293511296047 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.357588413989905 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.138510255885304 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.934972428563814 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.776093067946256 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.569207247565775 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.342108331457542 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.110663942668749 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.882751550605828 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.653868573052542 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.433254282525246 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.20194484146548 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.971365328435297 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.743428813086616 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.521597434734476 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.295053357947362 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.064572522429382 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.838467533523973 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.61425238967742 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.39178172747294 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.16037403668789 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.931084632873535 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.702027423709048 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.481801717312305 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.254910353691347 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.025696895061396 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.796366898117551 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.567873960808862 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.344364032805341 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.11451929807663 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.88504639915798 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.656550713527349 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.431235322191672 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.202518079339004 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.976248220963912 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.747994701546358 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.519201948257264 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.295198758443196 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.065553730056131 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.837051587946275 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.608251835170544 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.382268478704054 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.1552492180311615 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.9271403044119655 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.698523725782121 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.469834306023337 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.244002967231018 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.016285818614317 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.787801746549553 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.560638586680094 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.334416980901476 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.106270509761768 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8769874299158817 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.648504112077796 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.420933646124763 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.193931113007248 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9654599804291752 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7369477495234062 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.508609457621499 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.281256863945409 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0528509304785603 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8245254258314767 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5962146329138562 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3681907113065426 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1404122633811755 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9122833378460942 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6841334752019892 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.45602339686769433 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22808740246835066 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 34.499 seconds)

**Estimated memory usage:**  1886 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
