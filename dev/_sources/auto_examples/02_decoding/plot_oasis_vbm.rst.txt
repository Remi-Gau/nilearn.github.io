
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f651fa13e80>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 173.10380935668945 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.76162838935852 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.52260160446167 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.63672176996867 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.16510820388794 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.869017601013184 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.101716200510662 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.788099254880635 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.21553611755371 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.922376049889458 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.627556800842285 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.38904829458757 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.155940771102905 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.971411961775562 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.90802185876029 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.69923265775045 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.502094388008118 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.32517334994148 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.143284373813206 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.969544059351872 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.812636613845825 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.648089272635325 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.5754433111711 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.410220208375353 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.25098752975464 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.099717617034912 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.95192889066843 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.790252447128296 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.63477178982326 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.5924329922117 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.435493151346844 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.27860713774158 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.131741106510162 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.981829007466633 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.836471782011145 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.688386644635884 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.544359816445244 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.446152248898066 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.30003400852806 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.1609764343653 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.011747360229492 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.87373229352439 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.729946420306252 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.587318952693494 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.44350015033375 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.340601444244385 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.196179213731188 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.060206981415444 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.921825806299843 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.780483951373977 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.642099857330322 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.517903603759464 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.38295964094309 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.28457072096051 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.146575733467383 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.00645904107527 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.865884508405415 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.726181247778104 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.586821794509888 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.450990115181874 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.315274000167847 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.203294312367674 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.06571538986698 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.930122946935985 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.793854922056198 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.657792219748867 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.521162018631443 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.38716324051814 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.27633516928729 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.139785728592802 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.00694915226528 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.872555689072946 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.737489064534504 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.605163681997013 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.46883717743126 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.333587567011516 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.216061479166935 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.08003265207464 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.944632713611309 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.810247050055974 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.67664909362793 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.5410983150388 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.411697730785463 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.277910091790808 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.157947142918905 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.023456349092372 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.890557688336038 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.756837573544733 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.622276046059348 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.488028156623411 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.354805204603409 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.222615710981598 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.100766213043878 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.967414261192404 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.835015560718292 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.7009748157702 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.566664437452951 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.433087243247279 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.299863562291982 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.17096164973095 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.049789905548096 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.917971181397391 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.787628211227117 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.654405644796427 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.521768936744104 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.388643821080526 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.255991117009577 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.123953665528342 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.00101567197729 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.868190159491443 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.736735105514526 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.604184844472387 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.472052489008222 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.340233492640268 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.209256276749729 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.0861409643422 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.954148498074762 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.822535594304403 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.690952244451491 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.559943533745132 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.427814483642578 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.296184181181854 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.163667217629856 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.055736776289901 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.923375398881975 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.791358375549317 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.659631649653118 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.529891648630457 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.402018070220947 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.26945810909419 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.137432611905611 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.012623843345933 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.880775126543911 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.749190918485025 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.617693086168659 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.485983345243666 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.354289223166074 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.224803707025346 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.093496464300847 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.966583862579126 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.8369230542864114 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.7060611907472 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.574845424840149 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.443628879693838 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.312231686380175 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.18270049424007 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.0550213088727975 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.92313831355296 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.7912917137146 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.659886494578931 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.528486490249634 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.3970817982755745 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.265498562862998 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.134246765398512 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.006072363296112 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.874800251376245 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.74350390678797 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.611732563395409 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.480232112015349 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.348941701013337 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.217704594135284 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.086864982332503 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.958483313336784 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.827635898180534 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.696748274128612 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.5658042214133525 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.435102431170912 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.304316459301703 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.1735810325259255 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.042907623144297 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.913941453484928 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.7831575284924424 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6521416431249576 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5211821897870546 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.3903998205031476 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.2597104481288364 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1290567463094536 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.998287308687544 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8688283180922602 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.738164058610714 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.607520712746514 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.476844605819955 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.3462204933166504 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.215630593847056 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.085128245146378 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.9546752169325545 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8249756956613192 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6944765177640049 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5639937177617498 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.433524346225476 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3030560267599005 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.172898298782828 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.042500634988149 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.91210111929345 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7820929055361404 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6517162261865078 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5213070450996866 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3909363661925805 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.260582988912409 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1302826692111528 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 4.588 seconds)

**Estimated memory usage:**  1966 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
