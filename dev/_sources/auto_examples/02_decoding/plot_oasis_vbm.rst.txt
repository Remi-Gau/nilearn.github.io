
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa7e0dd4dc0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 151.06678009033203 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.768157720565796 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.13144826889038 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.518109957377117 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.151779890060425 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.486740350723267 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.225614865620933 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.90186783245632 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.628076553344727 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.400334490670097 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.188801527023315 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.013786706057463 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.85681875546773 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.720172350223248 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.72566822596959 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.609971284866333 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.485992431640625 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.33335894696853 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.194768773184883 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.083447657133405 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.959081649780273 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.810961802800495 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.668903264132414 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.60119516953178 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.478903452555336 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.347525119781494 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.205950480241043 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.105601257748074 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.98193965639387 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.847988145104768 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.72844950358073 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.5978583674277 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.529518246650696 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.395853692835026 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.268557730843042 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.141694681985037 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.013152281443276 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.898043110563947 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.76875148321453 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.643319961352226 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.556857109069824 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.453130576668716 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.33281093551999 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.2080180035081 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.08592094074596 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.972462124294704 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.848638835160628 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.732117764493253 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.611530145009358 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.515961841661102 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.397482872009277 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.287449023302862 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.169832339653603 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.048975337226437 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.92691723505656 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.805216615850274 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.68869345528739 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.574087883296766 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.476905354138076 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.354383775743386 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.233030080795288 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.117679404430703 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.998666317232193 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.884262607211157 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.768220603466034 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.649479884367723 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.528315703074137 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.434122007284591 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.318048982059254 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.206335706987243 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.088562216077532 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.968741299400866 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.850553300645615 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.735921660514727 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.623880199483922 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.527314106623333 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.410996876264873 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.297356209197602 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.182998761152609 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.0751874718485 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.960875391960144 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.849798623426462 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.730487032634455 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.61485107835517 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.509292806897845 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.389315408818863 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.272040561188097 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.191081403315753 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.073647932572799 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.952182416165812 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.83046857515971 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.716203325397366 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.607395918472955 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.48707562877286 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.36599456503036 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.246308326721193 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.12785228093465 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.009343769132476 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.889352448132573 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.771226743254998 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.654087543487549 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.546069879343014 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.425926713382497 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.308246772266129 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.189886166499212 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.071400358563379 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.956932009391066 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.838041967320665 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.723151577843561 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.605060080869482 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.493568485433405 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.373722196699264 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.254688433238439 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.135673096749635 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.018411602890282 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.899223700813625 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.789321529454199 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.671558422920032 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.561426009161998 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.443061421899236 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.324850082397461 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.206553407937042 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.088837600145185 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.970094153551551 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.852471859224382 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.734488344192505 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.616278065575495 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.505502086924755 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.38722051680088 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.272690364556718 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.156653385895948 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.041392530193766 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.924647063919992 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.80747713899254 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.691596290958461 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.5764408641391325 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.4639609841739425 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.34698968386128 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.230372187020122 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.1148761519425205 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.9983460903167725 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.881515257747461 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.765264433874211 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.648290459092681 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.537399106555515 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.4221787781550965 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.304848334560655 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.188977530213441 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.072217342015859 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.955072526163703 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.838129043579102 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.7212575476690635 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.604239965740002 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.4900178176904815 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.373262411588198 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.25659675751963 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.140245590454493 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.022727408986182 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.90610836427423 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.789424168988593 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.67274796962738 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.558026005762705 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.441376371148191 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.3246098442311665 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.2079834821747575 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.0917393294247715 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.9748792332339 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8575985203246157 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7407248814900713 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.623688099652352 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5083728958578675 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3911029330471103 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2740066883175873 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.157042455121961 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0397803070901457 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.922879695892334 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8064528703689575 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6894327193330234 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5727099407924694 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.456863063673733 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.339935329225328 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2229464712722526 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.106967024750762 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9902550939653743 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8731569621873938 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7562529718553699 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6393139387971611 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.522896655740585 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4058183812080545 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.28846071636866 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1731526851654053 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.055870738953196 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9384680489699045 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8210818075763129 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7038078553897819 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5867052811842698 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4693950001074343 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35202953295054173 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23470282554626468 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11734860027255725 seconds remaining)
    1993 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.859 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
