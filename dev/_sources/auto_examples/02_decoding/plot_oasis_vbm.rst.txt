
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f51f5ff7520>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 155.5323600769043 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.767640352249146 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.193461418151855 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.446770350138348 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.031402826309204 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.780381441116333 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.634130875269573 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.707974570138116 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.426244735717773 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.182185649871826 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.966925144195557 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.76677016778426 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.599683920542397 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.44265365600586 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.24564872469221 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.065292358398438 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.080379247665405 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.921774050768686 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.777610143025715 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.62811401015834 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.477293014526367 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.370251042502268 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.24461247704246 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.12288550708605 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.053870995839436 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.898123502731323 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.78733328672556 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.85426950454712 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.705102477754867 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.57034632255291 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.45063098271688 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.33120442974952 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.207455158233643 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.15460001338612 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.033107420977426 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.915159157344274 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.802353223164875 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.66824206146034 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.52474039479306 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.39517461947906 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.24952793121338 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.156910279902014 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.01961733046032 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.91003505573716 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.781333338130604 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.647259049945408 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.512396625850513 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.378543605195716 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.238571524620056 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.103217913179982 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.009031534194946 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.88705160103592 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.75824862260085 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.623435452299297 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.520408736334907 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.417642745104704 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.309185573032927 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.17993392442402 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.074947077652503 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.94474137435525 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.819258451461792 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.690288516341663 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.5576810836792 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.42469372825017 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.298896580934525 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.170826545128456 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.046327352523804 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.934968688594761 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.806549464955049 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.685387176016103 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.560112578528269 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.437577049497149 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.314146677652994 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.192482027288985 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.072784269178236 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.968008597691854 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.84879550180937 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.731265229064148 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.611575805223906 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.490443676332884 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.365496635437012 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.240213656131132 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.113631585749184 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.99177804625178 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.878477857226416 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.757366797503304 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.63424854500349 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.508861771945297 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.384395122528076 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.260978980010814 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.138475100199383 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.016580005268473 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.905854411747146 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.796039524898735 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.676014753098183 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.555479727293317 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.434310336907703 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.312704123172564 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.193529941597763 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.073657259796605 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.95310354232788 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.838008901860453 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.714446465174358 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.593629716669472 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.471760749816895 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.348443871452695 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.226645586625585 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.103819735696382 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.982357766893175 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.871441298668538 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.752656611529265 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.630070851729798 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.508143476077489 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.385589110112823 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.264910124895867 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.143334585687388 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.02255525260136 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.899994756421473 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.783915483345421 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.664080493590411 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.542291482289631 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.420921073472204 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.299579249053705 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.17806186133284 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.05686290033402 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.9360032081604 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.820249337998648 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.699427216071781 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.580147251486778 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.460664549539255 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.340436862065241 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.219182485842522 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.09928010449265 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.978163651057653 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.858330516672845 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.743728399276733 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.623247595394359 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.502893893388066 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.382749046104542 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.262473030913648 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.1419528893062045 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.021347894736215 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.901754110631809 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.781935793536526 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.667552007569207 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.547447295024477 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.427789861208772 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.308501825851648 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.1882903382584855 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.0698175958339 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.949918031692505 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.8305418617678 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.713919689780787 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.59379128692976 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.473487237831215 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.353314584301365 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.233850375199929 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.114323076928497 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.99423896210103 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.8744838762583225 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.755276381969452 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.639096884994033 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.519475780887368 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.399905136026487 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.280105387292257 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.160633014910149 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.041434667196619 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.922044813989879 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.8028784706479026 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.685413813449927 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5662253884708184 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.447553399013497 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3289281878360484 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.209873278016989 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0907369071039663 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9715237958090643 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8524756106463345 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.733448246778068 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6156578278273677 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.496451026234547 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3773726357354055 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.258384969353017 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1399225428864197 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0209944782361307 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9018335964368738 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7827531969225086 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6642899795245099 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5458505727390555 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4267729241797265 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3077370250035845 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1886533812472695 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0697367990204176 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9507840871810913 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8318601556392531 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7128913525453549 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5943227547865647 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.47541749720670734 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35653149415998897 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2376608222421974 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11882594362575205 seconds remaining)
    1950 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 0.484 seconds)

**Estimated memory usage:**  1908 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
