
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fd0ebda3e80>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 165.28606414794922 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.636316299438477 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.35422444343567 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.52442487080892 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.163450241088867 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.810377836227417 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 24.504438877105716 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.464234147753036 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.160274505615234 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.95261184374491 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.728378534317017 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.482045672156595 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.27604341506958 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 23.057515382766724 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.82474858420236 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.756279468536377 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.595387816429138 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.43866063566769 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.27606818411085 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.15741535236961 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.024199724197388 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.89145417440505 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.754239147359677 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.60998645036117 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.53124968210856 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.406020641326904 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.26661075078524 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.128680370472097 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.97300624847412 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.81365915824627 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.652445077896118 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.49990363274851 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.39364641904831 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.250615459499937 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.11038827896118 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.961091450282506 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.812386883629692 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.690692875836344 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.635129276074863 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.533104156836487 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.425923347473145 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.337829316534645 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.204962469282606 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.06658581245777 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.9279307235371 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.79364225599501 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.67220661951148 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.550346648439447 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.414538304011025 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.31575947878312 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.189146518707275 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.05908009585212 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.92741353695209 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.794239264614177 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.675063044936568 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.54848842187361 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.41520609174456 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.280037076849684 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.17748819548508 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.05462629512205 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.923725128173828 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.789935612287678 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.663384368342737 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.54142682136051 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.413100212812424 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.282783600000236 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.172243970813174 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.04924703000197 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.91995473469005 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.796853991522305 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.672712632587979 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.55091636281618 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.427879757351345 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.30324692595495 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.171460390090942 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.069330930709839 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.947903432344136 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.82220241620943 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.692861104622866 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.565037881271747 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.441690683364868 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.316441356399913 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.186855601101387 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.077461323106146 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.953082073302495 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.826330507502837 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.700091727944306 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.575381388609438 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.45133742419156 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.32698283570536 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.201619545618694 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.07987358019902 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.971016697261646 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.847982232288649 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.723058193287951 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.59940350683112 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.474157532056172 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.35119904439474 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.226704115770302 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.102804123753248 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.98849868774414 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.866342143257066 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.741624565685497 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.618010319552376 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.504898878244253 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.383411010106405 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.257801798154723 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.134615653029112 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.011325942145454 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.895162490529751 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.772208647294478 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.64869887120015 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.52525896685464 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.403699625909855 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.283137819223237 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.160626587660415 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.040226286855237 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.918358201654549 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.804426754935314 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.683804602182212 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.56249189376831 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.442775978529749 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.323168793662651 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.201962785023014 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.079965222266413 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.958271265029907 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.845678185659741 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.726083321834173 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.60576556622982 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.485970177391703 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.365693807601929 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.246552860463849 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.139910134402188 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.019454755281147 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.903635380873039 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.7836612595452195 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.662637037389419 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.54223564245405 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.421854164289392 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.301350092716354 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.180782386234828 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.0595399724676255 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.939016449619347 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.822528987497717 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.7018723487854 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.581180227213892 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.461338784596691 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.341524904277049 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.220997153101741 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.100475228072813 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.9808140595753985 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.860628194366859 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.743903963189376 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.623897268881206 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.503879494481272 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.383618354797363 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.263599988741753 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.143284973824859 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.023582998710342 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.903994351812878 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.787806510925293 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.6683208838753085 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.549276775783962 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.430037497011431 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.311539202201657 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.191788904594652 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.071600250450961 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.951135558282544 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.833277974809919 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.7138613300210626 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.594680575763478 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.475444792306911 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.356230563895647 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2422939104840935 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.122093600788336 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.002118757792881 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8838993310928345 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.7636836975981285 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.643727798140451 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5233873055633884 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.403386539883084 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2833270657787006 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.163050305712354 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0426406638869823 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.922394379325535 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8031557315104718 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.683227687753657 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.563118091879044 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4430347960045995 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3229798236221233 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2028276041934365 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0825476471666267 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9622873961925507 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8422947300530468 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7218576509927966 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.60151412548163 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4811884967648253 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.36085122853971374 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24055431587527498 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12027336365014464 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.261 seconds)

**Estimated memory usage:**  1817 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
