
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fcdc1b5dbb0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 183.1340789794922 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.73862648010254 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.482489585876465 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.69949825604757 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.16293430328369 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.708598136901855 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.479637702306114 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.194416284561157 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.01442527770996 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.945117897457546 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.74806785583496 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.56372183019465 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.47653309504191 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.29828111941998 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.118027039936614 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.953833421071373 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.792128682136536 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.652726748410394 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.474199718899197 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.30124646738956 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.131489515304565 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.982472771690006 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.82538466020064 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.65607323853866 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.49820899963379 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.344978094100952 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.176546793717606 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.01506166104917 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.862448658261982 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.713506386197846 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.56971844037374 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.45050977891491 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.328058540821075 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.182820211757313 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.04021281354568 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.900361435753958 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.767498652140297 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.627423247775514 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.479057312011722 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.331800748140385 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.196744918823242 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.052638396984193 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.917389812923613 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.776481073956155 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.6294067772952 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.479572190178768 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.341566780339118 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.200828805882878 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.064899802207947 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.91989418438503 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.7721688747406 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.633825708838067 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.51046448487502 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.363731816129864 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.223618666330974 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.08165979385376 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.951009409768243 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.818005310861686 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.674025568468817 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.53065084198774 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.384192546208702 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.241188326819998 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.097262105634133 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.953139441353933 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.808650255203247 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.668916023694553 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.531807885025486 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.3898230381866 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.249876611373004 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.10808369733285 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.965540443147933 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.827256914595484 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.684906005859375 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.54432822580207 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.4040009782121 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.262648741404217 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.120630577990884 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.978204854123003 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.838149737089108 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.699829439573648 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.563099145889282 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.427098830540977 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.292530228451984 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.153402917356377 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.023054724647885 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.883450073354386 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.746034256247587 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.607430447107076 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.467724453319203 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.32792841718438 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.206537935468887 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.066128615494613 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.926396048587304 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.78733592392296 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.648967332028327 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.506605035380314 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.365100721518198 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.22728050123785 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.118295100270487 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.984694028141522 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.8464035987854 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.707846957858246 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.567186781004363 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.429208338839336 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.291378828195425 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.152850559779576 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.011943380787688 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.874718848789964 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.736776290116486 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.599987156894228 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.460323702205311 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.320038155392483 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.181900450161525 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.043402876474161 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.903973449740494 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.766535758972168 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.626930573890949 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.487273098057152 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.346746804350515 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.206822078768948 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.067726135253906 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.927729139643269 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.788061145876275 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.649300311639056 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.51793582208695 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.378849697113036 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.239905591994997 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.100980227387796 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.962318927049637 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.822098273639531 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.683133455423208 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.544430123030684 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.406080188173236 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.266918478155494 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.127048613420174 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.986845634601734 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.84782465766458 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.708154624395997 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.569683334101802 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.430160347506297 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.290947777884346 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.151863524254333 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.013355980456716 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.87713910983159 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.739422427283393 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.600915637509575 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.462083725080098 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.324472479268807 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.18685751992303 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.049108270030694 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.910937865575154 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.772654546017678 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.634409477836207 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.4957989103653855 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.356949378917744 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.2184563606016106 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.080064003284161 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.9416751254136395 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.803757583038716 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.665883737540095 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.52730256319046 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.388746871711305 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.250666232756626 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.1120346996681825 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.973594741123478 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.834781834573457 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.6965940831655475 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.557946345049464 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.419041906084333 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.280788239642713 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.142431834164788 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.00401845173529 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.865989917932555 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7274188595700126 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5891677538553877 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4510725225721086 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3128078634088687 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1746079544563077 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0363558651356213 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.89807590159624 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.759877178404066 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.621788060467546 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.483835288456508 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.345993284319268 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2079130255657695 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0698795060853703 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9329384578171598 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7952000801576014 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6570726100434647 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5189283751936815 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.380863955146388 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2426455857241965 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1044652660687764 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9663448568452825 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8282417513660549 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6901423503191043 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5521443765990588 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4141982727244421 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27613436573683614 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13805584212643418 seconds remaining)
    1960 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  9.083 seconds)

**Estimated memory usage:**  1813 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
