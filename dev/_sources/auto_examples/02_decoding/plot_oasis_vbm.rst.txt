
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f91e96ee220>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 228.08551788330078 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 41.72633600234985 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 41.49977946281433 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 39.57931931813558 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 38.56652522087097 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 38.57337427139282 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 37.8700114885966 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 37.341024943760466 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 36.89534568786621 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 36.83306614557902 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 36.635618925094604 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 36.67949893257835 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 36.597482204437256 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 36.25259489279527 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 36.03250919069563 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 35.75099500020345 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 35.836642384529114 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 35.569435989155494 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 35.591728051503495 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 35.36807903490569 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 35.130526542663574 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 35.00735780170986 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 34.747364867817275 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 34.47108724842901 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 34.172034899393715 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 34.00237202644348 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 33.722296164586 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 33.5895856751336 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 33.319488525390625 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 33.1495504790339 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 33.127249320348106 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 33.00174389346953 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 32.85121750831604 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 32.57918985684713 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 32.51262733515571 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 32.26054695674351 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 32.06603545612759 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 31.89020492579486 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 31.69653499753852 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 31.533561498690876 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 31.293522834777832 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 31.05493066950542 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 30.81726516996111 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 30.65538530571516 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 30.439799243753605 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 30.1980938911438 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 29.959533224935118 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 29.710360613275082 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 29.534559726715088 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 29.299736811190236 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 29.077511072158813 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 28.85414084733701 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 28.64395732146043 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 28.44529903609798 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 28.27382156583998 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 28.07264867695895 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 27.870963232857843 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 27.65064423544365 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 27.429998850000313 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 27.268178264973525 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 27.052585681279503 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 26.855260430789386 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 26.66517300759592 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 26.45145779942709 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 26.23986640572548 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 26.084671662403988 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 25.914904897863213 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 25.719796041944132 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 25.52569648798774 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 25.321549750756525 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 25.1487273148128 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 24.940036427806803 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 24.75254948933919 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 24.54599438954706 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 24.341601172009028 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 24.16679938634237 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 23.97574093467311 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 23.78399605565257 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 23.58448016949189 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 23.372968344748774 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 23.168896436691284 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 22.99319823877311 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 22.792800961471183 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 22.59012475645686 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 22.38384083339146 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 22.188467025756836 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 22.01314722659976 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 21.820232520158264 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 21.620466925881125 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 21.41168248519469 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 21.210787534713745 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 21.012293435715055 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 20.835159674934722 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 20.65258647036809 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 20.46302082183513 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 20.264208442286442 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 20.069348553816475 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 19.890921039679615 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 19.686650684901647 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 19.49715384088381 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 19.299718856811523 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 19.10162872843223 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 18.913131017310945 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 18.723061137986416 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 18.527222486642692 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 18.33254421324957 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 18.13774475511515 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 17.94112945939893 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 17.777026141131365 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 17.58555472881422 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 17.383947112343527 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 17.183985418027586 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 17.01587920529502 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 16.837159047084572 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 16.643058504974633 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 16.44292090250098 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 16.242611695980205 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 16.05032175218957 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 15.872374809394449 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 15.681027252133154 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 15.489057064056396 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 15.292217967924008 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 15.093994230520531 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 14.89505755416746 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 14.711127004315777 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 14.51292142868042 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 14.314340038905069 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 14.118041990310187 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.919500306248665 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 13.73262892952261 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 13.536478427740244 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 13.337207832409225 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 13.140462810342962 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.94447940632813 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 12.75192766758933 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 12.563853360988475 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 12.365905537324792 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 12.169873754473498 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.972971003988516 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.7766012081997 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 11.593856232506887 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 11.405365842453977 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 11.210320442495211 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 11.018577475647826 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.825193617078993 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 10.642090559005737 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 10.449652257030957 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 10.260937072792832 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 10.064289737392118 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.874264283468259 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.68549370765686 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 9.494401791237838 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.299329782787122 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.105663115682166 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.913515638995479 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.718725219849619 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.530892090919691 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.33847395022204 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.142513622211505 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.946984250590487 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.752231955528259 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.562399750170501 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.366363837395185 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.169938616957401 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.978138283985417 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.783838105924202 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.587631535817342 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.3971751464341216 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.201871690295991 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.006609682500715 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.811098098754883 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.616395133280615 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.426870917165003 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.232854183009595 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.038369995424118 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.84285535131182 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.64873684536327 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.456465323766072 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.261711415280117 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.06754505301321 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.8746655252244735 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.68077624700346 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.486839226314 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.295087058687471 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.1009208637735117 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.908008040608587 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.7145187880403254 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.5204344752000614 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.328114037818097 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.1359316318754167 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.9415614855916876 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.7468874442015643 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.5523335735003152 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.358876738523572 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.1645697613352353 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.9701924018370799 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7759411626932572 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5818572056475024 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3878661333912551 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1939970284850154 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 23.817 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
