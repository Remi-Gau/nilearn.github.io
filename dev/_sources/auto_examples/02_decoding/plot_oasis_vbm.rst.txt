
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe479f409d0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.75194549560547 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.322483777999878 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.009877920150757 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.19774985313416 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.38181781768799 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.02377414703369 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.684685866038006 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.442113876342773 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.18840980529785 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.97103910975986 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.86599612236023 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.2234001159668 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.0457812945048 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.821168917876026 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.5989134992872 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.410909970601402 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.233448266983032 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.035949707031254 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.951231665081448 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.763691274743334 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.58079171180725 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.405687650044758 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.231293548237197 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.070887264998063 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.90882142384847 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.831981897354126 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.670994942004864 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.5083198900576 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.344223771776473 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.18285138031532 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.021892150243126 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.015975490693123 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.910717487335205 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.762755726322982 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.607642187791715 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.45407564299447 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.305896096759373 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.148566780863582 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.99095594255548 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.833531275773662 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.725879669189453 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.565576268405447 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.406043222972325 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.249329838641852 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.0932325666601 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.937546624077694 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.780270224032197 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.662882201215055 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.507765372594196 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.355878333656158 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.20264196395874 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.054923908383238 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.90636130479666 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.76553126101224 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.643424299028183 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.49349355697632 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.341873168945312 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.191614765869943 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.040986998327845 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.890503374196715 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.743372996648155 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.617667319344694 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.46817748777328 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.323710278859213 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.178613603115082 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.03486919403076 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.889233430226643 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.74281651582291 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.600031782599057 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.47427283162656 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.334297827311925 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.193315653733805 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.05147722032335 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.907901293610873 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.766716538248836 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.62440363566081 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.50047695009332 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.35895933733358 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.214230965345333 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.070136163808122 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.924882292747498 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.78009354626691 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.638094401941068 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.515143256589592 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.371519088745117 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.22737382440006 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.083268503810082 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.937395405495305 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.792084043676203 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.648317307568668 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.514619641833836 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.369369074538513 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.227684995402463 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.083434702247702 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.93811630695424 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.795179555290625 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.6559512813886 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.557070132383366 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.41236197218603 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.267832837923608 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.125325441360474 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.981454988517383 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.83635823399413 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.690181491444411 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.555933438814604 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.412374802998134 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.269998829319793 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.127530634960282 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.984870416146737 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.841802030528358 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.69757494059476 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.553650858165982 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.424458197184972 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.282006196216145 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.139663307290329 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.998238294020942 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.857328899975482 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.714500119543484 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.571240352371992 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.436343744021505 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.293357213338215 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.15152710331373 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.008658409118652 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.865966387880526 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.722835386953047 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.57933259010315 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.444117284956432 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.301913088700902 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.158861011266708 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.015914883724479 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.87365093597999 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.737991200148604 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.595796346664429 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.459399952924342 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.317398608620486 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.175600934911657 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.033147811889648 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.890669777445549 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.749956628550654 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.60762514484872 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.46562579699925 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.32880101305373 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.186632965652036 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.044792258656107 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.90299657980601 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.76055908203125 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.618372855121142 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.476313430435804 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.3385792036314275 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.19661755849851 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.0551760991414385 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.913724727188514 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.771470622012489 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.629824694465189 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.489631866479849 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.351009053568687 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.2091435469113865 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.067557787439625 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.925667853295048 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.7839675684395075 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.6418731808662415 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.500317237391975 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.361160846404087 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.219385436707479 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.077815177964001 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.936178034002131 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.794598961450967 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.653173078319984 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.511631965637207 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.371634267490996 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.231050126692828 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.089645208671079 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.948114084642987 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8065558830437634 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6649423659532925 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5236873626708984 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3825747858394273 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.242806743093803 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.101373851969001 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9601527152780713 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.818996085060967 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6782699171350806 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.537174392532516 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.396026651715972 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2558903279511826 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.114669960898322 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9735118163529264 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8323565001156241 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6913219614231838 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.550404872843828 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.409417804918791 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2689238418459268 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1278624335924783 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9875971159169092 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8490658470035829 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7095828545399201 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5676866794119075 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4259052736505034 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28399748513192846 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14200376985061108 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 8.133 seconds)

**Estimated memory usage:**  1930 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
