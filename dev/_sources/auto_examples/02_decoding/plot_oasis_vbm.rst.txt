
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe8bdf332e0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 179.1834831237793 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.00251269340515 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.102733850479126 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.225169261296593 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.434202194213867 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.027047157287598 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.61831251780192 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.42090106010437 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.116540908813477 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.86036165555318 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.641727209091187 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.692600705406885 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.45855172475179 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.22661018371582 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.01821085384914 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.85224517186483 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.67201805114746 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.493308235617246 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.476424773534138 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.365386586440238 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.215916872024536 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.077766282217844 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.91553369435397 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.74954276499541 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.614893913269043 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.577922344207764 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.444910581295307 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.300943613052368 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.16788060324533 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.025440043416516 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.873985846837364 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.744408922810706 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.676511108875275 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.53637818856673 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.39406345872318 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.25418598311288 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.10207528538174 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.950623596036756 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.79529788619594 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.63757483775799 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.534796714782715 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.376407035967198 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.224346705845424 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.08624594156132 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.93397424437783 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.782162030537926 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.6250449989153 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.519231669446256 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.37155799070994 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.217471331966166 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.084100484848022 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.936029420179477 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.78618414585407 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.6456263830077 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.536330196592544 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.38510688868436 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.235772950308665 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.089940305341752 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.944611072540283 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.79474215992426 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.64623792966207 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.523340580893347 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.371056256755704 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.2222879992591 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.084761172533035 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.945952727244453 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.802093563657817 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.65504603955283 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.515901257010068 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.406060775121052 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.262912818363734 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.12478219623297 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.985407087537975 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.847403532838168 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.70718878024333 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.607118288675945 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.488102900354484 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.347330830313943 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.207679290037888 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.06456691403932 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.923402428627014 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.782675381060002 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.64514250290103 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.52423836236977 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.38659421602885 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.247787756078385 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.11255686227665 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.974552721812808 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.834588657725941 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.69441453526529 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.567011117935182 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.421270931160057 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.285115521887075 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.144227732894242 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.005016301540618 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.868716390509356 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.731283724308012 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.603024340167488 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.461741330672284 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.32710315482785 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.186456441879272 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.044310947455982 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.90390490550621 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.76191998685448 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.632502775925857 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.488914614632016 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.346313269633168 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.201241736100098 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.05444789815832 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.9121538936545 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.767559138211338 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.633975864530685 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.488245929990496 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.34491500812294 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.201500666768927 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.058388295380965 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.914668732676013 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.771082052817713 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.638212470685023 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.495672025600403 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.353983243306477 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.210963416690669 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.068410052627815 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.92602377209237 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.782605340403896 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.63919734954834 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.502479825701032 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.360207251676425 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.217822805047035 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.075363983479582 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.935115062273466 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.792990014753268 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.65007862177762 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.512132556814898 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.368474455022099 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.227881396258319 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.084389069501091 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.940357711193336 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.796505423559658 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.652615512875345 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.513988222394671 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.371779358978813 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.227908621371633 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.084049084803441 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.939536505275303 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.795944345408472 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.6541906186979105 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.516194948533766 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.373052867683205 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.229774956735189 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.087552150090535 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.946247675560957 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.8043421193173055 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.662092199512557 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.521572144000561 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.381028821391444 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.239097252870217 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.096894437340414 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.9539593231828905 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.811167908914434 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.670129358768463 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.527601929184813 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.388385863951695 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.2455795718116995 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.10288831082786 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.960491613908248 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.818254557000585 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.676081134887513 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.5337714694795155 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.394074757423627 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.253161248038797 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.111220677693685 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9691462516784672 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.827178132327306 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.685336192448934 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5438864571707587 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.4038422324440694 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2626024208499884 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1213014313344205 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9792643046245897 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8400612937079535 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.69791935161991 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5558663121946563 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4151962949929993 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2731728761092476 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1309214991492196 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9886175893968152 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8465035943424 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.704402984456813 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5623128288006656 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4210242723163804 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.278856598269877 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1367310980955758 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.994624617186235 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.852480396782 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7103334695864946 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5682783418772172 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.426414089154471 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2842607353672837 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14211598952211926 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 10.187 seconds)

**Estimated memory usage:**  1850 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
