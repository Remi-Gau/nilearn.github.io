
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1329edfd60>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 186.51247024536133 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.148131370544434 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.258955240249634 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.181478420893352 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.35571813583374 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.81982922554016 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.445437431335453 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.10879571097238 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.786176681518555 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.482124858432346 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.268782138824463 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.28789923407815 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.06494847933451 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.852969059577354 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.646926437105453 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.488348801930748 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.303876996040344 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.122923977234787 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.06400246090359 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.887035959645324 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.724245309829712 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.55402820450919 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.377796823328193 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.230885132499363 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.0710023244222 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.98646593093872 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.81477326613206 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.653540328696923 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.48809201376779 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.327534576942178 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.166266441345215 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.000566282579975 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.911707520484924 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.736407778479837 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.572334051132206 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.405774184635707 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.24519681930542 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.08402788316881 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.930222963031973 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.82755346175952 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.669543266296387 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.511387295839263 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.351167190642585 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.293384862500567 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.17267760363492 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.0164090262519 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.902933493904445 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.745509370844413 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.590399980545044 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.431066089746903 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.274890422821045 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.11690469816619 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.958502824489887 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.83702554342882 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.68342324539467 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.52085852622986 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.365921565464568 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.2096938166702 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.05640965494616 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.899213386794266 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.775186777114868 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.622942701714937 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.46912662444576 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.31553276001461 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.162257701158524 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.006545213552624 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.8542913090099 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.737012671000922 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.583923564237708 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.430538916933365 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.276959317071096 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.12264534789072 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.96788618299696 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.839633755487938 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.687306926057143 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.533848126729332 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.37712722075613 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.22491082897434 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.070634383421677 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.917821552180037 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.785671830177307 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.635052498476007 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.482192580292864 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.3394639290959 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.18388463201977 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.03156260883107 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.879268579704817 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.741992358503673 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.593158028342508 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.44350511572334 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.29288098547194 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.141515105635253 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.987621887870459 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.837125696161744 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.702183378503678 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.551297626997297 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.39885099728902 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.248030854254655 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.096353808227851 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.945500951824766 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.794458389282227 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.657660574016004 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.503281597997628 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.352671301480637 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.201473309443548 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.050733838762556 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.89898341556765 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.748398725117479 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.609098116556803 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.459170262747948 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.308983607725665 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.160336079898181 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.010560819080897 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.859662300717513 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.709055729079665 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.569862085839976 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.419596614508793 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.26906219506875 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.12098467956155 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.971996752153926 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.82282559076945 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.673914127113406 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.535010345646594 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.386578941732887 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.24054515746332 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.092106437683105 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.943306355249314 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.794380490235456 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.645190432667732 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.503519013870594 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.354092634641207 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.205111356181952 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.056495847124042 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.908276496973253 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.759696060152196 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.610852294498018 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.46913517222685 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.319845288339323 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.171398432358451 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.02338845609761 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.875041450772967 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.726490955826238 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.578466072888443 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.435061173005538 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.296019593874613 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.146982201214493 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.997687414900897 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.848739529953522 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.699718004948385 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.556075209739224 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.408039728800455 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.258982288916379 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.109905393500076 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.960780005049862 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.811678747078041 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.663417531597999 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.518751138295883 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.3698100269220435 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.220954964432535 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.078416527442212 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.929455935955048 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.780609687663014 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.633142636146074 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.487744933988419 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.338845561190349 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.190425013050889 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.041338101927056 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.892421638180396 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.743363925388881 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.595063645458786 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.448074074352489 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.299302639319882 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.150414877159651 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.001488502315015 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.852571761471102 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7037848063877647 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.555519396608526 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4090605024564065 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2604476253638106 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.112031205406402 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.963376760482788 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8149079156843997 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.666543853151929 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.523885978375628 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.383915673131528 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2364628959346464 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.08714581817709 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9377190480257738 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7885673857749775 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6392403090441667 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.490771506962023 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3415330205288234 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1923063000043232 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0431372143444002 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8939611887194447 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7449131745558518 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5958503752338643 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4470978509351082 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.29802062053873085 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14898401408938308 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.728 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
