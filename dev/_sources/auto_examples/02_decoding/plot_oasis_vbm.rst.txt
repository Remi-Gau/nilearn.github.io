
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f61a26b9790>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 167.20294952392578 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.401803255081177 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.60962748527527 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.7930014928182 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.41920280456543 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.486491441726685 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.577715635299686 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.263563462666106 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.983118057250977 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.750490532981026 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.5233633518219 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.326949986544523 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.12261883417765 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.978020723049458 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.946520396641326 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.75399939219157 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.602447509765625 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.447688074672925 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.30726342731052 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.148602648785243 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.998470783233643 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.949201402210054 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.788862705230716 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.624068239460822 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.474872271219887 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.33132004737854 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.18727234693674 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.0364217404966 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.897288867405486 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.810703466678486 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.66833790143331 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.51771985330889 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.437323033809662 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.296063350908685 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.157999263090247 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.011564935956685 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.871132612228394 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.76732861029135 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.623766585400233 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.48711446615366 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.34437847137451 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.205158460430983 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.065348750069028 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.92888511058896 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.826639305461537 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.68631680806478 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.53889784605607 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.395036606078452 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.250020146369934 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.10514649566339 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.97978925704956 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.841490198584165 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.734132198187023 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.587860152406513 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.445921853736596 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.302900227633387 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.157315254211426 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.01655503741482 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.87816360079009 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.734973022493264 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.614663918813072 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.47700233928493 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.34082455019797 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.20243518314664 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.064864993095398 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.92743939619798 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.79189351833228 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.674615194548423 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.536022060057697 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.396081457967345 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.259875093187606 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.122463756883647 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.98335520426432 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.84915688266493 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.714726325627918 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.597236394882202 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.46230273497732 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.330551893680127 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.19566342158195 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.05836514279812 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.924440503120422 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.791553803432135 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.656452068468418 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.53842158777168 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.406330006463186 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.27529483682969 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.139401280602742 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.004143218884524 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.868824351917613 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.73478280292468 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.609240664376154 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.48165378989754 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.347887505655704 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.211970275448216 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.07604890174054 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.941799314398516 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.8134512702624 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.67807052799107 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.552676497673502 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.417351038769036 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.283275365829468 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.14823862349633 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.013411507887 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.878130597975648 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.745201624356785 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.610233590716408 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.484153635097 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.372933472428366 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.237897608015272 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.103636135748767 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.968872980637984 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.834934859662443 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.699714592524938 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.574150311208404 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.43980844397294 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.306585000908893 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.172259815808001 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.037596767784184 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.9061183000015 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.774824178519369 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.639656702677408 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.51214940291791 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.377573345528274 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.242519384477196 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.108548479695473 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.974333810806273 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.840809738825238 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.706803755497369 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.578301027417183 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.443953892981359 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.310163021087646 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.176581997907798 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.042205572128296 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.908025650153483 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.774550740398578 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.64024645310861 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.51170539855957 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.377992737902343 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.243498356445976 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.109475228426268 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.9755498341151645 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.8438100611909904 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.709566542800044 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.575744547210373 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.446694042947557 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.313206804209742 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.179226222103589 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.0457556377462796 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.912041348380012 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.779421286294925 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.645834287007649 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.515697807665692 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.382463354813424 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.249176471061956 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.115599771598717 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.9818567306764665 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.849694838890662 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.716575772898971 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.582820545268963 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.452291350694573 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.318944990634918 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.18566886386516 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.052188243395016 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.91888471468826 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.7864576723517445 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.653549786769982 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.520077909331723 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.389096574155157 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.255761509849911 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.122471829137859 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.9891934254590207 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.8560691437526056 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.7229015217270964 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.589716716997885 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.4583086556401748 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.3249989918300082 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1917147744785654 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.058369740254461 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.925108906928073 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.792312969708576 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.659126149283515 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.525944466090334 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.39470134462629 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.261518531809739 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1283726484879204 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.995196039612229 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8623236404952184 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7291661800547717 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5960094167831096 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.462893324554282 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3304926847156724 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1974323607240047 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0643519461154938 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9312216790846591 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7981356787927372 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6650657959473438 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5319965469593904 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.39912696659262414 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26607546421012496 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13302757632193254 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 5.934 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
