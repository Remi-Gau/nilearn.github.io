
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fbfb197b220>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 158.18357467651367 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.63057541847229 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.601399660110474 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.68851701418559 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.117818355560303 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.68019199371338 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.403350512186687 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.275304113115585 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.122541427612305 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.959742890463936 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.822831869125366 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.67315366051414 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.553624868392944 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.426863963787373 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.311819076538086 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.20797109603882 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.094151377677917 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.97786247029024 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.856338024139404 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.728369286185817 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.687702655792236 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.544622864042008 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.4199471690438 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.29436464931654 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.163978417714436 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.034189701080322 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.917187195557815 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.795976100144564 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.6737460068294 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.55014991760254 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.41237227121989 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.30029079991002 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.195048332214355 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.07801593433727 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.946230187135587 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.819088663373677 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.687852409150864 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.56309977737633 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.438468017076193 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.319151860017044 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.198753356933594 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.073701928301556 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.950648693811324 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.83112986697707 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.709841901605778 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.588207615746395 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.463913337044094 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.339446904811453 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.228349685668945 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.108092770284536 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.983428955078125 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.860879196840173 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.746691116919884 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.63065458243748 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.520959880616928 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.398828744888306 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.28317519596645 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.16271533045852 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.046111583709717 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.925217293076596 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.80272714296977 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.684467796419487 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.570926697023452 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.45554607255118 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.334979444742203 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.215378119395332 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.097119490305584 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.978883743286133 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.861138666377348 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.740784264992977 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.623967715672086 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.50632753170712 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.389280954996744 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.276855527538144 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.162164810541514 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.046221812566122 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.924636640046772 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.860499214816404 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.742161818039722 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.620420712458936 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.497947335243225 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.383549095671855 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.261953917945304 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.13859265396394 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.015969128835769 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.8943349052878 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.776109290677446 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.65498580603764 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.532893180847168 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.412762483853971 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.295589208602907 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.172756779324876 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.050567471462749 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.928000796225763 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.804747094499303 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.684540284307381 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.562182188034058 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.442502646102119 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.325629093209091 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.20456566955104 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.083969593048096 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.963809391059497 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.843246829275992 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.721792630778934 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.600893020629883 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.481991631644112 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.361743931500417 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.241650592500918 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.120281555034497 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.99879197680622 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.87949096072804 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.760499485978135 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.64090176991054 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.520166641843002 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.403722909458896 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.285644241001295 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.167185191450448 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.04717361010038 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.925553103624765 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.805104299753655 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.68291966120402 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.56053655797785 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.44120035406019 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.320980835736282 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.19971876759683 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.078426790237426 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.95903415906997 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.839662441118495 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.722154125571251 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.603986167168433 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.485842007857102 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.36711057451845 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.245821244788893 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.124598920793462 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.005326513034193 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.884514102229365 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.764736512128044 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.643122318017221 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.521033349244491 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.400341332387581 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.279351677213396 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.158402907932904 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.037258376537914 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.916059433997094 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.795238229963514 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.6742212772369385 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.555716945700449 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.43425558862232 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.312684497317752 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.190590600839397 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.0693464279174805 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.947271571254099 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.825723648071289 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.70413120743496 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.582511576739225 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.461656724253009 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.340700387954712 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.2198410246782245 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.0989771462694 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.977358108796413 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.855635166168213 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.73443145189226 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.612802152280454 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.492115819381058 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.370558948051639 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.24909182028337 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.127953942999782 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.0074669329706065 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.8858462288266136 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.765600523299719 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.6441907041213093 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.5232053583825538 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.4019870369933374 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2802071240596002 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1586586743935774 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.037011657442365 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.915472832593051 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.794176569092745 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6730147158161977 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5516058825913754 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.4307515621185303 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.309142116683623 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.187615496771676 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0661951805073056 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.944527128468389 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8229517292332005 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7013851442644674 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5799387113295775 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.458476406462649 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3368998027983165 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.215340815092388 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0937149949098757 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9721082945664723 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8504777794674887 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7289245841429406 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6073688910557673 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.48592785913117076 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.36445158629247987 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24295307169056904 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12147496453481703 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  1.853 seconds)

**Estimated memory usage:**  1918 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
