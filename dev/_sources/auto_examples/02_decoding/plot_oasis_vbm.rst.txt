
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe96decfa00>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 175.86946487426758 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.958384037017822 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.262758255004883 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.449385722478233 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.968829870224 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.54016137123108 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.31853580474854 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.077111550739836 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.13702964782715 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.85022875997755 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.61885929107666 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.39541420069608 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.232352256774902 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.04603231870211 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.851332017353606 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.665499289830528 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.653143644332886 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.465443162357108 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.316959169175888 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.168496533444056 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.992361783981323 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.83804630097889 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.708258477124303 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.668578324110612 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.507542928059895 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.347248315811157 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.18154105773339 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.023513140501798 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.88622696059091 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.743636106622628 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.57859516143799 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.494035520861225 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.3365438580513 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.18072633309798 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.037337990368115 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.897145577839442 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.761953830718994 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.620320152592015 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.467836166682996 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.376178717001892 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.227402687072754 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.107387676471618 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.963861817405338 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.814464186513145 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.66958637671037 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.52338931295607 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.38287603336832 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.28574761431268 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.18168580532074 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.09184000930008 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.986366033554077 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.88970164224213 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.78021021989676 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.673766280120272 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.66441285168683 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.55026171424172 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.434345449720112 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.318197743934498 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.205973551191132 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.09051915750665 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.97518841425578 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.885638717745174 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.763351655775498 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.645783064857362 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.525677919387817 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.40544469539936 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.2929494453199 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.168656601834652 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.065275037989895 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.940593325573467 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.8118736743927 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.67135433411934 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.543240865071613 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.40955527188027 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.274126735893454 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.159576813379925 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.020573101545633 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.903868938421272 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.762473020798122 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.623195744767973 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.48158895969391 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.340117513397594 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.217055541713062 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.072256774787444 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.926322301228842 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.781976840075325 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.63833778403526 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.4945479508104 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.351068670099432 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.20858439702666 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.08048333062066 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.939039704563854 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.795524027036585 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.65344241613983 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.513277023396594 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.369618202510635 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.227260808149973 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.100484275326286 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.955264553731801 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.810812783963751 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.66622543334961 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.523015201681911 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.38215230960472 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.241251033486671 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.099789326007551 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.970084213075184 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.826358403799668 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.68444756703956 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.542223488843 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.403557917393675 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.267312721772628 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.128047305184442 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.98875275679997 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.869914407223726 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.73131899666368 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.592723525088765 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.4528394731982 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.312306283885597 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.172871363365045 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.032345022474017 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.900264263153076 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.761824103426344 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.624241129296726 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.486601015416587 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.347653573559176 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.20834174156189 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.069104232485332 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.929580294241116 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.798363670706749 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.66147508362467 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.523520451325636 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.385147158426182 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.24614558797894 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.107740965104641 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.968724492770521 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.83162032233344 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.70088779225069 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.562412408146544 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.423795323440993 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.286040837816197 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.147832053048269 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.010681581835374 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.871852189722196 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.739812254072069 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.602656112776862 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.465404946228553 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.329530689814319 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.19256068249138 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.056816848548683 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.920929651132366 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.78442104657491 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.6513634738543175 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.513577636919523 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.375801457299127 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.238570968826096 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.102139857507521 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.96492111377227 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.827824261537782 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.690626624264294 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.557973698250152 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.421730101108551 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.28632732800075 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.150744417567312 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.014646614987426 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.884408386742196 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.748373183337125 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.615071908537163 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.478702296753844 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.34277598063151 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.206841918843738 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.070374446756699 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9341688295553996 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.798487984856894 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6652263768146494 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.529309735901055 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.393052407673427 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.2571165886792266 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.120780730651597 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.9846647160776545 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8485146368016077 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7127157847086587 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.5783406054776017 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.4423491195007996 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3064729906822166 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.170555425726849 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0347932544914453 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.898909620059434 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7660563629578778 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6307933076899102 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.494659002495821 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3586868612389815 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2227182837680997 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.08676611383756 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9508664558588531 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8149632719374195 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6791097078567896 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5435881663341912 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.40772360714559025 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27185743986958205 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1359679519231595 seconds remaining)
    1967 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.977 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
