
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7feebd60c880>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 174.55816268920898 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.569716691970825 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.481042861938477 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.697707970937095 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.312108755111694 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.315316200256348 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.03313239415487 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.755323478153777 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.53304672241211 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.291703992419773 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.086287021636963 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.899467793377966 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.84414839744568 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.68798070687514 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.49577866281782 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.34758551915487 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.190569281578064 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.02595778072582 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.857695659001667 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.74617324377361 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.67802882194519 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.512559175491333 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.350545991550796 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.20238742621049 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.05949799219767 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.9075665473938 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.768792372483475 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.70637502493682 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.55916670390538 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.40454187886468 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.258467515309654 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.120291279208274 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.97817027568817 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.854495864925962 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.711461277569043 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.62708306312561 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.477116611268784 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.331253154857738 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.186460607930236 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.05106672873864 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.90068244934082 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.756028000901384 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.678432896023704 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.527933603109314 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.382718844847247 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.236494488186306 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.09207044477048 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.944422316043934 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.80453320344289 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.67488173562653 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.576196670532227 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.430604032441682 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.286140845372127 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.14366043288753 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.001978732921458 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.860585234381936 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.72184821537563 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.609595545551233 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.4709612336652 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.33377077215809 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.18777950604757 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.049318622370237 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.904794746829616 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.763872464497883 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.626373529434204 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.504346407376804 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.360289241328385 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.221052337048658 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.0809926145217 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.94119037061498 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.802290201187134 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.662770378757532 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.543208652072483 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.40004886013188 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.25801312601244 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.118209203084312 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.979498725188407 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.838325336381985 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.700155845055214 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.574227903462663 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.433194398880005 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.29429668850369 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.154036742884937 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.05621548445828 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.920660609290714 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.792514436385211 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.6544458755227 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.532049000948327 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.394310647791082 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.254451175753989 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.117466423246597 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.97685826741732 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.836169429447342 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.695422200746435 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.567316877081039 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.42689351031655 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.285843869050343 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.147164816708909 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.006270535138189 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.866428006779062 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.726109743118286 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.586016286717783 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.45701452330047 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.31696595728976 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.180584394014799 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.042935348692394 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.907069485142546 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.771561477785912 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.636486230073151 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.512250952764388 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.376045963980935 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.241176512864259 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.105936339923314 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.969373375968596 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.833751214177985 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.697640719621077 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.57031275486124 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.432970760215042 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.296440839767456 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.157749716975108 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.018041769663492 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.878027598719953 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.738042561734309 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.608223546811235 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.467569904942666 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.327359294891357 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.189146753341433 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.050002967278788 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.910266771912575 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.773349329482677 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.633882559262789 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.507253390232115 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.368477590156324 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.229315576696754 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.090060967117992 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.950992787325823 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.810995662913603 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.672013200982644 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.53782480004905 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.399346680949918 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.260223763329641 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.12173475610449 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.983283079845805 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.845109332691539 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.70756737391154 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.568992483204808 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.434517083102709 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.29588152113415 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.157840799640965 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.019746465170944 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.88152551651001 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.743052302606848 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.6045768386439265 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.469917247497958 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.331626130388928 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.193462602553829 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.055750712370261 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.917800505449818 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.780192966702618 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.642283914973901 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.5043975710868835 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.369747044877236 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.231664030640213 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.093553683509125 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.955664814972296 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.817726178602739 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.679824584937958 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.5422017203119704 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.406176930382138 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.268765964451626 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.13138332086451 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9934899569952 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.8555995087290924 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.718582118866761 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5806562955352086 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.44406601360866 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3062208457426587 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.168487018111062 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.030510698811392 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8925300843222845 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.754659334818522 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.616652545349374 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.478556347417307 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.341814322549789 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.204066048497739 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0660397426502124 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.928103441833168 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7901357584458621 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6523340864384426 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5146288304101851 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.377510484896208 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2396345126067156 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1018768548965454 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.964115010642017 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8263740564130017 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6887586116790771 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5509794098990304 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4133433496891545 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2755464833192151 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13776813439987412 seconds remaining)
    2005 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 8.034 seconds)

**Estimated memory usage:**  1906 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
