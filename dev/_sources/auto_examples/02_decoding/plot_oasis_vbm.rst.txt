
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f694d3c3040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 147.40228652954102 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 24.330944776535034 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 22.626894235610962 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 22.07171622912089 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 21.697716236114502 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 21.4626624584198 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 21.244929313659668 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.036520447049824 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.08327293395996 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 20.930374569363064 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 20.754835844039917 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 20.60104712572965 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 20.455706199010212 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 20.318480491638184 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 20.167462553296772 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.042560577392578 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 19.911917209625244 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 19.90389729948605 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 19.79274328549703 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 19.658739805221558 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 19.531052112579346 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 19.40066621417091 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 19.282994725487452 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 19.171755241311114 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.05525763829549 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 18.940980911254883 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 18.82148034756 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 18.77222384346856 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 18.66245174407959 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 18.5577041362894 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 18.437209208806358 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 18.32013529346835 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.205028235912323 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.087674458821613 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 17.98809807440814 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 17.875760180609568 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 17.81260167227851 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 17.704284732406204 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 17.597161230288055 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 17.48274454703698 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 17.36758804321289 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.249226093292236 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.130416086741857 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.029749382373897 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 16.91356535391374 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 16.819155348671806 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 16.70512540444084 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 16.588549755989238 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 16.471150716145832 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 16.355357184702036 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.2397620677948 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.12586278073928 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.02372637161842 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 15.914582639370325 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 15.800148195690578 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 15.711980646306818 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 15.599879673549108 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 15.491170092632895 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.379579387862105 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.265678361310796 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.153222322463991 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.04262926930287 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 14.931784168366462 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 14.822470055686102 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 14.733846187591553 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 14.623496807538547 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 14.515528830614956 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.40312133618255 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.29531704678255 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.182117386140686 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.0707574231284 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 13.977385856735875 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 13.866355895996094 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 13.755781532966928 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 13.662875272132254 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 13.555219968159994 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.446146588576466 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.338041512997119 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.227515471287262 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.11594436138491 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.007968068122864 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 12.896650788224774 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 12.784539112230625 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 12.685479615108076 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 12.575844231105986 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.46609707439647 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.355912768563558 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.24628905044205 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.140748197382147 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.033030309034197 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 11.922923909293281 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 11.814080901198334 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 11.715642960175225 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 11.606088271705055 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.495373269344897 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.385363879956698 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.274434487024942 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.162575502985531 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.055358186060069 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 10.945267908500902 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 10.835990905761719 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 10.724816718904098 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 10.623407887477502 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.514902830123901 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.406121253967285 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.296197913941883 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.185105323791504 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.074498339234111 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 9.964280720110294 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 9.85543486831385 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 9.747432752089068 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.646637783394203 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.540227685655866 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.432432491167456 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.32492646836398 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.21823327437691 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.108246655299746 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 8.998298060180796 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 8.887585009558727 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 8.777645071013636 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.674218495686848 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.565005938868877 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.45536500117818 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.346488194737008 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.236863374710083 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.127130794525145 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.018721149081276 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 7.909725898832787 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 7.800305038690567 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.690734671067822 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.586257127615121 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.478071132689032 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.368958003593214 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.259633220228038 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.152353525161743 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.045362463703862 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.936142416561351 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 6.828055947366422 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.719371571057085 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.613684021311698 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.504833834511893 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.395848106830678 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.287139660875562 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.17802526734092 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.069688598314921 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.961624942976853 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.8526420038040365 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.743932566675199 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.638360448785731 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.52968313870014 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.420778512954712 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.312199088911347 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.203325798636988 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.094533502666 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.986852986471994 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.878185172234812 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.769456539398584 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.660170495889749 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.553713741181771 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.444567959263639 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.3356528878211975 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.227281712597201 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.1253551053412165 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.0171400930252545 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.908183481635117 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.799326954465924 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.6908746225288116 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.5857055558415944 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.4765881583804172 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.3680332793286567 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.2591869690838986 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.1503362446500542 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.04169205177662 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.933187523329189 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.824656300161077 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.7157497746603827 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.608257488770918 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.4993533737915383 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.3905433108297625 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.281711586360825 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.173976633283827 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.065065696094576 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.956105371097942 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.8473009229357777 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.7384057874264924 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6303102003561485 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5214482122851958 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4126887193975601 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3039272338786023 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.195216834860504 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.0865238214793957 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.9777624532190293 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.8690251310666401 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7603600445189006 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6516833649468177 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5432949188428047 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.43460422632645584 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3259235045631525 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.21727361341919563 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.10863644154227559 seconds remaining)
    1961 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 57.050 seconds)

**Estimated memory usage:**  1910 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
