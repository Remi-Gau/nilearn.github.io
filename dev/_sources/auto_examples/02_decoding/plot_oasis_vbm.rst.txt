
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb89b6abb20>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 195.67489624023438 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.5181097984314 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.212456464767456 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.395137945810955 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.957683324813843 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.73535394668579 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.527159134546917 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.3061991419111 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.074934005737305 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.870391527811684 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.74985408782959 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.631436954845086 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.441858768463135 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.259852005885197 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.14158228465489 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.043352683385216 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.914925813674927 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.7646300091463 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.599346266852482 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.447562456130985 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.30310893058777 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.146627800805227 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.989052143963903 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.82695587821629 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.654124418894448 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.547099590301514 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.398713772113506 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.246423924410784 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.154896668025426 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.02762694194399 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.852373838424683 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.717251946849206 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.561366081237793 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.40164343516032 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.253800125683057 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.095032828194753 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.957124021318222 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.782851625133205 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.631564265803288 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.465506853201454 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.466017723083496 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.835617228252133 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.141252029509772 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.334339651950568 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.548958279869773 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.801855166753136 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.123016626938533 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 26.36929322810883 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 26.44313029448191 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 26.53321462748002 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 26.40867018699646 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 26.15490113052667 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.919272642869217 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.67886713315856 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.435537453050966 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 25.20199504765597 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.968678201947895 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.738555736709056 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.510143584218515 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.283253576795932 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 24.05927117665609 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.834570826077073 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.617726725916707 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.410586413883024 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.19525596499443 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.984808371617245 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.773592045812894 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.564790736383465 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.35721753625309 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.149169254994046 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.945756026676722 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.74360251090896 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.54631847805447 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.355654801407905 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.165118797405345 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.972817738850914 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.77612442719309 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.590916113419965 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.40662938509232 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.215906318229965 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.024535655975342 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.8369519651672 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.643973769211186 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.457879485854182 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.270057439804077 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.08423979142133 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.89866410854251 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.715388040432988 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.53026936270974 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.344292817490825 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.163555251227486 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.982913405030637 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.800834552101467 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.620596678026264 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.443550449736573 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.263033804140594 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.0852832198143 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.90663425946973 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.728937786452626 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.55236296461086 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.37325096130371 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.196236043873398 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.019000502193677 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.848984466015715 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.67283997168908 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.497000716981434 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.323759393871956 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.15085174658588 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.97822439229047 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.809404572215648 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.641478126699274 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.471269019015201 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.302870665277753 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.13548262562372 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.967100097422014 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.795966811802076 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.626329035594546 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.457849056292803 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.289309360213199 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.118780995617394 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.948923110961914 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.778632100948618 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.610673001555147 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.442443021913853 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.27411808506135 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.10715160369873 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.9409135258387 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.77243281912616 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.604344621300697 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.43715712636016 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.27075773019057 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.10420831469179 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.938176892020484 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.771042463474705 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.604809220157453 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.4390219229239 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.2736395667581 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.108348736797806 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.943512588307478 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.778319624688129 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.615209545407977 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.4515607052661 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.289856846903412 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.12625689273114 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.963989191585117 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.801878797596897 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.640087878867371 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.47890236426373 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.317635987256025 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.15628402505145 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.993084748586019 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.830949331750933 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.6694742001985245 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.50703760533551 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.344978524492932 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.183000526120586 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.022156281348987 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.860564660114847 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.698688558385341 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.537102958691195 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.37640768289566 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.2146042518734195 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.053717622050533 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.892420982290631 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.731021468232318 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.570165670279301 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.4091900084392135 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.248269115379471 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.087876319885254 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.927212267937745 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.7672323339125695 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.6070427894592285 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.446671075599139 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.286760166201288 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.126939206287779 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.9671834196363176 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8075146241621534 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.6480140861144847 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.488384447740705 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.329111221782322 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.169597095913357 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.010652165386558 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.852365336575351 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.693860257258181 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.5353014365486475 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.376623057030343 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.2177534667394494 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.058705449741792 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8999762738004642 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.741202227022282 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.582456450713308 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4239429403974124 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.26563361287117 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1074386161843728 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.949246917803263 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7918144495059282 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6333511167643021 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4749678560925014 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.31659083414559414 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15826072764756094 seconds remaining)
    1971 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  17.852 seconds)

**Estimated memory usage:**  1913 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
