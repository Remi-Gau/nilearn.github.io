
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6912c0b970>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 159.2254638671875 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.363221168518066 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.514751434326172 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.70944929122925 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.30296277999878 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.011770248413086 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.718303998311363 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.842002493994578 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.650880813598633 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.51711220211453 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.397248029708862 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.252881245179612 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.118334770202637 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.96231766847464 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.79952212742397 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.801177899042766 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.64161205291748 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.529376352534577 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.407474173439873 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.265145314367196 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.149388074874878 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 22.01196771576291 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.874255245382138 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.812750536462538 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.66961129506429 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.513429641723633 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.366152011431183 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.235966876701074 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 21.11373690196446 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.974995621319472 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.84552065531413 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.752259662074426 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.614514708518982 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.48602517445882 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.35997437028324 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.224147285733906 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.088416814804077 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.969915886183042 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.83459076128508 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.706949625259792 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.610163688659668 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.475202519719193 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.352764833541144 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.230750006298685 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.10695812918923 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.975654893451267 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.83816262950068 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.69936954214218 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.60576045513153 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.478744283014414 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.34687829017639 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.21643772312239 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.091374452297504 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.967432921787477 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.833176347944473 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.697693651372735 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.597899777548655 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.465447844120494 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.331992157574355 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.205461304066542 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.076636393864952 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.94815607930793 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.82091854464623 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.691720205640035 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.565336257219315 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.458976012009842 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.333363511345603 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.209335907181696 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.077516485663022 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.951475983080657 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.824463060923986 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.70433983668475 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.578706105550129 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.47583149883845 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.34616597278698 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.21935224533081 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.097080556969892 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.98558269228254 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.85892960964105 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.729188514661185 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.599920988082886 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.471335331598919 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.36144834611474 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.235218826546726 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.107808317456927 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.982142616720761 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.863757876462714 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.737842998285403 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.612603404305197 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.488969727848353 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.375954257117378 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.250672248693613 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.159613961758822 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.033984404738232 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.907810774255307 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.782060961974295 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.657076239585876 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.537051077970524 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.425159804675044 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.30372411313683 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.179098844528198 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.056133192364532 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.932620095271691 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.811890055832354 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.68925219315749 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.567098447254725 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.448297608573482 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.333857645498258 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.209687224140874 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.084875496155625 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.960876009681009 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.838557090845194 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.716196741376605 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.594075542635622 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.471520996930307 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.355904299279917 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.234594369756765 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.112123305980976 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.991497835870517 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.870638681059125 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.749679724375406 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.626414308863238 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.504881987806227 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.388463154071715 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.266803279999763 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.144038915634155 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.022161003143069 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.899292506570891 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.777394220232964 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.655196060505949 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.533099046120276 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.415689777781944 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.294692733071066 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.17298310143607 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.051121060527972 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.9295154677497015 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.808213402243221 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.685331642192645 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.562106180882108 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.440261238770519 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.321423019681657 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.199065137416758 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.076039683650917 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.953362266500513 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.830829461415608 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.7088459853468265 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.586728161328459 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.465808915443161 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.346274150384439 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.22409792714471 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.103062152862549 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.983259041577774 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.865789488742226 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.744552267922296 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.622723300735672 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.5094450366112495 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.39019128603813 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.267554611157459 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.145019271705723 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.022090355555217 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.898406267166138 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.774854214295098 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.651493879012119 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.528201114911974 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.406948438504847 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.283922390504317 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.161622932158321 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.038670114414421 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.9158134914579845 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.7927549252143273 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.669699542662677 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.5469858716105853 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.4257720071215965 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.302629064273283 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.180073820311448 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0576018946511403 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.9349469705061475 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8120542475059205 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.6893883126505305 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.566663650161061 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.444249656465318 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.32293682467213 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.200393163240873 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0779670457370947 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.955919887708581 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8334681923324998 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7111920823333084 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5887434954311759 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4662865273495937 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3444882738527166 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.222030940808748 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.099664825419481 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9773176511128743 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.855038852889303 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7327889265473356 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.610556009488228 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4884696833941401 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3663114109620225 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24427372036558212 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12214811722836902 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.999 seconds)

**Estimated memory usage:**  1853 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
