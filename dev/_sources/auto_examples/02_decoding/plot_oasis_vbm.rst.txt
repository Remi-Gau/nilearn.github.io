
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1b6ea9e6d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 151.06201171875 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.14008140563965 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.922194004058838 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.78536597887675 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.11800527572632 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.720946550369263 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.388803879419964 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.194738796779088 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.02387046813965 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.824808888965183 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.819937229156494 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.697015567259356 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.5140053431193 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.322697951243473 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.126228502818517 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.942379633585613 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.801202297210693 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.655463134541233 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.50930423206753 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.540430106614767 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.444211721420288 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.289748135067168 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.146035541187636 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.040846700253695 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.921745936075844 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.802393674850464 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.67154911848215 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.5298954822399 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.49130875723703 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.35337344531355 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.21683510144552 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.08855375166862 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.963947415351868 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.859791004296504 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.722049348494586 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.58550115994045 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.489078839619953 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.38576722789455 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.250265372426888 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.118560632069908 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.987165451049805 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.86156935808135 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.735758508954728 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.6060129099114 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.49454595825889 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.42829892370436 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.295043157494586 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.163802025165964 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.02678942680359 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.897389470314494 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.774203062057495 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.64591079599717 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.516935476889977 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.392744005851025 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.30890534542225 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.18212580680847 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.055034773690362 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.93173423566316 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.80845341189154 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.685298891390783 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.557593027750652 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.43159625178478 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.30980078635677 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.21646749405634 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.08899736404419 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.969813383542576 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.847575382752852 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.723914797626325 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.600304926142973 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.474908203318499 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.357157162257604 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.26601230258673 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.143907758924696 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.020843159662535 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.900271660572773 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.780642986297607 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.659579515457153 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.536423277545286 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.412138841091059 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.289956892592997 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.190258264541626 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.067788003403464 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.94759001964476 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.825688347759018 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.70544001034328 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.582386830273798 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.459109711092571 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.33731567996672 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.21692163294012 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.116568356417538 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.993567175335356 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.871527648234105 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.751081808753638 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.635015979889902 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.513312045564042 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.391703668393587 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.27110356092453 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.153868965266906 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.052530395741366 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.93044674757755 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.809759616851807 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.68967577490476 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.569717341778325 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.448716855743557 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.327027100783129 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.20858653386434 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.102569818496704 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.982537550346873 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.863437590775666 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.743193118944081 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.625258120623503 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.5044096676079 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.383886541639056 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.263790742485924 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.144089238685474 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.03519604517066 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.915609351519882 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.795773202537472 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.680054224143595 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.560560406757002 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.441184202829996 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.32365974118887 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.204331632520333 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.08452772124996 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.975430565495644 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.855752944946289 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.737403949101767 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.61780628820104 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.497638210654259 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.377656132675881 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.258752877895649 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.138524816236423 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.027066599239003 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.9074991609817165 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.789447343171532 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.670607867064299 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.552397784064798 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.432206933515785 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.3132713013801025 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.1957259555514765 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.076646975108555 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.964058431327766 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.845583062776377 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.726775981329538 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.608391775025262 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.489575731343236 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.370464014680418 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.251737247518942 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.1328706483583195 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.014016881085082 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.901614824930826 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.783479371607698 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.665579017839933 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.546896203670626 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.428050614022589 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.309942053210351 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.191639356124095 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.0733285982897325 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.959046677698063 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.841230435941204 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.722883403301239 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.604690658379786 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.48590306882505 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.367349030781377 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.248971404098883 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.130774642481948 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.012287343841001 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.896828284520589 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.77821295601981 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.6601804530126807 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.542261039509493 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4238004614735207 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3061959244484127 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.187716681144141 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0693108597020995 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.950862680162702 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.834901484576138 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.716458544219281 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5982956859502897 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4800323068096652 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3616510497199164 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2434869049662383 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1253501189934028 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.007284404150124 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.890376505644425 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7722518315186373 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6540427310492403 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5358100562172141 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4176452261336305 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.299559952720763 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.181350444492541 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0631792894832752 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9450644254684448 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.827576055427907 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7093316132260352 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5911033275799873 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4728816090797891 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.35463430191659684 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23641736820490675 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11819852536647164 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.661 seconds)

**Estimated memory usage:**  1886 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
