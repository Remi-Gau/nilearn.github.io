
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2d60a442e0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 247.32589721679688 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 43.91489267349243 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 42.003642082214355 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 40.53479870160421 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 39.856215953826904 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 39.88905930519104 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 39.313905477523804 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 39.28284232957023 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 38.826730728149414 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 38.45538592338562 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 38.228522539138794 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 37.94750222292814 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 37.87962786356608 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 37.55255915568425 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 37.28967302186149 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 37.10528151194255 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 36.83445692062378 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 36.72825702498941 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 36.520258055792915 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 36.69167989178708 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 36.45644545555115 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 36.36438649041312 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 36.285232197154656 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 36.56036409087803 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 36.64012416203816 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 36.35398626327515 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 36.08757624259362 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 35.948784324857925 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 35.66044167109899 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 35.40313945967576 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 35.14660755793254 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 34.88553476333618 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 34.68485802412033 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 34.416559840693616 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 34.17383635745329 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 34.00786123956953 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 33.74381489223904 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 33.548338574332156 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 33.30174968117162 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 33.049031508274574 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 32.809560775756836 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 32.553853389693465 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 32.369167123522075 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 32.12033561218617 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 31.888480749997225 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 31.641163878970676 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 31.394984027613766 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 31.218601942062378 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 30.98170757293701 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 30.74961188861302 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 30.516255140304565 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 30.290726797253477 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 30.073613038429848 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 29.88778598353548 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 29.87748189325686 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 29.654755115509033 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 29.44224296297346 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 29.248815306446005 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 29.026233730645014 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 28.806974548404497 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 28.57730237642924 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 28.349754990124314 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 28.15954246828633 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 27.931289843150545 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 27.72269731760025 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 27.50264382362366 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 27.279023459463406 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 27.0589423037287 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 26.86012109588174 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 26.63861662754114 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 26.420335190636774 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 26.19974573901002 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 25.983934190538193 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 25.792719703831086 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 25.573340158204772 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 25.364927450815838 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 25.15327433535927 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 24.93442836674777 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 24.756174711080696 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 24.54016711742063 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 24.325401306152344 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 24.11253062884013 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 23.899258119304005 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 23.70441771415343 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 23.507801918756392 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 23.43232756502488 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 23.217619907024293 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 23.005154223277653 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 22.811379302631725 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 22.599010585399157 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 22.436065091027157 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 22.21989182587508 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 22.07610825870348 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 21.86507033276302 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 21.656152502019353 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 21.44543830971969 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 21.23649001121521 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 21.026286024408243 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 20.82919583515245 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 20.617424247240777 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 20.40461754798889 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 20.195107365598773 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 19.98405506096634 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 19.786852954660805 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 19.57456948206975 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 19.362532354536512 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 19.152970080105764 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 18.941248280979764 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 18.74115668402778 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 18.529304020995394 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 18.317544286901303 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 18.10621202743805 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 17.897314616612025 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 17.701122174220803 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 17.490277219236944 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 17.34118776736052 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 17.12976052843291 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 16.918336318089413 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 16.718338679459137 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 16.507910439948073 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 16.297576109568276 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.089316789768944 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 15.878526343673958 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 15.679800568557367 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 15.472626424604847 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 15.264085149765014 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.055202158670577 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 14.85105872341967 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 14.654358252882957 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 14.44569978048635 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 14.238055284206682 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.03427866761011 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 13.83382860097018 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 13.634478992089294 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 13.429983434392444 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 13.233032544453938 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.025442796594955 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 12.820098575884408 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 12.619812616403552 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 12.414453480741102 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.208401918411255 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.002175755534612 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 11.794947493244225 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 11.596819419127243 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 11.391386760605707 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.219528897055264 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.013912785543154 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 10.807840430006689 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 10.605713000168672 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 10.404538815453549 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.1994784673055 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 9.997774394142706 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.792486793116518 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.590156729704415 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.386109169427451 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.183475694348736 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.977832225652842 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.772851992564595 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.572444094887262 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.36604979952926 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.160288155078888 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.953982172545439 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.7505259984805255 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.5488386037159545 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.343374397696518 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.137332865686128 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.939190746789955 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.733414384419333 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.5300092697143555 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.3242185059383775 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.118807049358593 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.913723156466121 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.708822832551114 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.5062999656434695 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.30160175246754 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.111389296395438 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.905749169262973 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.699929887965574 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.496183944552132 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.290632798019068 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.085379627015856 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.8807347044760347 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.675906076536074 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.472485427647992 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.2673399552055025 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.0625656231029614 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.857581518029654 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.6527209932153877 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.4490112649633526 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.2449502982790506 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.0403965523368432 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.8359791483554542 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.6318493286768594 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.4279900202479385 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.223800170052912 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0199202207418587 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8158526177308997 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6117835383729886 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4079393256794323 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2039257653394536 seconds remaining)
    1958 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.350 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
