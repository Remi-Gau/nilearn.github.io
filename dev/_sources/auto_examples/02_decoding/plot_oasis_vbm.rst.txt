
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f02e7c72fa0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 227.87094116210938 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 41.95298218727112 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 38.193527698516846 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 36.968749682108566 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 36.10613012313843 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 35.98462772369385 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 35.62098026275635 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 35.12529468536377 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 34.75126647949219 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 34.47675559255812 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 34.422401666641235 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 34.162381150505766 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 33.82284919420878 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 33.62307955668523 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 33.37111483301435 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 33.11075909932455 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.990782380104065 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.77492942529567 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 32.584447383880615 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 32.43856540479158 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 32.22711682319641 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 32.07884684063139 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.990951039574366 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 31.85839536915655 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 31.627940813700356 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 31.45233702659607 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 31.271678594442516 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 31.103528331827235 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 31.28657719067165 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 31.455200598157685 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 31.36889417966207 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 31.196254814824748 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 31.077346801757812 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 30.84941933371804 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 30.64740453046911 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 30.45029354095459 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 30.239343378278942 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 30.05053635545679 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 29.87887309726916 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 29.687540121567558 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 29.459211349487305 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 29.263491677074896 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 29.05337811651684 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 28.840698280999824 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 28.663813330910422 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 28.452331410513985 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 28.234709615292758 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 28.05661147706052 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 27.845239837964375 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 27.687789449886402 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 27.493714570999146 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 27.327481120240453 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 27.116980919471153 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 26.96356017634554 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 26.76932144165039 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 26.597074031829834 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 26.56263439995902 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 26.361307282196847 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 26.156788044962386 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 25.958350921081284 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 25.801639715830486 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 25.605468089463283 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 25.39357502229752 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 25.193432683036438 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 25.008412271738052 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 24.82822526418246 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 24.69783758394646 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 24.500709693823286 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 24.295253360972684 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 24.10056186067885 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 23.904150554112025 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 23.70176794495381 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 23.53040059407552 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 23.33912972228168 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 23.14600525675593 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 22.971855401992798 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 22.768038737146476 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 22.60019362746895 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 22.409436886127178 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 22.217384622066835 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 22.03630006313324 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 21.831827581664662 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 21.640011880455948 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 21.480232819017157 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 21.2891324815296 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 21.101937883040485 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 20.90684673952502 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 20.713750874859166 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 20.523210048675537 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 20.356274079740714 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 20.166979922188656 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 19.97711094395145 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 19.794214134630952 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 19.607026277049897 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 19.44489922422044 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 19.250477050480093 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 19.06910091638565 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 18.880900879496153 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 18.68933305934984 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 18.499680926101373 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 18.323850631713867 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 18.133519642423874 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 17.946187042722517 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 17.758255893744312 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 17.569800523611217 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 17.391477323713758 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 17.206317991580605 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 17.01701902006274 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 16.82956216953419 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 16.643692996523797 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 16.456853368065573 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 16.279595789608656 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 16.087806582450867 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 15.900953754914545 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 15.710946764862328 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 15.520511741223542 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 15.335185881318717 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 15.155067390865751 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.971041440963745 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 14.783218902700089 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 14.597513357798258 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 14.417765079451003 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 14.25036135657889 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 14.064844933951772 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.879712581634521 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 13.694860410690307 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 13.510013338119265 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 13.32595158937409 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.149084851145744 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.961562400640442 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.776503526247463 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 12.59123467853051 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 12.404670722556837 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.221133701783375 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 12.041557030891305 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.858056801336783 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.671638039981618 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.488256249114544 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.303123532861903 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.117241456354265 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.936408383505684 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.750516641224529 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 10.565787345590726 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.379901999360198 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.194854312472874 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 10.013501397494611 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.82916798330333 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.64504590650805 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.45922673070753 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.284106433791603 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.100204149881998 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.9193441441517 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.73560827656796 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.551977838566101 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.369000063314067 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.185997809133223 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.00338797080211 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.823474449716556 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.640622455862503 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.456463375931266 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.272872686386108 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.089523288774195 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.908586304864765 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.725971338939082 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.543702643092086 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.360524061954383 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.178623900356063 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.995220399902252 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.814598583039783 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.63177113279083 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.44812175806831 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.265424390982466 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.082341343857522 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.899829983022172 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.718470792660768 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.536514861243112 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.354188518090681 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.171905310140491 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.9898830103070546 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.8076616798699234 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.626145521799723 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.4441985254129652 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.2618462436801785 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.080354841680475 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.897927408633025 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.7162797193269475 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.5353967425643757 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.354358475476025 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.1727110933750233 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.9910605622347068 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.8101829478615208 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.6294158341372824 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.4480184614658356 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.266703685948268 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0855609461204294 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.9045387353652563 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7235195442121856 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5426984970944787 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.36174748401449186 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.18083518953179595 seconds remaining)
    1965 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 21.113 seconds)

**Estimated memory usage:**  1873 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
