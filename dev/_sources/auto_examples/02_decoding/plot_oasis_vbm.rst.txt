
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7faeb30101f0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 183.04109573364258 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.14873456954956 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.575260877609253 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.14736835161845 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.499542951583862 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.98861026763916 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.55360229810079 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.46779022897993 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.144250869750977 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.00342853864034 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.808274745941162 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.795692053708166 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.531241178512573 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.311161279678345 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.106574092592513 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.86876106262207 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.671406865119934 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.53184636901407 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.483230776256985 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.30857819005063 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.170883178710938 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.036083493913925 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.87721774794839 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.7255117478578 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.629387378692627 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.515097618103027 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.491868349222038 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.321920253612376 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.154696055821013 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.004287259332063 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.83617067337036 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.678103154705415 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.535770297050476 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.395083087863345 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.30354196885053 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.152662924357823 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.0122598807017 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.8730412238353 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.72827854909395 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.609109144944412 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.472204208374023 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.371031499490506 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.229997737067087 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.078292502913364 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.93573908372359 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.79791561762492 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.658789064573206 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.520213725719046 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.39109194278717 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.307794342235642 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.18265652656555 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.05335753104266 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.935115539110626 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.804699227495014 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.674758248858982 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.558473825454712 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.46618005207607 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.33235207775183 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.197333993582888 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.063583947844425 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.918821970621746 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.77141374447307 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.627579342934393 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.480050806015257 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.3677938580513 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.232177294217625 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.09308461709456 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.94779259055408 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.811322394539328 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.675016465394393 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.533781153815134 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.411094924093973 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.272332509358723 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.13097539013379 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.987458093746287 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.841583649317425 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.70584239457783 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.56473188895684 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.42763426976326 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.310589603230923 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.166050672531128 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.027482924637972 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.884324998390383 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.747194293033646 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.608987694694882 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.470464229583742 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.328890057497246 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.20691334790197 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.067677064375443 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.927119973000515 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.78395011689928 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.6476810161884 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.510215821473496 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.37120916253777 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.247100363386437 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.111135018499276 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.973131398359934 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.837933287178119 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.700123971822311 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.565232881391891 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.42923903465271 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.289853884442017 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.164682149887085 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.03044217535593 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.899884810814491 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.763103326161703 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.624615057459417 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.487249213958455 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.35193430935895 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.216306920445293 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.089045893062245 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.956675069826144 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.822752015931265 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.687305882968733 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.55447992943881 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.41926267872686 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.280956194318573 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.153517020054354 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.017534433785132 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.88656123746343 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.750908533732096 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.613278461881906 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.477221965789795 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.342425173860255 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.20687315540929 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.078622531890868 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.94158711130657 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.804644359378363 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.671398490667343 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.538751875707344 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.409517765045166 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.276090871286756 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.14731993819728 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.011183148936222 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.87639359217971 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.740289997171471 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.60514809103573 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.47061174107294 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.335856955984365 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.198847647193524 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.072245052882602 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.938781609771945 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.804603328167553 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.6721639316398775 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.53781372971005 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.404621116046248 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.2698313308088744 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.138274429606743 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.00329225772136 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.867953414084927 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.732542991638184 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.5975129035924445 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.462463429099635 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.32798846095216 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.192323693981418 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.061479783827259 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.926005968680749 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.790752837612371 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.65661366076409 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.521590484763092 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.385624587535858 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.24959010959412 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.113517263789236 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.981314002370541 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.8461078550757435 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.711659807147402 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.577097680195268 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.441906278004903 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.3069188708350765 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.172231334200977 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.039007327135872 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9042016985820744 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.769391547801883 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.634492056907257 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.499871525271186 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.3644928250993997 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.2294328429482198 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.0952278018671238 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.961543246601405 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.826627943102874 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6916426287757025 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.5572288220758597 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.42333498105898 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.28908341829894 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1541069279546323 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0207369520857528 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8867330884420743 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7522153344383853 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6174014071200755 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4823839096795943 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3475647223623175 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.212562210272744 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0776984989643097 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9433451588289724 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8084931496492367 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6737216374812982 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5389013728316949 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4040928746237973 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26935718757937654 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13466560541085862 seconds remaining)
    1989 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.198 seconds)

**Estimated memory usage:**  1925 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
