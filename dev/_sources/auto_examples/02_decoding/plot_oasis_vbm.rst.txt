
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb90c636d30>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 262.88509368896484 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.22349953651428 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.370349168777466 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.05949513117473 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.990737199783325 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.28112053871155 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.78856579462688 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.27586729185922 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.28818893432617 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.70276421970791 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.218483209609985 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.848082434047356 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.48859969774882 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.46632920778715 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.19518624033247 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.121826171875 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.83433783054352 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.833927799673646 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.67644249068366 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.32245339845357 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.947394609451294 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.645229646137786 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.46661920980974 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.16103343341662 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.885444959004715 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.55330514907837 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.22603786908663 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.06898695451242 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.926606961659026 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.68049610072168 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.403122663497925 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.28741569672861 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.985613226890564 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.797595992232814 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.5258187826942 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.29033647264753 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.113302283816864 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.00883725527171 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.715532390694875 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.466880523241485 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.30018138885498 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.158809871208376 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.13280022711981 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.90683146964672 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.715344017202206 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.446664889653526 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.20240522467572 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.923724073044795 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.68781765302022 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.50166413248802 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.27125406265259 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.994998955259135 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.75981066777156 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.50946361163877 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.30257738078082 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.05004542524164 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.81979090826852 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.54571279308252 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.363343263494556 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.11484711857165 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.890000581741337 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.655785912373027 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.43482709700061 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.232833389251947 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.992146760225296 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.731072902679447 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.47551308256207 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.277547743783067 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.043435966267307 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.812278574791506 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.572389738900323 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.32829164115476 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.11193678114149 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.868796528202214 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.638877610902526 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.399786949157715 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.200841351559287 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.980547638682577 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.739999098655506 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.488414960571482 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.26250672340393 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.02741160216155 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.796973856484016 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.557575116674585 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.316075529370988 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.08288044088027 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.87656715858814 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.647643889503918 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.400642351670697 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.16283387012696 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.95079999499851 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.735324875339046 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.491665114527166 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.250198436039753 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.008732364532793 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.785832329800257 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.54831798871358 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.30581047854473 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.065576285732035 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.84571646921562 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.6345477104187 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.401264752491866 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.164858135522582 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.927163404168436 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.70497432121864 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.466857739857264 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.23445221163192 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.01785777662402 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.784420198864407 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.5841891393749 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.357353123751555 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.126278464858597 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.897236466407776 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.69081001366134 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.457683830930478 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.229954553687055 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.994883956580328 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.770772978790806 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.55369107197907 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.319284517224094 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.087382475535073 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.85278580996616 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.621930497591613 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.41463156831943 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.182369362923406 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.963396739959716 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.730350812276207 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.52167068879435 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.287264570593834 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.05704700115115 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.82444955752446 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.592853056565495 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.371155666582512 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.1388781393381 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.910689891274295 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.681596605866043 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.4586264666389 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.230526165370524 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.007635558860889 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.779325579567779 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.550793375287736 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.331105725985047 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.099934416757504 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.870708568946466 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.64031387699975 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.411016949291886 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.188573334315052 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.965364289121563 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.73737070367143 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.508180443872542 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.284504254659016 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.058208703994751 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.83614821183054 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.606991010553697 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.378300103274258 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.155273729755033 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.926687796910604 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.705858203256206 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.480628107167497 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.251273384634054 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.032046496868134 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.803445688686017 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.577479265354297 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.349857750114488 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.126371970990808 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.898188417608088 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.670656416789595 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.44332541819818 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.2158196313040595 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.992177870146621 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.7656150004443 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.539847874501992 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.314254145289577 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.089788446536643 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.863497405216612 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.637663466589792 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.415481925010681 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.1886315291884255 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.964496100886484 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.73752498626709 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.512154473198785 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.2888151953892155 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.066055295231578 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.840063854644859 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.6130860992099927 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.3888393286112195 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.1627440503848496 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9374825316954425 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.711593059783286 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4854204175333496 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.259099245071411 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0332454037291843 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.808026353518168 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.581732626406022 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3554799827103763 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.129659530444023 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9040930611746651 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.677952137090228 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.45196599912161783 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2259009603279919 seconds remaining)
    1965 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 36.834 seconds)

**Estimated memory usage:**  1912 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
