
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1913cc54c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 237.83445358276367 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.481972217559814 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.654233932495117 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 22.644872347513836 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.109419584274292 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 21.773598432540894 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 21.512843290964764 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.311123541423253 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.115854263305664 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 20.939370844099255 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 20.990339040756226 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 20.81899952888489 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 20.66509167353312 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 20.510216878010677 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 20.37778227669852 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.233431100845337 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 20.290520548820496 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.153092187993668 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.005765146679348 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 19.984153245624743 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 19.836884021759033 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 19.705182336625597 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 19.59090924263001 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 19.47195749697478 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.335495154062905 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.212903022766113 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.084656935471756 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 18.985366980234783 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 18.926442180361068 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 18.810313841392254 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 18.683508952458702 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 18.557385444641113 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.4385586977005 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.318090294346664 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.202336816226737 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.084624767303467 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 17.961059225930107 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 17.84516031033284 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 17.772259222833735 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 17.65281643622961 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 17.53488826751709 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.41294759075816 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.297211374555314 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.195726838222768 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.075145721435547 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 16.961565494537354 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 16.845789359963458 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 16.77263580991867 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 16.663864731788635 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 16.553232300038243 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.442789554595947 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.335041406107884 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.219810394140392 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.109542135922414 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 15.994517123257673 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 15.877778551795265 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 15.789590018136161 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 15.672345445867169 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.556202625406199 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.44201729257228 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.32651178042094 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.214096573532606 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.09999072167181 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 14.982638658039152 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 14.870117515325546 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 14.756761826001682 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 14.662734494064793 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.550744999700518 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.440210693022784 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.327546966248665 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.214595420019968 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.102110520215103 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 13.988917456732855 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 13.876933842489164 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 13.765793632816623 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 13.66916020711263 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.586816699881302 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.48177637991967 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.384761645243717 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.278119410140604 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.167766213417053 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.05753717010404 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 12.946745959723868 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 12.836390078785907 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 12.738257680620466 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.624884857850917 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.511177855868672 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.397654560790665 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.284811453385787 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.17159317852406 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.05850206481086 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 11.946272810736854 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 11.834506615348486 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 11.734874135704452 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.622950071984148 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.513535599959525 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.403324504693348 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.292528963580574 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.188034286304397 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.078452998941595 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 10.968684196472168 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 10.859135712727461 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 10.760849644156064 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.650779251913423 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.541834097642166 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.431074891771589 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.32139823571691 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.21154236793518 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.101521492004395 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 9.993251820223048 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 9.885552276264539 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.783282129614204 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.672768865312849 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.562530578765193 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.452558458897105 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.341301907663759 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.230822028784916 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.119139112977901 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.010099265534999 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 8.89890792990933 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.786731084187824 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.681323845524433 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.570616362524815 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.459638925102668 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.349035824498824 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.238341045379638 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.127763835210649 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.01642651820746 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 7.906069904565811 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.796664531840834 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.691952136846688 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.580892535566374 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.4702481934518525 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.35924772391642 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.248807512112518 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.1374039385053845 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.026448530309341 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 6.916049224616837 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.805399424787881 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.699396282648869 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.589558022362845 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.478769983805663 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.368557735228203 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.258161339726481 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.1484493017196655 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.038293345221158 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.927753762023089 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.817023869274425 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.70920170320047 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.5990581736468625 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.488552649815877 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.37808867953471 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.267815514614707 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.158700849495682 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.047891242163522 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.937671030721357 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.827410043814243 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.716897417785256 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.608998147747184 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.498555009470046 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.388404309749603 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.278318541390555 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.168241736329632 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.058109624254191 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.947675280454682 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.8375659855929287 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.7274868574487154 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.6193603855407166 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.509393919081915 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.3995033114619506 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.289516042260563 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.1794455372102077 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.069426603095476 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.959461202511209 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.8496839342446165 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.739744254520961 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.6310094811699605 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.521457627668219 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.411698475312651 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.30172006244766 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.1919982168409557 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.0821808095795014 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.972562462418944 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.862872816825825 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.7530760972396187 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.643367232503118 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.534396686861592 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4248423257613565 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3151207883307274 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2054087194816145 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.095730380008095 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.9860858954684273 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.876460075378418 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7669140539021071 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6572644907174652 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5479280031644381 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.43828925307916133 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.32869286585580276 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2191043550317938 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.10953925003358467 seconds remaining)
    1980 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 56.862 seconds)

**Estimated memory usage:**  1886 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
