
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f385debc790>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 169.60382461547852 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.700310945510864 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.901857614517212 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.246929725011192 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.863922834396362 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.596351385116577 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.4671471118927 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.33524833406721 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.179479598999023 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.14476540353563 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.993143796920776 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.908872149207376 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.791007836659748 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.64046938602741 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.4761974470956 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.34633525212606 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.221906423568726 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.083032229367426 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.953717973497177 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.81795208077682 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.707756519317627 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.57688089779445 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.450975743207067 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.310106298197873 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.28643226623535 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.17552351951599 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.072190614847038 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.944838011706317 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.830546924046107 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.712543175138276 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.5951992670695 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.496730089187622 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.38744682073593 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.269469571836066 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.140390704659858 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.03316494396755 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.90820288658142 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.79205951175174 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.664419425161263 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.541982528490898 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.4166841506958 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.293859173611896 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.169216712315876 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.046090137126832 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.923611077395353 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.802238914701675 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.681747353595238 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.55979316285316 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.435763438542683 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.31118257678285 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.187848567962646 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.114716310127108 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.02141624230605 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.928096402366208 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.82860211972837 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.713273026726462 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.59525571550642 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.48510231888085 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.36644439861692 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.24443788851722 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.13272015253703 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.0131058302082 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.89391771439583 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.773303149238464 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.65366131067276 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.534785985946657 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.419102610963764 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.305340514254214 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.186836074380313 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.067537898602692 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.952234166009086 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.83972552460684 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.721265580919052 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.64549398748842 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.527038593549985 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.4114092985789 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.298166237379375 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.184803854335438 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.06977138763819 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.953454210788388 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.838652849197388 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.725028856301014 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.6113582413371 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.496420446648655 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.378890503020514 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.261446896721337 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.147350128306899 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.037956347410708 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.923028512434525 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.809435485454086 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.693294419182672 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.581691092187231 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.472615055415943 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.360488904419766 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.244066943513586 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.138404356805903 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.02658216158549 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.913746723194713 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.798406732325653 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.68326757411764 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.573388814926147 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.461094927079607 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.344348430633545 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.235019193112272 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.123150165264423 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.006487426303682 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.89109233640275 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.78068951357191 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.670715914832222 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.555475954615742 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.439134857871316 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.323184434358064 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.20719381741115 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.09042324007085 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.97248084921586 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.85365839626478 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.736032362641959 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.6187735602387 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.50095917814869 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.382084163297124 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.264266331990559 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.147194614095136 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.034230673899417 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.917632002171462 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.802632731776084 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.690098428726197 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.575086900166102 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.4597667502606 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.34279052913189 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.225877085397409 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.109351029762854 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.992519973798562 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.876386245091756 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.760763387034711 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.643759869817477 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.52908667811641 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.411847170661478 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.294719562043238 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.178072248680004 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.060438869668426 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.94364036832537 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.826296292298229 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.710119113116197 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.594176495825494 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.477241039276123 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.360251130728885 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.24709947795084 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.1302994724844595 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.014244214908497 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.897381155282859 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.780452648798624 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.664103302734577 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.54759871332269 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.431310783024707 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.3148550863389845 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.198422447327645 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.082389862109453 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.966483571726805 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.850449589234364 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.7343756837664905 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.619604706764221 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.503458297030527 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.387683173756541 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.271990483523878 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.155942137648419 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.04041922453678 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.9249301962105623 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.809573294873723 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.6942111878168014 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.5787400762004964 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4634048938751225 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3476288904223526 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2318922863450164 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.1159321724334896 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.000077316130715 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8845960072108676 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7691702625968238 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.653527972388402 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5386530361818465 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4231478701756655 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3075029850006104 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.191782246637081 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.076069698228941 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.960493197206591 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.845045525094737 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7297130984229012 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6142871841307609 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4988918125948167 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3835442827102984 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2681778549517273 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1529454306552285 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0379107909676917 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9225675960381825 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8071248654874494 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6917198417113 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5764329311175224 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.461089192604532 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3457907202280113 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23048612084051578 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11522599800148202 seconds remaining)
    1945 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  59.283 seconds)

**Estimated memory usage:**  1868 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
