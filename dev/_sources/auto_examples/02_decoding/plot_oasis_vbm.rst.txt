
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f367ea1b490>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 149.50037002563477 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.419965744018555 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.71393394470215 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.75503452618917 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.216185569763184 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.79430341720581 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.440320253372192 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.15798623221261 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.938169479370117 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.759721808963352 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.698474884033203 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.553475163199685 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.39667272567749 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.267563086289627 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.116983345576696 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.974027315775555 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 20.82516050338745 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.69336990749135 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.555049896240234 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.483667135238647 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.344602584838867 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.22113823890686 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.0860991044478 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 19.95268806167271 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.81798267364502 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.69237995147705 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.574079036712646 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.454344820093226 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.386648552758356 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.265721263556642 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.148054122924805 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.02919913107349 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.907131671905518 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.785798051140524 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.663431967006012 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.55888867378235 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.436226579878063 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.356256381885427 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.602441423817687 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.65685130388309 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.538933753967285 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.400920327116804 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.265493506476993 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.13334085774976 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.00591392950578 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.904178539911907 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.77719897809236 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.653744301897415 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.52645913759867 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.398301820365752 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.2708740234375 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.147317231870165 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.02847614655128 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.908684037766367 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.808298737914473 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.684476895765822 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.56972782952445 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.45362591325191 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.33431033430428 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.21322249153913 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.0948916276296 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.972838878631592 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.851721732847151 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.764610551652453 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.64563563466072 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.533313824580267 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.416101426789254 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.34569225382449 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.228782162946812 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.11070710679759 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.993524483272008 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.879690993000084 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.782513936360676 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.664738259903373 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.545822581729373 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.424374103546143 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.304458291907059 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.184515931389548 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.06531323530735 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.948209964776341 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.829439997673035 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.719643816535857 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.59973434704106 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.481358505157102 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.363445633933658 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.242706116508035 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.12421355136605 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.005396703193929 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.885361974889582 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.76516281888726 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.657216125064426 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.541826646406571 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.51428818702698 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.390628391696561 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.270335420649102 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.150080982007479 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.028842171033222 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.906308702586852 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.79438049939214 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.675331541986175 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.554921388626099 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.433176031207093 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.311750790652107 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.1914509199198 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.070109000572792 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.949716760998681 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.828919667118 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.716722688942312 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.59702205657959 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.476842554337388 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.356507994911889 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.237212047920572 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.119173220225743 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.000036233294326 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.882101205357333 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.763313562973686 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.650780710680731 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.53296720675933 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.415004689814682 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.296475624837795 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.178452332814533 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.059972839907182 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.94164451223905 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.82307502506225 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.704669283282373 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.591742467880248 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.474110834182255 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.356320234734243 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.240625992417336 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.12293739466704 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.005216341752272 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.887784868706274 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.770370613444935 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.6531081737432265 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.536402855346451 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.424512324509797 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.308676775764017 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.1921526881030005 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.075042365253835 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.95870423831528 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.8425633907318115 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.726548651431469 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.610898884249405 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.494701959036447 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.382471124331157 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.266596210413965 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.151328390591765 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.064348989603471 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.9483634910068 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.832483616451289 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.716542482376099 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.600611566707788 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.487990956557424 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.372462688707838 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.257094971545331 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.141422702420143 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.025781417504335 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.910615924057687 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.795476807823664 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.68040646247144 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.565313994884491 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.452767643128864 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.338120902026141 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.222865460109126 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.107743181833407 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.9927682876586914 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.8778272278337593 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.7630721637588778 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.6482920419602163 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.5334703047600016 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4205601495854996 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.306061290160954 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.191360845122227 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.076688595589875 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.963343055768945 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.849050215312413 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7345238598910244 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6200612089728232 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5056438178158875 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.3924797140686205 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.2781423727671304 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1637731217547675 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0494284420223026 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9351572143575535 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8210135750148606 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7069691838444891 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5928218005805888 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4787323156142618 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3653305997239782 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2514026089320107 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1374378455312628 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0234834161728465 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9095712701479594 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7957424512181257 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6820073545593577 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5682434607774783 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.45450940910650756 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.34082456167579306 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2272724960789536 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11362027043673262 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.177 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
