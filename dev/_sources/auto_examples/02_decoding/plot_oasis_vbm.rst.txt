
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f279e4d6190>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 300.3525733947754 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.267528772354126 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.783732891082764 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 45.59846838315328 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.510820150375366 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.98608708381653 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.766793966293335 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.39914757864816 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.52883338928223 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.104800356758965 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.6593918800354 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.37709550424056 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.33347956339518 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.09101192767804 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.8613886492593 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 41.55910936991374 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.25124728679657 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.14027568873237 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.828568908903335 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 40.61610125240527 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.35511350631714 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.10593759445917 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.94728376648643 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.66750890275706 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.43498643239339 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.173962354660034 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.256026616463295 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.002302196290756 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.790385723114014 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.52856053977177 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.25735640525818 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.10606327364521 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.89878171682358 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.66259474465341 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.38925667370067 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.259862184524536 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.98950746324327 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.70570662214949 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.45304497919585 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.20240025642591 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.072526931762695 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.81362474836954 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.60599593889145 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.36148443332938 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.20765887607227 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.977528439627754 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.747213695360266 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.5025664441129 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.24931518236796 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.06408417468168 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.829808950424194 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.58024568651236 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.41730352548453 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.20408719890523 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.995471406866 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.73713098872791 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.50440543038505 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.25087211006566 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.050756002294605 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.800436250234053 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.5582389831543 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.30878810022698 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.095360494429062 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.917218889508927 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.676894396543503 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.434930783051712 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.20580101735664 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.000262288904903 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.767640422372256 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.529638176378995 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.289759193147933 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.045849360210795 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.84872055053711 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.615868071987205 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.37416387893058 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.135001262029014 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.904367133190757 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.71005202887894 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.499639987945557 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.292021033130112 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.13718068599701 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.954104447070463 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.734776415475984 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.505232046885663 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.288796288626536 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.073844390756946 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.834384552268094 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.59184133595434 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.353085127743807 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.11729001731015 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.90925619337294 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.66841445126376 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.489518134490307 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.267391609889206 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.05171340577146 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.821236133575443 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.59377259016037 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.362385005066077 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.12869620323181 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.909662251520636 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.674118757247925 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.452160544914776 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.230076551437378 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.01070342712032 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.777663230895996 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.543063844953263 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.313175237403726 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.08266116302704 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.863429926059865 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.63586644076426 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.40946795723655 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.17733160654704 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.964219842638286 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.732558256756942 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.50059707959493 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.265435353569362 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.026926032428083 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.80865404340956 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.573579052747306 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.34253832272121 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.108733495076496 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.881546024448618 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.670729019602792 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.440817121567765 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.212664373459354 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.982432985305785 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.762635775974818 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.53266228277852 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.30615308880806 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.073424110116886 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.841471488659197 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.62030003453029 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.39419038367994 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.166477205161762 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.936445940786333 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.708962034296105 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.491557177375345 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.262351808756808 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.035525460174117 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.806578591573153 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.584658077784946 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.358490989563313 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.13002708596243 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.902240748172039 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.67241444852617 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.449343237383612 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.219254219368711 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.988115180917339 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.757938848959434 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.535953780948716 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.305490016937256 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.077198972765183 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.84689157887509 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.61770158343845 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.393551637599995 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.164018008016772 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.935698124078604 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.709134337249075 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.493947880177558 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.274761008016718 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.045566320419312 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.817537617239154 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.58853581805288 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.366029538991262 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.138295319022202 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.909898692911321 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.682884178965924 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.455920326495599 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.2317401341029575 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.005058898022894 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.779239696614883 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.551776745165998 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.328155905701394 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.1017777161791145 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.8744536816388715 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.6482820851462225 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.421130397103049 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.197648595281914 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.971274266082249 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.744860269503887 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.517931275897555 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.290558226200757 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.065117830758566 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8390979506278953 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.612220701964005 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.3855652744705615 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.16232265451903 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9362328269264917 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7105629241212883 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.484177719348322 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.2580050292767977 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.033033141290954 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8067298233509064 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5806821257339239 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.354668329671486 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1291966682825332 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9032467482041339 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6773322935636878 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4514930465004661 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2256991324113242 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 36.541 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
