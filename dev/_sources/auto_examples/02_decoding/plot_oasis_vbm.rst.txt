
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa1b8dc1310>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 171.53263092041016 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.11065864562988 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.004580974578857 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.761345545450848 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.256534099578857 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.206502437591553 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.703404982884727 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.323040655681066 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.515546798706055 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.144218100441826 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.691394329071045 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.23972862417048 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.836179176966347 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.512258199545055 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.324628046580724 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.1259347597758 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.068517208099365 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.87743973731995 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.712461365593803 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.548874114689077 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.48889923095703 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.350969734646025 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.20035587657582 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.164052216903023 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.991867065429688 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.833168506622314 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.742305773955128 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.59209746784634 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.411488601139617 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.241995383953224 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.207173585891724 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.0227004789537 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.820948243141174 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.60838464534644 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.39775114900926 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.20559436934335 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.068233675426907 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.957104135204006 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.8099891637501 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.657221268384887 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.50303077697754 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.339844697859228 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.183796598797752 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.0377779616866 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.923848368904807 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.79460268550449 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.616150037102077 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.44406594621374 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.276477297147114 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.10952943198535 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.941880464553833 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.78469352161183 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.67372646698585 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.524507405622952 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.358353782583166 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.194844245910645 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.037907464163645 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.887179353780912 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.74598004900176 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.58275095487045 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.438045024871826 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.26989098455085 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.11013412475586 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.9456999756041 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.78451293706894 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.623512249726517 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.47424807693019 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.3291534452296 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.202672509586108 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.052071909973588 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.907052210399083 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.757144504869487 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.610045115152992 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.474690306676578 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.343772134265382 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.21860488255819 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.066933970702323 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.918936525072372 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.77359621341412 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.632964116108568 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.4931503534317 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.362782036816633 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.234969993916952 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.11860645822732 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.976851486024403 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.835945732453292 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.696306117745332 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.564935656799667 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.430670261383057 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.288020900126252 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.153121021058826 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.005162789271427 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.859628635904064 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.71150112921192 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.569215531044817 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.432786765851475 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.29764292637507 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.167426207630905 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.030524214919733 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.893685420354206 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.756727695465088 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.622100336716906 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.493087137446684 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.358046436772764 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.219409795907827 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.09449807802836 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.957060107644999 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.820813767263822 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.696033345328438 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.585015261938812 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.449690060182052 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.307239313383361 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.183275256838117 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.051578876191536 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.911185101458901 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.770410009052442 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.627131708737078 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.488413234042307 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.35341760667704 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.22619581422886 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.092386086781818 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.957512051605981 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.82267194888631 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.688411551762401 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.559079193299816 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.426072597503662 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.293984810511272 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.156872287509948 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.02004650235176 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.883202615634415 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.752163355167095 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.615527946530408 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.474838105115023 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.340677729226593 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.196485117300233 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.06732079717848 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.928028667674345 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.786183256302436 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.644588411718175 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.507051380418186 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.37577772140503 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.23801405717295 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.101707475286135 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.968348161323921 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.835855616463555 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.697160243988037 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.559535300894959 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.427972373508272 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.299244861345033 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.160642211069197 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.021306117375691 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.889378298197361 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.750401220823589 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.612195094426474 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.4703876817381225 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.329489707946777 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.190190590344942 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.0495409115104914 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.909715902956226 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.770453438069086 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.636121332645416 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.497870969476167 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.356699178248276 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.216285089773634 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.076426709570536 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.9399762659361866 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.800949510321559 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.662929779041313 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.522805123102097 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.384549276363215 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.242165958180148 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.100132946382489 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9578736382861472 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8172317943131993 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6779626923045896 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5371765749795094 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.396329283714294 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.258193150752008 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1171079753489974 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.975536903189547 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8344597816467285 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.696920109058612 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5562459950918677 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.414061134630214 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.27259171527365 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.132504089458569 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9899448194811422 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8474363107732272 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7059517870558067 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.563938191328099 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4219680836326196 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2799891813887352 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1383176743984222 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9967723226300175 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8548597871642752 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7124692232180864 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.570356427406778 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42820706827386384 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28545932336287066 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14276913781860964 seconds remaining)
    2003 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  9.467 seconds)

**Estimated memory usage:**  1916 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
