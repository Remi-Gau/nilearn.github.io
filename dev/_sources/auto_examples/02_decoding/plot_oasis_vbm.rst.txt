
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb7aea44370>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 192.108154296875 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.83636832237244 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.55861759185791 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.81916371981303 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.48635244369507 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.603540897369385 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.21622967720032 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.948927198137557 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.668485641479492 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.402929306030273 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.303608417510986 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.075063315304845 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.03047235806783 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.84933715600234 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.685700552804132 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.496399879455566 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.28368902206421 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.09574724646176 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.902773989571465 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.822416606702305 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.636803150177002 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.70201755705334 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.510542544451628 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.314116550528485 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.134897708892822 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.022661685943604 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.81827394778912 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.64338148964776 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.4618205342974 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.28666518474447 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.147003332773846 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.997260978144983 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.896165192127228 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.72112209146673 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.546784457038434 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.384902000427246 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.224474562538994 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.065023203153867 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.90883147089105 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.798925833824356 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.627177238464355 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.472368298507316 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.318460543950398 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.176432509754978 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.01317583430897 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.85537197854784 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.720803882764734 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.566302061080933 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.406739075978596 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.243012691030696 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.08520531654358 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.93080785695244 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.773860949736378 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.64006040231237 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.487756066852146 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.333883242173627 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.173494066510884 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.01666038078174 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.865297457267495 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.713619519088226 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.5901046593984 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.435891362487293 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.286899674323294 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.133362024549452 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.98524647951126 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.83619935695942 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.68843764247316 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.55999745539765 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.409010508481195 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.25563233140586 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.10532774244036 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.964696410676122 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.82119920518663 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.676432818582615 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.54358755575644 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.396116892496746 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.246620090384233 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.09488505512089 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.953208403709606 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.81007112128825 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.667083144187927 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.538575031139235 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.394938922509915 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.256279100854712 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.11639934494382 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.977610812467688 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.836399211439975 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.712164623983977 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.56743678179654 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.430412938085833 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.284873008728027 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.141820388835864 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.997814935186636 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.84944356641462 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.709769659853995 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.562038509469284 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.40969258546829 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.258145853416208 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.107595000948226 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.95847073468295 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.809685945510864 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.672733122759526 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.522599201576384 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.376141659264427 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.22674164405236 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.079272111256918 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.93169658139067 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.782134731239248 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.643074265232793 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.49800288130384 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.359814687208697 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.218284905493796 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.069611753736224 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.921585572504364 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.782100501813387 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.637606040291164 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.491486697361387 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.346144757719122 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.20026339514781 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.055717917049632 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.907432715098063 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.785738391324509 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.636453542553012 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.487991897071279 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.33877411965401 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.188730764389037 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.039222388040452 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.89043815492645 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.745317831635475 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.594574920890867 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.44331042583172 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.293750591860473 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.143523613611857 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.991431368921036 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.84767840869391 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.697214444478352 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.54648421792423 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.396474065571805 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.247475783030191 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.097819120763875 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.948003462382724 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.804204364194938 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.656322197175362 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.507533325181974 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.359133985307482 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.209672755208508 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.060719444327159 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.911375636146182 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.766296438268713 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.617329187841223 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.469544808069864 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.321467394860375 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.172368375878585 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.022831896551295 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.874200929294933 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.728403406758463 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.578056561641204 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.427986725120787 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.278345771982699 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.13177735250701 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.982324481010437 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.835290131361589 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.686251525525694 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.536670039767868 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.387558716099437 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.2374428691286035 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.087361085845763 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.936923496737451 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.78886181967599 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.638497087377063 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.489086249295403 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.339298546662804 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.189076146414114 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.039370571257751 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.889765451694357 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.741519859858921 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.591832345182245 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4421515289673024 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2924883954980397 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.142686886494386 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9932994842529297 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.845008952841574 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.695131744657244 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5452462532481213 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3953299107758896 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.245498837651433 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0958605761169107 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9461875012851655 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7970514145303278 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6472257646934065 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4976613521575928 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3478390708643728 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1980156699816384 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0482977190165939 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8985282367037744 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7490293979644775 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5991907217064681 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4493661991835851 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2995630635155572 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14976796792380176 seconds remaining)
    1968 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.088 seconds)

**Estimated memory usage:**  1934 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
