
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa3abbfc970>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 191.30706787109375 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.781867265701294 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.89332127571106 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.83506019910177 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.00806999206543 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.622565269470215 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.162807226181034 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.881502389907837 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.03298568725586 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.756040679083927 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.5439133644104 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.416958353736188 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.23408317565918 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.087530356187088 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.91611845152719 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.84479570388794 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.629396080970764 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.41036493637983 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.26388131247626 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.080900832226405 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.854647874832153 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.657068593161448 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.679279977625068 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.521263941474583 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.353804747263588 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.186590671539307 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.997898486944347 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.809932982480085 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.631559950964792 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.661081733374758 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.535994370778404 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.355341257587554 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.172116935253143 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.000519933122575 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.81187560979058 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.612633602959768 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.49360214339362 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.329958567748196 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.17644975059911 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.008273852177158 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.847734451293945 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.677366663769977 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.575358311335247 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.461137278135432 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.30302574417808 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.136546055475872 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.975060587343965 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.808533338790244 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.643014629681904 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.506706091822412 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.369100332260132 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.206688011393826 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.04664101967445 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.911910875788276 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.76609166463216 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.631690285422586 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.537039143698557 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.392818501121116 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.24978024384071 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.188849081427364 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.050578594207764 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.90326626965257 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.75360535806225 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.63610171893286 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.481905668973923 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.342351014797504 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.194009867581453 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.035232661375357 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.873442888259888 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.74044060016024 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.58644563811166 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.42539395077128 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.263972812228733 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.107432182521038 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.946902771253843 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.788224458694458 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.666730554480303 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.52802970811918 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.389781407820873 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.2271035260792 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.075589299201965 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.92010338218124 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.758765441615406 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.629775995231537 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.479200011207944 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.318928550271426 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.15850921009862 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.99928424550199 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.84109033237804 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.6831063286642 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.55924579832289 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.399024769500063 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.2382593465888 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.08951242508427 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.930816320662803 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.771537893696836 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.61804840962092 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.479822411979598 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.322798081806729 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.17212165004075 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.014963626861572 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.861966102430136 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.720093872032914 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.577486797443871 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.44132452744704 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.293142409551711 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.145454735126135 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.994271420986852 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.847727095639264 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.698141555173681 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.56666059927507 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.41199661804749 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.262112600462777 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.10635773270531 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.949796944333796 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.793947582659513 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.638831352365427 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.49540278239128 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.34007587675321 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.184140461833538 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.028709411621094 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.872636077817807 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.716120368144551 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.560983475630845 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.417970557366647 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.263421201705933 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.108469384057182 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.953899004327969 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.798389360308647 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.64259964735933 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.487524619469275 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.333641720182113 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.18996237263535 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.038446826146062 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.885317674323694 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.731727299866852 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.57605541453642 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.421928111654129 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.268524532732757 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.122432952304537 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.969516107014247 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.815909750918124 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.662715438386085 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.510277241260022 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.358034345838758 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.204703643404203 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.058701747084317 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.910421475261248 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.7604162113086606 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.610495226495218 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.4613408247629796 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.312318751354091 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.162551528529116 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.019697677076253 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.86911112611944 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.719445520831693 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.5692572532556 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.419796357488936 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.270352589933178 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.121945814516559 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.985165238380432 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.834714328280147 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.684005731417809 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.533420918177973 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.3854358196258545 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.234939271753484 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.088076436375997 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.937667405533934 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.787368729001 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.637058427347939 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.4869526835048905 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.336738778833757 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.1865537332934 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.039143665677551 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8887108578079053 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7384322370801653 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.5876491069793697 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.43727376501439 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.286941970332285 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.136808802961637 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9883629216088186 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8380775741450694 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.6879243012313 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.538295115278067 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.388592533443285 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.238667449435672 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.089361062613867 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9405003078481093 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7907425393449499 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6409694517731035 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4913339740351625 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.341945996459242 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1925557255744934 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0432253390396196 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8946247838207128 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.74540053269802 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5961674086901606 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4470459240947278 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.29799716882031374 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14897304204241116 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 17.566 seconds)

**Estimated memory usage:**  1896 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
