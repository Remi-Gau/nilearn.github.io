
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f46aa449c10>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 212.14962005615234 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.456543922424316 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.658204555511475 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.19081576665243 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 34.38009762763977 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.818899154663086 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 33.76545588175456 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 33.38237949780056 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 33.01530647277832 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.71232705646091 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.71930241584778 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.465088844299316 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 32.265611728032425 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.017555255156296 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.783054896763396 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.549435218175255 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 31.512761116027832 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 31.310265583150528 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 31.104723374048866 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.89740598829169 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.683823108673096 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.481189387185232 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 30.405720407312568 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 30.206643539926283 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 30.032049338022865 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.840299129486084 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.666194824072033 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 29.479765468173557 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 29.39692143031529 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 29.213690659095498 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 29.052473624547325 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.887183174010243 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.70191526412964 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 28.514657027793653 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 28.400782823562626 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 28.21639323234558 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 28.036032782660588 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.87699607900671 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.70951803107011 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.5585140815148 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 27.449339866638184 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 27.276474132770446 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 27.11950457663763 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.94673175035521 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.768054853786122 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.63590709368388 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.461594280989274 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 26.289109833697054 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 26.13084061940511 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.979854058246225 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.80446720123291 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.676298033957387 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.503313046235306 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.326981324069905 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.149589618047077 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.975287350741297 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.79918159757342 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.65131434223108 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.481200103102058 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.306066428200673 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 24.127118746439617 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.952366789833444 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.77482999524762 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.634316330864316 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.466587245464325 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 23.28957251402048 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 23.11435085354429 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.94291152527083 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.774682311450732 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.627776221952576 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 22.454076392310007 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 22.275951993297525 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 22.09662373860677 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.927322844936423 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.748656537081743 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.597005923589073 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 21.427168657905177 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 21.249087401798793 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 21.069698902276848 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.890499818174145 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.709919452667236 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.554468057773732 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 20.371689936009847 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 20.19056718607983 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.00973167873564 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.829889241386862 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.652203144029126 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.495133347894956 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 19.31940018046986 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 19.14215918605247 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.966268301010132 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.789107223133463 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.612529029016912 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.45333188836293 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 18.276132796673064 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 18.10075227837814 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.92510014772415 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.750151619468767 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.578753841166595 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.41832789507779 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.24386477470398 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.068266979538567 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.891844375460757 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.715868084176073 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.53901841090276 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.377593596776325 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.2019885980858 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.027188437007297 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.855269855923122 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.679399098825018 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.504236308011142 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.34162602338705 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.167528527123586 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.99227805475218 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.81756599744161 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.641754813816236 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.466900735065854 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.301535139735948 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.126495632074647 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.951269342117952 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.776020050048828 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.601883647855649 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.43110655565731 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.264886677749757 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.090175967062674 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.915525197982788 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.742020943808178 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.56872470735565 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.395576298236847 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.22923174200132 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.056238504556509 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.882040924698341 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.707406694238836 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.533343218322983 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.362681015213923 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.193940613004896 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.019129697014304 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.845117534164094 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.671954645626787 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.498712098855766 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.331045866012573 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.15725931715458 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.984853905691228 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.812629542984329 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.640332182248434 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.467049039643387 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.299008663386514 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.126265796674353 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.953003155218589 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.779713277048712 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.606887102127075 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.43420368472472 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.265803387290553 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.09313943027671 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.920016112265649 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.747007131576539 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.573796229484754 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.400917615100836 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.231488034695009 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.05914018439047 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.887018084526062 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.714387234693729 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.541367566144024 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.368842783149766 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.199526554200707 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.026693445263487 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.854942654988852 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.683069955802964 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.511044683910551 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.339072391126282 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.169460142360014 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.997594509905541 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.825469061385754 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.653586339399305 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.481504130637509 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.309554713112967 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.1396234685724425 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.967378279583602 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.796223833319846 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.624024392506264 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.452359384960598 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.2799382749842017 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.108990016874376 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.9363572923212105 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.7637411407802417 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.5911009569425842 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.4185081297351467 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2466677828906056 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.073929375790535 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.901282681359185 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7287187199843557 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5560098118807009 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3830001850922902 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.2106862821727218 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.037710462648844 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8648716058486547 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6919259879053855 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.518965008295127 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.34599607881873545 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17308442916103345 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.179 seconds)

**Estimated memory usage:**  1879 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
