
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9638c1cdc0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 162.06741333007812 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.158589601516724 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.136317491531372 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.36654822031657 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.103098392486572 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.31510019302368 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.99978558222453 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.748138904571533 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.575332641601562 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.405888292524548 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.22636914253235 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.047152692621406 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.874424616495766 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.902591888721172 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.757450580596924 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.618702491124473 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.584670066833496 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.442538626053757 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.275945239596897 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.104527009160897 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.949273824691772 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.8320377327147 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.87235901572488 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.720600221468057 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.599954922993977 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.4704647064209 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.320710163850052 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.16132767112167 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 21.007491043635778 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.866842368553424 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.811398824055992 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.67162219170601 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.53305047750473 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.40913704669837 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.27455684717964 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.129807710647583 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.993885570102268 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.861806418444658 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.724357391658582 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.657831088090557 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.529380798339844 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.407548695075803 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.282492989585513 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.141184612762096 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.004525249654595 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.87345001432631 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.73983435008837 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.671401749265954 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.547656257947285 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.427615224098673 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.314281940460205 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.18001619039797 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.05106229048509 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.93554495865444 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.816061867607964 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.737017501484264 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.616393225533624 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.5008934924477 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.38090392638897 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.261528795048342 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.138760089874268 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.02216625604473 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.888226532167003 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.78813514255342 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.66133937239647 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.533819051889274 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.406544967131182 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.274906774065386 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.14816250520594 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.018364944319796 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.89714230809893 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.78297902160967 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.679598490397135 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.555486012811532 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.428277060792253 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.300836165746054 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.171102348126864 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.044432085829895 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.919344192896133 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.792992594875866 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.689247846603394 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.564761603320088 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.440388929553148 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.313808714050845 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.184477227074758 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.056003851049088 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.934354033581045 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.8095341057613 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.68514026295055 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.580762458651252 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.460209210713705 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.332663491532042 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.205734429152116 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.077218332598287 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.952301973992205 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.824797605213368 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.697801351547241 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.593837504534378 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.471610993755107 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.350116833291871 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.224757671356201 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.098713796917755 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.977382893655815 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.855144884979842 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.732257329500639 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.616873139426822 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.498544481565368 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.37533386845455 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.24934055187084 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.122968258114035 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.999065204100177 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.875031267200505 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.751426185880389 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.627953048300954 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.516496516110605 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.394841525865637 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.269660892157718 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.144169397843191 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.01895792201414 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.89716187845759 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.776872634887695 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.65405936280558 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.544168323766991 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.421137520937416 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.298606180375621 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.174669027328491 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.049704487361605 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.926168567552342 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.80191095173359 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.67908120340155 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.55544691819411 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.44108755351933 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.317071950796878 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.194123248408612 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.073293497313314 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.950839166288022 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.827412436990177 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.704807690460316 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.5811406218487285 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.465978286249174 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.342361416135515 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.218285930917618 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.094457878193385 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.972050413385138 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.849885397487217 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.727193725520166 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.604084272907205 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.486852460977983 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.3650608707118685 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.241576295571039 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.117386182149251 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.993899332766501 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.872076887833444 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.750272727480122 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.627749721725266 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.508702739592522 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.386891579016661 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.26353804776623 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.13979795009275 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.01707262363074 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.894306302070618 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.771732345130873 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.648987081315782 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.5325622309936335 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.412689988206073 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.289302717555653 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.165840711938329 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.0431390322611005 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.9197370892479304 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.79769572703796 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.674603798810174 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.551798476113213 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.431541575941929 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.308615382696163 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.185789154863906 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.063214097704206 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.9404946890744292 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.817907880255058 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.695625072114923 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5732561662876408 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.452268944846259 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.3298334653864905 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.2071572109893127 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.084421599497561 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9626172729160474 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8397152939358274 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7167134233700332 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5939656068934476 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4711717696900062 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.34922339298107 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2264347954800254 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1035967247648388 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9808557530244191 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8581039337296559 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.73555175299497 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6129231147277049 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4903702006048085 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.368030014376955 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2453160406363131 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1226408337827903 seconds remaining)
    1993 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.978 seconds)

**Estimated memory usage:**  1886 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
