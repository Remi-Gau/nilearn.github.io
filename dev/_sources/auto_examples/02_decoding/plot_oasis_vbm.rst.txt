
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f56c44c09d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 245.5306053161621 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 47.08699035644531 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 43.46537947654724 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 42.82671864827474 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 41.66860556602478 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 40.93693399429321 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 40.69305268923442 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 40.55298188754491 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 40.393890380859375 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 40.04139677683512 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 39.93219709396362 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 39.507255727594554 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 39.398945331573486 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 39.31676231897794 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 39.099842344011584 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 38.917188564936325 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 38.628727197647095 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 38.46718795159284 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 38.384812858369614 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 38.15948699650012 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 37.90244150161743 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 37.64575711886088 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 37.429661772467874 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 37.29773174161497 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 37.03415997823079 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 36.797701358795166 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 36.560021473811226 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 36.35593837278861 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 36.25669939177377 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 36.012841454867655 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 35.77007269859314 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 35.57373216075282 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 35.32916182279587 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 35.19175495523395 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 34.99667786149418 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 34.833536522729055 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 34.5937000380622 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 34.47198976052774 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 34.25873384977642 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 34.043927700091636 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 33.80695819854736 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 33.556300721517424 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 33.42990522157578 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 33.22368769867475 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 32.99645389210094 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 32.74606551064385 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 32.50507909318675 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 32.32852555335836 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 32.10262934366862 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 31.874161705678823 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 31.647372007369995 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 31.437131596546546 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 31.254979848861694 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 31.029383263497984 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 30.834427586308234 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 30.603660323403098 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 30.36928428922381 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 30.18870219013147 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 29.988757265025168 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 29.753879955259418 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 29.577360312143963 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 29.377427159762775 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 29.22472911496316 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 29.008675253580485 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 28.774877578020096 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 28.552826202832737 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 28.365205259034127 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 28.134571733759408 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 27.905395241344674 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 27.679884454478387 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 27.454245124544418 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 27.244429047678558 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 27.03677495320638 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 26.889373622528495 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 26.663482111853522 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 26.446770429611206 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 26.24769271047492 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.022135369189375 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 25.802413750917484 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 25.59464655344999 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 25.3764306306839 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 25.186099638173612 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 24.961031559037 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 24.747214845864168 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 24.53817157518296 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 24.32116033049191 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.1243912397429 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 23.9110507718448 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 23.69285384091464 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 23.48509162999271 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.28005705939399 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.085354278375814 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 22.870716177898906 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 22.658213074489307 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 22.44447997275819 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.226701535676657 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.034041921297707 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 21.81796508966033 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 21.60422892473182 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.39192839583965 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.194263219833374 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 20.976108949963407 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 20.75746725587284 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 20.545949093346458 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.324824993426983 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.128447748365858 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 19.910021345570403 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 19.696737541216557 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 19.483769805343062 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.26636759513015 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.060697013681587 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 18.84300874160217 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 18.629117710249766 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.41673792568983 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.207073061089766 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 17.999542599139005 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 17.780145678026923 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 17.56818355454339 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.352397090297636 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.136382305321575 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 16.936798731486 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 16.720179171601604 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.501246116200434 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.28497068474932 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.075723471180087 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 15.870461797714233 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 15.661008286097694 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.448847398983212 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.234491229057312 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.024953731270722 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 14.816160458784836 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.603437365466402 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.394592039512865 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.1818191879674 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 13.968988991495388 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 13.765079462969744 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.553454567404355 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.344045059524314 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.13981619088546 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 12.9373031297176 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 12.725410529545375 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.511623304786411 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.296609650195485 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.0834453756159 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 11.875622828801474 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.659982549733128 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.449245978708136 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.234432781634688 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.020396161723783 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 10.81206865118654 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.602505683898926 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.386326565647757 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.172753258755332 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.958307624642366 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 9.751005897274265 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.536830394498764 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.323130301940136 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.112891467513553 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.89912454086014 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.693177062760359 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.479864180088043 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.268724973157326 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.055946615007189 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.843055612470475 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.636953609745677 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.424460093180339 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.211579957640314 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.9987783360624025 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.7886179969424285 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.576882430082242 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.3636992959415215 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.150271654129028 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.937729785608691 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.729353062679313 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.516046946076141 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.303259406770978 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.091344865885647 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.878638978731834 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.66773430149207 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.45484236898369 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.243066496319241 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.030793702404802 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.8182702090714002 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.607557329323774 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.395146183345629 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.183955714509294 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.9714271688974034 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.758652015165849 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.5472273674417045 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.335315503771343 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.1227274066523503 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9102794050546217 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.6977461576461792 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.486875121457589 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.2742721174181122 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0621834840530004 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8496951716286795 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6374910640232454 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.42493007640645963 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21243563489099243 seconds remaining)
    1921 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 32.267 seconds)

**Estimated memory usage:**  1896 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
