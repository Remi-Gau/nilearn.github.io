
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fda5f9ad100>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 166.88108444213867 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.928351163864136 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.0416579246521 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 25.950262069702152 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 25.40153932571411 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.04133653640747 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 24.779475847880047 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.438360691070557 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 24.180896759033203 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 24.190274397532143 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.9789981842041 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.811307213523172 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.67635114987691 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 23.522543081870445 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 23.347731930868967 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 23.185527165730797 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.992122769355774 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.840323939042936 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.790885077582466 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.64900484837984 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.497575283050537 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 22.34332559222267 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 22.196905569596726 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 22.061230161915656 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.935443719228108 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.80295729637146 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.7268466766064 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.59186996353997 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 21.459930794579645 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 21.317385558424323 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 21.181872526804607 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.038121054249423 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.903197467327118 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.769483031648576 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.694895337609687 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.55651068687439 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.417146815194023 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 20.279621588217246 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.148489512895285 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.015021917147518 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.891027450561523 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.76544520331592 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.672882057371595 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.54127917733303 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.407646504315462 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 19.28410659896003 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.17521495404451 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.04286774675897 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.90802534421285 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.777406609788233 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.688520193099976 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.560902894711962 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.43640521856455 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.302707523669838 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.17227189629166 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.03921879421581 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.9121424811227 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.776181647652074 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.67958302333437 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.54754410759877 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.417776823043823 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.283246786867988 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.15228441453749 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.029029906742156 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.904040962457657 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.776423124166637 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.64862629139062 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.53048104314662 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.401247837964227 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.276284781055175 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.146633182253158 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.018868852669083 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.886091868082682 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.754403914490792 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.622319137727892 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.513443549474081 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.384778574893348 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.258951057087291 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.133953045576046 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.007338415218305 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.885108470916748 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.7610997888777 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.635153659960118 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.523826610611145 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.392654702776953 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.260890231413 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.130537554275158 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.003823918857794 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.875293601642955 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.74898306975204 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.621826039420235 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.50681599155887 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.37888300937155 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.249607345109347 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.118120710900488 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.99478998937105 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.866508861382801 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.739681442988287 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.611228344391805 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.482898396675031 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.36522889137268 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.236253141176583 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.109574392730115 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.982716611288126 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.856111012972319 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.728126196634202 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.602591483098156 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.477890498170229 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.361401522601092 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.235794100192708 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.10894740711559 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.982396484495284 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.855439049857003 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.728747057703744 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.60194764639202 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.475750881692637 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.349302867363239 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.230322984548716 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.105556411258245 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.981395863685288 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.87566089630127 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.750438248815616 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.623133811794345 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.494989100510512 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.369431849448912 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.248808288574219 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.124189206532069 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.99980916376189 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.87808421254158 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.752535169438797 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.628241795759934 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.503719075035503 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.377886988899924 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.258599777867024 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.135014729713326 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.010213675322355 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.88645351634306 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.762353251450253 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.637487173080444 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.512012335893919 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.388477631977626 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.263030395440176 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.142404996173482 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.017223579900248 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.894700527191162 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.773518143029048 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.649325364256558 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.524930872884737 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.400253018817386 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.275614308030813 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.155187924702962 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.031034474341285 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.90713179738898 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.782808509527468 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.658566567804906 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.53477789509681 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.411296661083515 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.286810085272333 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.164913530591168 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.040552623616825 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.9167121052742 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.792660910150279 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.668763737619659 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.545285143003873 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.422059506904788 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.2985309904271904 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.17505236993353 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.054105397469983 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.930477596464611 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.8075744005349965 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.6846982451046215 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.5616827833722207 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.4385115324064746 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.3155185886890215 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1919943436808973 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0700838906424384 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.9467158209193833 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.8238699153318243 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.7004660756400463 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.577061019130259 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.4541265699598522 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.3310840827984043 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.2080943217644324 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.086001916009872 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9631508951601775 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8401591584489154 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.717433665388374 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5946841469423019 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.471951885426298 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3492019542310603 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2263868106038947 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1036172275143767 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9814318815867106 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.858693818354236 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7361756919585553 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6135151080596141 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.49073891250454643 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3680017127603444 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.24533821115590107 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12264952228296941 seconds remaining)
    1967 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 2.948 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
