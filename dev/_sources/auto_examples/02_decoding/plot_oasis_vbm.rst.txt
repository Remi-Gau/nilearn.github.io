
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
--------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
-----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

.. GENERATED FROM PYTHON SOURCE LINES 46-58

.. code-block:: default

    # Authors: Elvis Dhomatob, <elvis.dohmatob@inria.fr>, Apr. 2014
    #          Virgile Fritsch, <virgile.fritsch@inria.fr>, Apr 2014
    #          Gael Varoquaux, Apr 2014
    #          Andres Hoyos-Idrobo, Apr 2017
    import numpy as np
    import matplotlib.pyplot as plt
    from nilearn import datasets
    from nilearn.maskers import NiftiMasker
    from nilearn.image import get_data

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 59-61

Load Oasis dataset
-------------------

.. GENERATED FROM PYTHON SOURCE LINES 61-78

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars['age'].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split
    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=.6, random_state=0)

    # print basic information on the dataset
    print('First gray-matter anatomy image (3D) is located at: %s' %
          oasis_dataset.gray_matter_maps[0])  # 3D data
    print('First white-matter anatomy image (3D) is located at: %s' %
          oasis_dataset.white_matter_maps[0])  # 3D data





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/circleci/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/circleci/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 79-81

Preprocess data
----------------

.. GENERATED FROM PYTHON SOURCE LINES 81-97

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False,
        smoothing_fwhm=2,
        memory='nilearn_cache')  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold
    variance_threshold = VarianceThreshold(threshold=.01)
    gm_maps_thresholded = variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 98-100

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 100-130

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor
    decoder = DecoderRegressor(estimator='svr', mask=mask,
                               scoring='neg_mean_absolute_error',
                               screening_percentile=1,
                               n_jobs=1)
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_['beta'])

    print("=== DECODER ===")
    print("explained variance for the cross-validation: %f" % prediction_score)
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670598





.. GENERATED FROM PYTHON SOURCE LINES 131-133

Visualization
--------------

.. GENERATED FROM PYTHON SOURCE LINES 133-144

.. code-block:: default

    weight_img = decoder.coef_img_['beta']

    # Create the figure
    from nilearn.plotting import plot_stat_map, show
    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(weight_img, bg_img=bg_filename,
                            display_mode='z', cut_coords=[z_slice])
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 145-147

Visualize the quality of predictions
-------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 147-161

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle("Decoder: Mean Absolute Error %.2f years" % prediction_score)
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, '--', c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(age_test - age_pred, label="True age - predicted age",
             linewidth=linewidth)
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe417bf3f10>



.. GENERATED FROM PYTHON SOURCE LINES 162-164

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 164-197

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age, data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1, # display progress bar
        n_jobs=1)  # can be changed to use more CPUs
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals))

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor='k')

    display = plot_stat_map(signed_neg_log_pvals_unmasked, bg_img=bg_filename,
                            threshold=threshold, cmap=plt.cm.RdBu_r,
                            display_mode='z', cut_coords=[z_slice],
                            figure=fig)
    title = ('Negative $\\log_{10}$ p-values'
             '\n(Non-parametric + max-type correction)')
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print('\n%d detections' % n_detections)

    show()



.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    [Parallel(n_jobs=1)]: Using backend SequentialBackend with 1 concurrent workers.
    Job #1, processed 0/2000 permutations (0.00%, 193.28594207763672 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.28380012512207 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 36.398438930511475 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 35.770255486170456 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 35.39384746551514 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 35.20814323425293 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 35.066188494364425 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 34.767595461436684 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 34.49259567260742 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 34.26479668087429 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 34.09443759918213 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 33.90692561322993 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 33.729692697525024 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 33.51513759906476 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 33.276376247406006 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 33.02745779355367 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.79187202453613 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.59382393780877 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 32.4128795199924 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 32.20856039147628 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 31.97608780860901 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 31.747740961256483 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.549171967939902 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 31.363456218138985 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 31.1541690826416 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 30.960202932357788 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 30.771074735201324 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 30.59355613920424 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 30.394742625100275 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 30.205014171271486 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 30.019293069839478 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 29.820628181580574 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 29.634346067905426 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 29.47276398629853 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 29.302522042218378 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 29.127638850893295 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 28.95027650727166 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 28.764755371454598 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 28.574277689582427 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 28.39210895391611 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 28.1961727142334 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 28.00173319258341 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 27.816535722641717 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 27.62336748699809 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 27.440586610273883 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 27.25995347234938 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 27.069575776224553 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 26.885067138266056 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 26.708142360051472 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 26.53104426909466 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 26.355782747268677 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 26.17646233240763 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.997165019695576 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 25.82235370941882 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 25.649791408468175 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 25.476747209375553 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 25.30398314339774 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 25.128429755829927 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.949769875098916 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 24.77754284971851 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 24.60190765062968 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 24.427923519103253 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 24.25690133340897 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 24.08661656152634 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.910875111818314 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 23.735635922505306 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 23.561419833790172 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 23.382530618069776 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 23.205623262068805 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 23.039591547371685 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 22.86477187701634 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 22.684026889398066 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 22.501578860812717 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 22.329832008440203 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 22.15538340645867 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.98194702466329 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 21.808748797366494 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 21.633393696376256 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 21.457894147970737 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 21.288336916814877 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 21.121110677719116 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.95158619350857 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 20.776366140784287 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 20.609928122485975 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.44323896226429 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 20.26538860096651 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 20.08884183750596 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.912045001983643 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 19.734900951385498 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 19.552919160114243 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 19.368576685587566 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 19.188612413930368 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 19.006036520004272 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.82733128660469 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 18.643007481351813 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 18.465180196260153 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 18.2854918440183 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 18.108840416387185 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.934703603082774 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.761276517251524 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.581395626068115 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.4075764689115 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 17.227596974840353 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 17.049469769579694 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.873136813823994 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.692022596086776 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.514902159852802 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.338285390461717 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 16.161635036821718 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.98460119142445 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.807267990979282 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.631967922588727 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.45418461731502 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 15.278283302762867 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 15.103837958553381 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.930288377015486 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.756134024981796 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.58042329396957 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.40325531312975 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 14.226553243749283 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 14.049157460530598 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.871109460011002 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.693355282799143 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.516532645962101 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.338249052724532 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 13.160849475860596 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.984535255129376 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.809029004705234 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.634273454546928 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.457934544067975 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.283304012738741 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 12.108010741590544 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.931801189075816 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.756777948006652 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.580303786405876 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.403894945427222 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.229013330796185 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.053673404846748 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.877970387970192 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.703338252554694 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.528333629880633 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.35231301463242 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 10.176786016410505 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.0010124536661 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.825647950172424 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.649951819715827 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.473703361537359 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.297589853507322 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.121560251390612 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.945716035446065 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.770659446716309 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.595095836563615 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.419855695021779 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.244410086301418 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.068578828464855 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.892711508658625 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.717382272084554 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.541742794073311 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.365772681900217 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.190454174137715 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.015034258365631 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.83937352340414 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.664498399805139 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.489013252082778 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.313967070928434 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.138654629389445 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.963995741074344 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.789442506378996 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.6148707526070725 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.439859544031719 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.264529957490809 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.089323742347851 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.913662583328957 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.738099588824146 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.562303507465056 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.386930499758039 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.211316964843056 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.0356348167031495 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.860140768329749 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.684626384820352 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.509155299928453 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.3337335441652582 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.158255087150322 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.98311968449035 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.807639101277227 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.6321397987571924 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.4567942106595604 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2814000086350874 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.1062894019674747 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.930664994729259 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7570177504890843 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5839137731422306 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.409730613231659 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.2351150339749193 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.05860514001748 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8821471104255089 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7057696799842679 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5293277169242123 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.35295835408297455 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1764895676368445 seconds remaining)    [Parallel(n_jobs=1)]: Done   1 out of   1 | elapsed:   35.3s finished

    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  2.369 seconds)

**Estimated memory usage:**  1898 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
