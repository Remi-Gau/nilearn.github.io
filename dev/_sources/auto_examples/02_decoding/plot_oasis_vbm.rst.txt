
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-91

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 94-110

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 111-113

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 149-151

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 151-164

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-167

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 167-182

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f40df03f550>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 185-230

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 151.08823776245117 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.8231942653656 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.751786947250366 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.615632136662803 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.017746448516846 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.651006937026978 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.39900843302409 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.189177683421544 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.869638442993164 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.698031240039402 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.55999493598938 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.302632526917893 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.08103307088216 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.870657994196964 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.666099071502686 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.471373955408733 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.31724202632904 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.24640572772307 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.084557453791298 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.922863420687225 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.771936416625977 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.623492229552497 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.515648169951007 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.16715523471003 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.023109594980873 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.939217567443848 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.78624829879174 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.63974995966311 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.49540516308376 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.343754636830294 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.195310354232788 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.04850536777127 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.906749844551086 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.765839952411074 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.674145460128784 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.534081629344396 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.398539119296604 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.264718738762106 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.12683485683642 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.993297289579345 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.85810661315918 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.730341039052824 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.600896733147756 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.512029703273328 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.388952493667603 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.258411592907375 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.13027005610259 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.000300453064288 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.872888803482056 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.739328014607334 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.617013454437256 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.487236677431593 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.385052882708038 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.25717222015813 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.128675363681936 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.003219951282848 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.876435824802943 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.75059118187218 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.624652237727723 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.50417152905868 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.403292655944824 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.28053678059187 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.154610064721876 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.032823797256228 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.910500675439835 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.794467724286594 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.675223184354378 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.553858671615373 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.432469662498026 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.334334197251692 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.213090692247663 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.106147396732384 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.98269314236111 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.859141248546235 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.737996855297604 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.725384712219238 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.649045040732936 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.542878692800349 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.417527033732487 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.291902898233147 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.167204856872559 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.041482781186517 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.917997464901063 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.794641578053854 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.673265230088006 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.549726991092458 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.439649349035218 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.31555547111336 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.192717898975719 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.07031293665425 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.947357760535347 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.826016462766207 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.703832854395328 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.58405694653911 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.462230403372581 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.355125904083254 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.235330323378244 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.117604184396487 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.996594171134793 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.875011275513003 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.75313401222229 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.632005094301583 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.51026481740615 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.399436985404746 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.28067786876972 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.160363674163818 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.040320823777398 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.921287841886004 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.800377907576385 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.680777446939311 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.562996929342097 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.444194205172428 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.332610317638942 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.212600478028829 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.092996513634397 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.973787287007207 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.853645489133637 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.73343578974406 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.613523644916082 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.495297365829725 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.375893115997314 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.262702457175768 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.144249060114877 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.026647056021341 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.90838857619993 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.79097294807434 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.673435283085658 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.555873887745413 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.499555721879005 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.384375387383985 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.26336644246028 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.14194283230614 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.021352074363016 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.900820448882598 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.781879681259838 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.675564562832867 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.5545954984777115 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.43885514683967 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.318542888199073 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.1989740810805944 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.079647166388375 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.959359256933767 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.838946852885502 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.718886355420093 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.599277191691929 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.4794175707060715 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.362738811806456 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.2426459854151926 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.1230696278649415 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.00444094606694 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.885185956954956 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.765618360595198 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.646552462326852 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.527029643650928 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.407777501391125 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.290874212018905 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.171641594324356 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.052758517538666 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.933739191369165 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.81479145146016 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.69617223739624 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.57807873791049 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.459942802970792 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.341555921577968 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.224884643787291 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.106926694060817 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.9886634895600466 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8704173079507793 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.752516746520996 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.6344095193422756 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5167797172770783 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3990097966110495 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2812286532202433 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.165022737028971 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0472245600031713 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.929594550813947 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.811743974685669 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6941384460966464 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5770367075887957 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4596352310819998 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.342438565360175 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.237321638929251 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1192803330473846 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0011236459179655 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8829768844272778 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.764859470161232 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.646899369455153 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5289489368703915 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4110160685600117 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.293688454955974 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1758854514674135 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.058035806835634 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.94024525086085 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8225519706548187 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7049046816285124 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.587330793723082 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4698480732586919 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3523243962205606 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23493526680300936 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11745162824889524 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.957 seconds)

**Estimated memory usage:**  1830 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
