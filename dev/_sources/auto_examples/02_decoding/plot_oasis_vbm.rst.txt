
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f152b87a310>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 249.47881698608398 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 47.21457076072693 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.250696420669556 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.697801192601524 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 43.52891683578491 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.17556142807007 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.81247671445211 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.15338260786874 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.25452423095703 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.89424806170993 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.62387251853943 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.13541637767445 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.578022956848145 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.40250383890592 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.066232613154824 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.629606882731125 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.306122183799744 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.110416440402766 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.08508004082574 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.73338876272503 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.450912952423096 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.128347419557116 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 38.762350494211375 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.61385342349177 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.26757780710856 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 37.97289514541626 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 37.72687972508944 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.42092842525906 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.295777559280396 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 36.9859198784006 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 36.7044780254364 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.433885974268755 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.152289390563965 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.13324661688371 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 35.8715649212108 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 35.670946087156025 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.45001180966695 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.28869839616724 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.08774310664127 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 34.895285166226905 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.66866207122803 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.47713278561103 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.400093282972065 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.20453535124313 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 33.975604664195664 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.76824241214329 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.5576474459275 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.4085294084346 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.18640172481537 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 32.96007929042894 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.76780724525452 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.58408388904497 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.40025998995854 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.179001137895405 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.956816479011817 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.889995618300002 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.72365392957415 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.535385010535254 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.310446139039662 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.076549570439223 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.867348114649456 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.682727676923157 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.442306649300356 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.228766301321603 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.980539709329605 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.80897450447083 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.56645488016533 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.317127594307287 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.065414961646585 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.81030255815257 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.602317673819407 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.356526468841125 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.126485188802082 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.89333639732779 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.668702950348724 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.47864087422689 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.234953215247707 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.02158446745439 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.79023999434251 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.546933122828037 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.34685492515564 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.10642268922594 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.865934232386145 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.62615925432688 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.38419382912772 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.194680227952848 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.981979292492532 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.75132172135101 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.524615504524924 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.288700786869178 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.081058714124893 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.84964490722824 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.609781379285067 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.37222903261903 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.146162469336325 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.94459619020161 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.7205922404925 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.49596547834652 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.28862921559081 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.075072461908512 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.877811193466187 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.65251598263731 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.42305698114283 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.192247812030384 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.985607073857235 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.771539937882196 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.541246009322833 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.31268614252037 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.092576936439233 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.89008860194355 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.658629482442684 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.42680010924468 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.198093788964407 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.967562888575866 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.756865459575987 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.53015114950097 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.30770494197977 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.07805706904485 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.848815259286912 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.647424968350837 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.41953468322754 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.191509619232054 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.96460891551659 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.736348530141317 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.548952318006947 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.324180126190186 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.09877824026441 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.871831426470298 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.656400561332703 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.450530893118806 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.22580203643212 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.009674816641189 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.802215128233938 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.582869682096899 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.380084575112186 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.163811939733998 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.94395289701574 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.72627522475528 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.51549596371858 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.297264054524813 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.075358697346278 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.855311300737638 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.631236828548808 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.421296398122827 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.201138549380833 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.980307809237775 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.756462054709864 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.53465426049265 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.323183201454782 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.102406042534232 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.883208115895588 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.667647372807888 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.450069954520776 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.236632231793372 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.017555620763208 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.797494526832335 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.578329746539776 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.360425980987063 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.14666949948178 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.9240480623905 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.702329397201538 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.481150338368387 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.259437808284053 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.04412610252942 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.823169359346715 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.603249687137026 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.382508007876844 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.161897229577253 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.947814850580124 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.727799249118601 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.508232663659489 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.288692591483133 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.071982827297477 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.861186544330134 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.642605586983692 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.423618146351405 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.205286015163768 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.990230298985195 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.773621805598227 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.557851062806625 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.3402258555094395 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.121990716259782 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9069072781028327 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.6906832358876214 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.4726548402205757 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.254667868485322 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.0369032608565463 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.8208690276120434 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6041196153519 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.3868735189791077 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.170113576085944 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9529714659246475 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.736658344666163 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5199187604874527 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.303515871775519 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0860942938388922 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.869000668428382 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6518871215394306 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.43455296815043754 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2172202189364026 seconds remaining)
    1972 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 36.759 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
