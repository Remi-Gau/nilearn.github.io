
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f5c87df73d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 190.69433212280273 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.311182737350464 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.323553800582886 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.62762554486593 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.215740203857422 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.941804885864258 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.626348892847698 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.47377225330898 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.26548194885254 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.072045935524834 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 24.88035011291504 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.71726085922935 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.56381058692932 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.404083930529083 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.242666142327447 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.100362459818523 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 23.955681085586548 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 23.811731015934665 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.671172618865967 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.522573282844142 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.411097049713135 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.27700730732509 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.142900401895698 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.004780105922535 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.867384433746338 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.723695993423462 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.603524904984695 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.461637682384914 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.330202477318903 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.19100027248777 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.09424646695455 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.96022690496137 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.850908994674683 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.717500881715253 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.578587223501767 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.450370686394827 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.31847537888421 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.181488919902492 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.047962828686366 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.917268569652855 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.779961585998535 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.646533384555724 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.515498411087762 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.385357429814892 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.25184900110418 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.12487938668993 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.995470275049627 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.862496766638248 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.726040482521057 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.601411751338414 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.472992658615112 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.339236231411203 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.208159831854015 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.08431772465976 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.956572126459193 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.827014511281792 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.69687959126064 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.5693680487181 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.441223563819094 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.31150113526037 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.18268974622091 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.05833426459891 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.92910620474046 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.796257151497734 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.66736376285553 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.537988589360165 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.406840620618876 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.27937780921139 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.151005071752213 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.022013501844544 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.892098018101283 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.764513338115854 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.636057959662544 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.505377259972978 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.376517514924746 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.24463438987732 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.12785446016412 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.001233169010707 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.873786687850952 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.746785867063304 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.621017217636108 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.492062368510682 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.360847996502388 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.231369176542902 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.105391127722603 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.980249881744385 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.85062878630882 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.719474016934976 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.595989487387918 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.465634463878159 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.33574586444431 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.20995973754715 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.078192835268768 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.948736524069183 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.819539998440032 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.688114743483695 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.557718416055042 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.427424676639518 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.296777817667747 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.169844714078035 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.039363622665405 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.908109851402811 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.776564644832238 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.648275748039913 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.519439403827375 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.389725617000035 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.26013869609473 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.131249802134862 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.004686858918932 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.873004303066008 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.742437774484808 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.610951492378303 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.480054429599218 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.349045348378409 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.217974073008488 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.087430383848107 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.956679344177246 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.826159640255138 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.69608834638434 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.565246680203607 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.434628804524738 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.304212745556162 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.177720644434945 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.046057809659136 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.915718609286893 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.786203956604004 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.655311501215374 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.524855290810892 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.395349025726318 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.265805264776066 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.137203840109018 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.007782512038718 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.87821441708189 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.74882207418743 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.61902990981714 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.4887838628557 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.358112335205078 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.228252471798529 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.098768586697785 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.96861514427679 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.837776456560407 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.707208873532342 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.576570745924829 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.44535935341895 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.315077397558424 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.18493992706825 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.05418128510044 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.923500378926596 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.79269467173396 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.661810446105547 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.530789534250895 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.399655818939209 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.269066559640985 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.138240599164776 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.007487922519832 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.876584214548911 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.745953284777127 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.614887567082787 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.484386733815639 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.353434094842875 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.222955226898193 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.09229918888637 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.961672400250847 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.830728343659383 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.700345103333636 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.570984883741899 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.440977984164134 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.310170960283565 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.180404390607561 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.0496409771710455 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.919030960868387 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.7882972000635156 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6577349651691526 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5270551670493417 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.396325133312708 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.265745503561837 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.134984038092873 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.004254672486903 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8736004266846047 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.743090432449426 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6126313739352756 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.4819646039720396 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.351315134174221 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.2207208200882045 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.0900861076686694 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.959746940715893 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8290430576570573 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.698421725614823 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5677269266006792 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4370377896324036 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3063394144961709 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1757553035676167 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.045122464497884 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9144477300693333 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7838053015089527 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6531635553408891 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.52249889471093 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.39186460475631174 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2612371468784833 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1306237527473488 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.609 seconds)

**Estimated memory usage:**  1945 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
