
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3387484400>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 183.84695053100586 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.41166067123413 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.667325258255005 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.828656832377117 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.797854900360107 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.535672426223755 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.92994546890259 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.566662652151926 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.308603286743164 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.047318405575222 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.800978422164917 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.595420555634934 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.60795497894287 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.380183696746826 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.16759525026594 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.025232474009197 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.834281086921692 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.656689952401557 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.469654930962456 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.405651192916068 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.241872549057007 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.05271251996358 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.90067033334212 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.735656085221667 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.57002019882202 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.400911808013916 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.239520641473625 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.15871931888439 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.002239533833098 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.85748947077784 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.71536676088969 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.55087980916423 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.397471368312836 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.227673956842132 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.12041156432208 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.95899704524449 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.83528192838033 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.68474054336548 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.524992114619206 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.369182678369377 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.202762603759766 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.09036842206629 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.934365976424445 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.785310240679006 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.634177814830434 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.481242418289185 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.33057335148687 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.17572700216415 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.05929696559906 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.90870255840068 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.759917736053467 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.60449354788836 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.44954982170692 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.298799946623028 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.144623950675683 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.027906829660587 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.878273282732284 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.729476460239344 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.57594903584184 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.42191552307646 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.280781825383507 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.123565787174662 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.99036032153714 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.834117563944012 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.680632025003433 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.529879863445576 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.382264577981196 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.226812110018376 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.07154704542721 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.941787163416546 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.791922398975917 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.641260717956115 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.494868384467228 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.345390352484298 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.19705055855416 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.045947551727295 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.911322631334002 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.76022299853238 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.60997840685722 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.460773151132123 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.310701966285706 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.162907385531767 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.014688334813933 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.88007202493139 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.72783396357582 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.58096101704766 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.43031937022542 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.27936720299995 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.132793686606668 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.985027932049183 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.861913654539322 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.713722242103827 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.564677736033566 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.418146938406013 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.27064799247904 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.123405745154935 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.973920921484629 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.823370257603754 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.686109085472264 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.538590493828359 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.388033866882324 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.239990470432998 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.09454400399152 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.948147961236899 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.802060640775242 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.697181361062187 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.553309116723403 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.40863362651005 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.264020963951394 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.121172439067735 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.976293130354449 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.832076139278241 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.699932626315526 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.557518534955724 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.412071688133373 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.26764132665551 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.123199643759891 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.979156278137468 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.84394798036349 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.699533849203286 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.553964296976725 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.409082333903669 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.26480423427019 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.121022360111638 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.976822545451503 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.839089727401733 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.694130560708425 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.549502631810705 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.40481273829937 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.260425419770469 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.115611259753887 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.9702202636777 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.83088087313103 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.686187070115169 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.54070792981048 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.395440534309104 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.251223283655504 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.106071209385448 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.96419177884641 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.823527663731747 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.678961856024605 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.534311852556593 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.389731507905772 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.245273089909054 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.100620057847765 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.955651636781363 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.813852012973942 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.669146938388851 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.524366514102833 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.379795925729227 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.235246896743774 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.08995686619487 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.94478732661197 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.803775926041448 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.658469119629302 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.513952455212993 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.368675427559094 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.224031826493087 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.079242205318016 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.933862665164396 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.791590392589569 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.645678523164358 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.5003790531629395 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.355270113681723 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.210517848410258 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.0656185800378974 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.920810254223375 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.778258492132861 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.633107003711519 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.4879099321083205 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.342517474118401 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.197318243004425 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.051983012709507 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.9067168359811597 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7642916509474835 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.61912955556597 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.473851821639321 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.3290570132476462 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1843162493759327 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.0394670683578404 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8944236437479653 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.750814661795263 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.6060799530574252 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4612475535908684 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.316472571829091 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1716125140319003 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.026645237399686 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.881544521148192 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.737423222115699 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5925170303021787 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4477004126498574 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3028597906621964 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1580491662025452 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0132295727112133 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.868376778573105 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7238210164583646 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5790636977370904 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4342787217367724 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.289512463290282 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14474783830307236 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 10.064 seconds)

**Estimated memory usage:**  1919 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
