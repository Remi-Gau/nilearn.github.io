
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-91

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 94-110

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 111-113

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 149-151

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 151-164

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-167

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 167-182

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8c0c07d790>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 185-230

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 176.2700080871582 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.18698000907898 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.082387685775757 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.276380538940433 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.700329780578613 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.23826789855957 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.92022260030111 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.661071947642736 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.4312744140625 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.28028689490424 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.692410469055176 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.205695759166375 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.819568395614624 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.436889299979576 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.122371026447844 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.7886381149292 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.5149747133255 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.401579786749448 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.152127159966362 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.892207597431387 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.63362741470337 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.449557122730074 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.217259667136457 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.988335536873862 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.871282259623207 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.657655000686646 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.447027774957512 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.257897085613674 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.06734119142805 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.87544776653421 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.671841700871788 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.553093310325373 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.378339171409607 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.19760088487105 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.01628553166109 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.85462600844247 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.73849262131585 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.60180119566015 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.497760295867923 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.322237344888542 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.148649215698242 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.983963733766135 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.81361615090143 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.644892553950463 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.483920270746403 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.32469497786628 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.21827924769858 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.053940012099893 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.898775060971577 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.7474428731568 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.592301845550537 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.446059741225895 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.598180349056538 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.436825059494883 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.271791308014482 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.110758954828434 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.95013563973563 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.779228967532774 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.61243702625406 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.477840569059726 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.318515221277874 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.16478728466347 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.00970125198364 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.854733319509595 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.701537996530533 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.54243012575003 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.38882603789821 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.288658747032507 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.13358984274023 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.982936195705246 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.828248739242554 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.670397909594254 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.519127315945095 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.36990734649031 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.270932919270283 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.11561942100525 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.961969877544202 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.80768839105383 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.653498625143982 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.503028021583074 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.35421633720398 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.215604346475484 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.065039216018302 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.913908628096063 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.762823456809635 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.609498136183795 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.458085664483004 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.307270957135607 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.17331500486894 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.0236666416854 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.873948494593304 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.72441600705241 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.571803549061652 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.420102765483243 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.271428747380034 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.233630230552274 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.085078259309132 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.935516519644827 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.783580896805745 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.633090741706615 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.483042240142822 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.333260512588048 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.196040966931513 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.04400997254455 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.895686736473671 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.746940953390938 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.596847597158181 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.448294363289236 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.301470279693604 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.162963090686622 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.013575445521962 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.865148353147077 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.716997350965228 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.569172101738179 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.421376006645069 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.27427521995876 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.138240559347745 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.990225457737589 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.84337008605569 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.694891202349623 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.548323949178059 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.404079366321406 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.25913667678833 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.118379222668283 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.970805891098514 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.8236572265625 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.676831063770113 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.52863963945644 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.382392153143883 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.23600935011871 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.089141130447388 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.94750172127294 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.800407951528376 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.653942559894762 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.507181181836483 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.36072391933865 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.214946971220128 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.072012574133211 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.963261372801187 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.817659295720162 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.67185354232788 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.525983670079116 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.380710504424405 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.235020919279618 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.094531522856819 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.9487635020552005 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.802790083297311 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.656773620722245 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.510854456875776 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.36530361559567 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.219672679901123 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.074642100871004 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.932245656063682 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.787234228420881 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.642083186607856 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.496337852170391 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.351205385648287 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.2051507788858595 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.059550816499733 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.917138039690894 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.772164463996887 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.627267724978998 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.482706587991596 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.338135429686564 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.192238476218247 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.046664389696988 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.9040814336523955 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.7591886092088895 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.613875797816685 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.468539233743791 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.324209619970883 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.179968323623925 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.035447020863378 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8927040582447385 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.7480241430216825 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.603000198091779 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.4584870880300347 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.3139805699472373 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1697095217329734 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.0277311242492506 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8883985413445363 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.7485306895240234 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.603583765553904 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.4586152874055456 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.3135044471077295 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1689789424071444 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0240172109296246 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8798857398211637 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7348537343613644 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.590002174730654 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.445317971078973 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3006978122351682 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1560341318448384 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0114170973782712 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8671914597147519 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7225286593803992 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5778997771593989 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4333793221391397 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2888735303975115 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14441288535918423 seconds remaining)
    1959 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 9.733 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
