
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe3ed8d7d00>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 153.41997146606445 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.30001950263977 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.30040168762207 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.135526021321617 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.738312005996704 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.366066694259644 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.167744398117065 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.88125320843288 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.5977783203125 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.431922647688122 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.286381244659424 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.112618012861773 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.09007978439331 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.923668696330143 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.758531672613962 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.606669108072918 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.443124175071716 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.275882047765396 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.14313448799981 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.0232799555126 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.876853704452515 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.792755013420468 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.65545411543413 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.521985603415448 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.38508939743042 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.237741231918335 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.100390727703388 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.152712300971704 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.023206881114415 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.944970533765595 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.81950545310974 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.683576622316913 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.5582634806633 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.42000626072739 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.29041148634518 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.180110965456283 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.049061881171333 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.913758155461903 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.81706478721217 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.696196329899326 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.566919326782227 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.452866141389055 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.32690031187875 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.214406640030617 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.091321576725353 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.96433205074734 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.837849782860797 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.742538066620522 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.635544180870056 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.542614489185567 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.4548499584198 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.349625723034727 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.246918568244347 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.127215974735766 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.99752300756949 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.911852749911223 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.788976192474365 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.667767035333732 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.546829675805977 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.432064161462296 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.312117338180542 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.197570605356187 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.07365209056485 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.946206827012318 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.844877183437347 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.726959246855516 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.60508986675378 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.480251059603335 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.353114436654483 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.232352204944776 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.109187671116421 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.988499644776466 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.862249162462021 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.758141586225328 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.63483410912591 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.519275029500326 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.397143464339406 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.273808225408777 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.151459058125814 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.036800876448426 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.919342279434204 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.796001466704004 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.693994248785623 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.571254931300519 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.448855002721151 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.333685622495764 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.212363381718479 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.095426784164605 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.974671580574729 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.85413871990161 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.73362832599216 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.627733167711195 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.50808626672496 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.389212131500246 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.269673499655216 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.152365922927858 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.033484101295471 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.912896085031253 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.791938207587418 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.673453037184897 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.57676076889038 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.485583612234285 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.366175483254827 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.244887291806416 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.12437182206374 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.008194571449643 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.888083084574285 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.768346652806363 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.661941908023975 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.547901630401611 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.432810891758313 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.315854615993329 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.200858729226248 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.086269617080688 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.969122330347696 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.851044136544932 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.732594596928564 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.622745177684687 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.506415043847037 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.387970074886034 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.270561536153156 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.15396683275207 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.039574009473208 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.92427111447342 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.806739061109482 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.690494966506957 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.583450230341109 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.468785736504502 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.351229697465897 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.233583790387295 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.118802052277784 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.003358091106852 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.886296604618882 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.773325832266557 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.663843108646905 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.548842748006185 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.432855493882123 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.318051898566476 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.20278285206228 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.08841142036932 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.973177364894322 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.8740585120857185 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.809472950411514 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.714981409219595 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.597221255302429 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.480644406943485 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.362929373571317 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.244171181503607 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.1278556681968075 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.014685808412181 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.89864977200826 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.78043015903195 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.662261511150159 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.544429051330667 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.427555663245065 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.309609666947396 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.191097351220938 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.072828797018452 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.957929086081589 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.841057556980061 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.722874701023102 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.604840586644523 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.487147128140484 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.369377377574429 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.251494721668522 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.133473706967903 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.017684092004615 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.899978660537811 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7822142101469494 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.6635358686277852 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.545356245601879 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4267091304935207 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3084438956061075 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.190421464126234 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.072353264381146 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.955667768205915 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8370895819230513 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.718212468475945 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5994463020496155 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4813718609303734 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3630833890702987 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2448637604054826 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.126521259873778 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0078875653730717 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8905762589496113 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7721610133712358 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.653828659365254 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5354866369522828 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4171824861080087 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2988177001791656 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1804820487373753 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0623496527447127 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9446213742097218 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8264482564876734 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7084907895510959 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5904392034579545 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4724042561589455 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3543092599374994 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23625667167432382 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11813655570523823 seconds remaining)
    1999 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 1.157 seconds)

**Estimated memory usage:**  1890 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
