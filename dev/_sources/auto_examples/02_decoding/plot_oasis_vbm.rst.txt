
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6106c8e910>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 275.96473693847656 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 51.66152358055115 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 48.02119731903076 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 47.04678781827291 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 46.02713990211487 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.60483241081238 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 45.09641941388448 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.68939559800285 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.32719039916992 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 44.09070706367493 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.81609272956848 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 43.63557041775097 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 43.22522703806559 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.95248985290527 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.61957607950483 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.2553452650706 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.865904331207275 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.57820628671085 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.37231151262919 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.09939614095186 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.82284140586853 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.55062912759327 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.31132128021934 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.1256697592528 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.80729134877522 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.586727142333984 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.31963243851295 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.05503955593816 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.825224944523406 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.56650717505093 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.37847296396892 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.10311540480583 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.894438326358795 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.63150214426445 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.3794891834259 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.147020884922576 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.967746867073906 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.735982398729064 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.49780285985847 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.276450597322906 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.04698657989502 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.81940441596799 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.58499394144331 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.38496021337287 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.1882203058763 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.96353403727214 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.733669312103935 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.5211679174545 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.28459143638611 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.07323729748629 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.96193814277649 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.72482289987452 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.48760535166814 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.243173792677105 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.00097704816748 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.75948439944874 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.545724323817666 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.329614563992145 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.09567282939779 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.91074793621645 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.674976189931236 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.437744699540687 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.240233329034616 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.025446551186697 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.796949714422226 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.576536563726574 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.35285516941186 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.124036020307397 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.901147028979132 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.684004873469256 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.46201685496739 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.233620784652064 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.001551310221352 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.76633060794987 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.552458518260234 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.314303954442344 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.083329890903673 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.85000352735643 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.618577749301224 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.38132074513013 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.15247678756714 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.931939407631205 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.696183233726316 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.477801205163978 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.239423411233084 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.006143527872425 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.78546200796615 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.546148892106682 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.313017151572488 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.08239082540019 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.857648584577774 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.624008168231 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.388614830763444 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.1571987213627 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.93139810765043 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.70422929211667 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.48542644580205 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.25520257114135 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.02630903769513 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.803904839236324 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.572474002838135 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.34079110504377 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.11705925885369 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.888455534444272 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.661335138174206 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.43889153571356 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.207922463147145 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.986125208507072 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.753536612899214 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.524609086710377 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.302456400611185 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.074705738205093 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.85546268735613 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.62917566721418 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.402822507055184 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.180643641430397 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.956980310637377 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.728434373170902 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.503916114063585 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.281757104296645 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.053308169047035 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.827082480280854 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.602537241138396 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.376390329221397 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.149209230176865 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.923099517822266 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.698094273370412 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.46999806869687 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.243031188845634 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.016905867776206 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.795142760643591 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.567892045465134 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.344661430879073 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.117873831799157 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.895445709797873 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.671468204922146 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.44767951965332 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.220744066864905 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.999538048453953 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.775695450871968 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.549398626599992 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.32682326499452 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.098390518779487 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.873125473102489 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.649215671751234 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.423581575525217 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.198343218189395 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.973744658385815 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.74787069011379 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.519909970712343 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.293291409810383 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.067928784730418 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.842303250965319 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.615259039635752 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.388524575666947 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.163180951149233 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.939325320415008 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.714035184520066 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.48957327649563 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.264305827002856 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.037727117538452 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.8121443579656 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.585733231203054 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.362459488441608 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.134893440618749 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.9114838730205195 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.683909373111035 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.457096352548657 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.231874602181571 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.0055479269761305 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.778456449508667 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.551857450552154 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.324759244918824 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.099101249882252 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.873586265520118 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.6471156392778665 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.4214323650706895 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.195482345624159 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.970018657405724 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.744784692146259 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.51904371049669 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.292651164597569 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.067383548715612 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.8419554194466015 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.616822678109874 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.3914080826011865 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.165413961615614 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9393454617994994 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7133727225851505 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4870595730171 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.261374724538703 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0356443827064874 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8097405532995858 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5834812586789302 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.357328572224096 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1310387330177503 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9047761595979028 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6787031919217957 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4524744809275926 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2262622279737463 seconds remaining)
    1980 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  37.825 seconds)

**Estimated memory usage:**  1891 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
