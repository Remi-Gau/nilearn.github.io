
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8b2e7f25e0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 160.78948974609375 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.233704566955566 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 26.38125729560852 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 25.20693922042847 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.480735540390015 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.10596227645874 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.734708468119305 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.4642539705549 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.259498596191406 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.30566432740953 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.693710803985596 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.56807962330905 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.410302321116127 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 23.29477231319134 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 23.103826556886947 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.88526725769043 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.711854577064514 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.562212228775024 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.481510877609253 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.3002497647938 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 22.11193585395813 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.937240418933687 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.766092993996363 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.592089943263844 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.424327850341797 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.246222257614136 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.160179816759552 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 21.005857714900266 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.855358702795847 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.703491326036122 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.564935604731243 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.417686946930424 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.267221212387085 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.127780986554693 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.989590813131894 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.925344603402273 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.797993501027424 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.66024904637723 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.52888533943578 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.389896136063797 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.255600929260254 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.120743670114656 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.993925401142665 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.896046910175055 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.76972142132846 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.643499506844417 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.512396625850513 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.3853145508056 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.2587939898173 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.137583635291275 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.017271995544434 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.891095110014373 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.79978086398198 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.677570001134335 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.55534161461724 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.43311281637712 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.303518295288086 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.17143019876982 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.040905434509803 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.915435879917467 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.814772367477417 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.695598551484405 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.58121380498332 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.455482301257906 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.33362165093422 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.204802127984856 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.080197168119025 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.955472067220887 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.829235147027408 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.720507818719614 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.597053050994873 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.474041532462751 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.348916795518662 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.2220299243927 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.096975590731645 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.970163504282635 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.845464116648623 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.746707953415907 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.630093825169098 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.513642006282565 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.391213297843933 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.273008317123226 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.155129711802413 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.036293383104255 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.916871411459786 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.797821451635922 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.688854810803434 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.564288385983172 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.4407245462591 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.31751896558183 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.190240356657242 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.066555636269705 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.940234360487565 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.816945752789898 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.70366998428994 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.58218278382954 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.46447616815567 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.344381280781068 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.221199157286664 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.096183993599631 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.974431991577148 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.85352898116159 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.731341436797498 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.618779110677034 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.494713856623724 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.371375140689668 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.248338924264008 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.12561406599027 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.002342135817916 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.877869113869624 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.75561699000272 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.640924404333305 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.51987738268716 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.398852508679955 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.277312885250963 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.154710624528967 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.032093533154192 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.909018591937857 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.78759293232934 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.671349884081287 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.556992212931315 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.435642313366095 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.31546139717102 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.197608003771402 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.089260685828425 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.972708702087402 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.849721507420616 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.728480765200036 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.612394511699677 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.49198594758677 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.370751179181612 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.25100012407958 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.130822557391543 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.010118586676462 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.889466154041575 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.7689588864644366 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.648943957160501 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.53169803027689 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.410267363423887 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.290540899304177 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.169407469885689 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.048643670183547 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.928811959817376 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.807710814309287 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.687665210829841 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.570825642552869 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.451731420543095 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.33325963604207 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.213188989742383 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.092335728190889 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.972055196762085 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.851925420445322 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.731484714307283 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.611406531988406 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.4934907269168205 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.372873875402636 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.252412967192821 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.132008819823052 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.011968513078327 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.891520630638555 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.771944880485535 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.65175467692547 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.531861287576181 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.414610826164667 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.29482158218942 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.176209290822347 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.056530570409384 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.9368614136815787 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.8170662834530784 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.697600789324066 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.5780418760636277 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4599605582610904 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3404152005217798 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2203585260865317 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1006916007776373 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9808293751307895 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.8611816059459336 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.741480769410645 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.621868744325102 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.502310257384231 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.383725219302707 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.264568930831403 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1450914367214664 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0253761179460206 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9058544117471445 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7864454823571283 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6670370922293716 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5478972151955182 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.429198828149349 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3098927502909665 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1907318014847603 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0715249308740906 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9523763557275136 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8332020791701084 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7141243796987632 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5950659666305933 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4760519241800113 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3571697092298324 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23813581466674807 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11905882825803517 seconds remaining)
    1963 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 0.515 seconds)

**Estimated memory usage:**  1881 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
