
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f936253aa30>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 176.55134201049805 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.15926742553711 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.939249515533447 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 36.0570449034373 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.35402274131775 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.7125403881073 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.1532830397288 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.19521795000349 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.550962448120117 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.93343122800191 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.414180040359497 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.95862540331754 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.573157628377277 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.2073544722337 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.112055233546666 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.816957155863445 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.531702756881714 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.306567220126883 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.188557969199284 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.034819552772927 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.82982301712036 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.803696723211377 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.589790907773107 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.356662594753764 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.139461994171143 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.93119478225708 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.76080003151527 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.557811004144174 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.36366449083601 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.283179685987275 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.09605876604716 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.916556404482932 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.733340680599213 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.55173144196019 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.373280623379877 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.205775329044886 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.12680861685011 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.945033737131066 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.768618997774627 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.599573300434994 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.433537483215332 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.265670601914568 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.10166673433213 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.936222231665322 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.842861652374268 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.67315581109789 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.510872768319174 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.418319433293444 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.525811195373535 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.36211021579042 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.196409225463867 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.082314589444326 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.912200450897217 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.747038728785967 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.585978949511492 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.425371690229934 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.269910267421178 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.112396792361608 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.000344128444276 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.841949002217437 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.680694103240967 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.52440161001487 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.37349417132716 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.219242531155782 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.063451409339905 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.910707510434666 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.79432436914155 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.641880846735255 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.489176609936884 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.33877212413843 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.241538626807078 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.089265950968567 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.939031812879772 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.818770232265944 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.66496083543107 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.515363693237305 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.36511744950947 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.21187755659029 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.05645712216695 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.90397963644583 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.76011562347412 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.63295243110186 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.478506361565938 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.32762450482472 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.174613963989984 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.023745452656467 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.872185440950615 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.722910765943857 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.573875687339088 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.44821475061138 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.300723817613392 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.156925379574954 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.110493359358415 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.995064235502674 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.84878977308882 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.72202007394088 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.57229580481847 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.42233081945439 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.272806907186704 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.125201468515877 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.978067636489868 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.83132239143447 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.683468533497232 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.551154687566665 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.403903300945576 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.256964626766386 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.11015687798554 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.963866244966738 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.818514629646584 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.67278072593409 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.527374440973457 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.396666423694509 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.252577951976232 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.107684726208712 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.962542759744744 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.817261208658632 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.672663113166546 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.528064291701359 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.396259655386714 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.254800964804257 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.111310799916584 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.968841578349595 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.82705267921823 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.684085875022701 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.540747496389574 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.398974990844726 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.265481604470148 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.123036596718736 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.980496659874916 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.837567190791285 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.694644451141357 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.552045374426223 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.409601854555534 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.266732434581098 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.133581012042601 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.991791424927888 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.850676704855527 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.714256403219961 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.615795847298443 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.474036199583423 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.332496574946811 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.199449461402622 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.058572208377678 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.9168887821944445 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.775365153948466 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.635009675190366 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.494067855077247 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.35334452804254 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.220791043461981 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.079754722198384 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.938756545384725 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.79789155366405 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.657144747282329 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.518172758077485 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.377694225930548 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.237102870018252 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.102784230158879 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.962243834878229 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.82167986374867 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.681423170761493 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.541411757469177 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.401213383822708 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.261330021752252 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.1213528422490215 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.9856253775154675 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.84583652380741 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.705939054489136 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.566022631650913 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.426181702386765 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.286790455586812 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.147394488839542 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.012126310526976 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.873006914937219 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.733815528064794 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.594936277674533 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.455924000058855 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3169224695725874 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1779956278827903 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0394040386328536 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9027072943788665 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.766345659891764 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6275167992101847 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.496318277421888 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3621586828283925 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.222554351972497 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0846951974404826 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9453155840596845 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8059000318700618 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.666495860891139 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5271330888939911 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3879154481385882 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2488018030895613 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1097338994344075 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.971466941537017 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8324550279636973 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6936175395280887 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.554755906669461 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4159411149581677 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27721179615367547 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13856856906833362 seconds remaining)
    2007 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.153 seconds)

**Estimated memory usage:**  1862 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
