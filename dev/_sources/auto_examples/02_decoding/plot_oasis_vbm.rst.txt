
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fcaa636cd90>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 281.01205825805664 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.39193034172058 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.06447219848633 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.632828156153366 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 43.97682428359985 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.52201700210571 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.1424990495046 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 42.50456755501884 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.18439865112305 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 41.974194288253784 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.721306562423706 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.29707897793163 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 40.844656467437744 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 40.68832206726074 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.54489323071071 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.51778864860535 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.27096116542816 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.167308176265045 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 39.89419542418586 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.681075045936986 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.54667639732361 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.453846363794234 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.267775752327665 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.03852208800938 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.8320829073588 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.62747621536255 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.39672415073102 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.14618092996103 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.87682570729937 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.63679914638914 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.37800049781799 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.17366847684306 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.88755279779434 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.63538789026665 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.36178328009213 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.09205617223467 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.83075761795044 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.63119961764361 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.42897328577544 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.19705831698882 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.98278617858887 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.749956026309874 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.502134504772364 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.25865987289784 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.0449803092263 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.86166106330024 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.60296034812927 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.39336851302613 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.18219339847565 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 32.94251511048298 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.70189070701599 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.45619825288361 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.207975314213684 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 31.9885012743608 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.786456814518683 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.592829704284668 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.373073577880863 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.14332898457845 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 30.91928507541788 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.72066270698935 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.513292392094932 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.278868917559016 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.063044832598777 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 29.87106378494747 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.747989147901535 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.530241324351387 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.311410376519866 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.08272166038627 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.932749285417444 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.787113310634226 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.564231293542047 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.366085086070317 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.19412189059787 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.02819977394522 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.83471661000638 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.60441621144613 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.40499234199524 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.17945802676213 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.954276133806278 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.74711206593091 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.519461512565613 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.298870784265024 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.077586546176818 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.85000364751701 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.621041275206068 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.393942342084998 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.1761385562808 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.962015379434344 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.73350850018588 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.504503906442878 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.280957116021053 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.063740672645988 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.849004102789838 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.618616611726825 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.390666459469085 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.171522893403708 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.94959318637848 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.72202965893696 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.48956020024358 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.264080984423856 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.0352623462677 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.806907715183673 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.57604403589286 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.350099670076833 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.123600152822643 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.897305023102533 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.66974336696121 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.443833001306125 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.22062796133536 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.00182585759994 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.784635955637153 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.575298753944605 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.367127197129385 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.1412264752177 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.9165187593092 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.69122567384139 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.46847867143565 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.241410766911304 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.021749965215136 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.800764252157773 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.578272024790444 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.363283413500827 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.143934421851988 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.92359352693325 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.69982824787017 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.47791976928711 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.255919176434713 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.03764408592164 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.818410813808441 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.593576155891714 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.38372120490441 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.163829375769346 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.950707659576878 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.729824648763902 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.508252424980277 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.28587093176665 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.072543873506433 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.851310380183866 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.629825792450836 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.405703673259817 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.21457975251334 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.999993855226124 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.787931079595861 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.576727131863574 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.35794927014245 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.134956006346076 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.916470622363155 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.693836147282399 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.470527636038291 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.24968764925963 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.02878181139628 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.810013538954273 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.589018846813001 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.370638827093288 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.152607391406963 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.93269253546192 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.715398617279835 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.497289774524178 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.276360765288146 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.056469166053915 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.841062664985657 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.619985875135624 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.399406197630329 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.179037655789427 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.958917030474034 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.738535938840924 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.516214683831456 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.29499603459935 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.07461506979806 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.85226826978153 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.630288362503052 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.408185972804911 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.186352275138678 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.963882194089063 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.741812297667581 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.520100559507097 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.299160664731805 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.079394141159488 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.85871824521697 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.638708178557497 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.4193031787872314 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.199312283847872 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9783905181255967 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.758099774845311 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.5382225824439004 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.317558159699311 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.0969292553522254 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.876577627212606 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6552301924279393 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4342610659422697 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.213078699613872 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.992166712646085 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7708661953608194 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5495206593231832 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.328307822807548 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.107118961138603 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8859771709052883 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6645167152288601 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4430411680780276 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22163094108428189 seconds remaining)
    1967 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  38.919 seconds)

**Estimated memory usage:**  1848 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
