
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 66-68

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 68-91

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 92-94

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 94-110

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 111-113

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 113-148

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 149-151

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 151-164

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 165-167

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 167-182

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1d569c3880>



.. GENERATED FROM PYTHON SOURCE LINES 183-185

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 185-230

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 231.41860961914062 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 42.82787346839905 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 39.22875094413757 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 37.004962364832565 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 36.05589532852173 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 35.37840485572815 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 34.856322288513184 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 35.1585830960955 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 34.83862495422363 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 34.470537132687035 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 34.17283749580383 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 33.81004422361201 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 33.547772328058876 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 33.602653099940376 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 33.362122126988005 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 33.1390643119812 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.89409780502319 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.71559950884651 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 32.478678941726685 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 32.39997685583015 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 32.112404108047485 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 31.853236289251416 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.576581456444483 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 31.354095137637596 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 31.232773780822754 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 31.17344379425049 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 31.015586339510406 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 30.918399148517185 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 30.71243303162711 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 30.526241886204684 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 30.33384998639425 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 30.272459268569943 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 30.083309948444366 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 29.877978873975348 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 30.044566112406116 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 29.90835407802037 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 29.788694302241005 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 29.57700115281182 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 29.348054898412606 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 29.171178854428806 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 28.973209381103516 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 28.770607430760453 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 28.651403688249133 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 28.45118731676146 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 28.24268037622625 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 28.02291324403551 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 27.81848702223405 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 27.620365132676792 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 27.474885980288185 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 27.257318628077606 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 27.05904793739319 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 26.853863973243563 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 26.646747460732094 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 26.441351962539386 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 26.307944703985143 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 26.107841513373632 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 25.912317344120574 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 25.712171014986538 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 25.504585208563967 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 25.29712579614025 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 25.16019423802694 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 24.965957641601562 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 24.758964207864576 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 24.57200631641206 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 24.380375385284424 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 24.234566908616287 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 24.04255951534618 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 23.8490953587774 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 23.653212968040915 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 23.665654154791348 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 23.472876991544453 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 23.32446853879472 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 23.13142098320855 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 22.950104324785 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 22.753635831781335 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 22.55686720212301 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 22.386910614214443 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 22.20655840093439 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 22.01868085983472 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 21.83126299592513 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 21.636794686317444 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 21.446334532749507 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 21.282395979253256 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 21.085092785846754 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.893377383550007 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 20.703802024616916 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 20.5123739020769 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 20.320823790013105 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 20.15784909508445 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 19.96751618385315 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 19.77708665529887 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 19.583856776520445 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 19.397668237271517 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 19.21084648306652 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 19.044594571945513 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 18.845315995969273 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 18.6563281416893 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 18.46275525977931 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 18.27431517231221 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 18.084364748964404 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 17.915461778640747 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.73412234004181 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 17.549843675949994 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 17.403130302151432 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 17.267630943885216 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 17.09525722549075 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 16.917200416888832 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.72961207862212 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 16.542271075425326 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 16.35409099027651 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 16.190546881068837 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 16.016853830835842 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.831099322863988 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 15.645136982993742 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 15.456488734797428 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 15.271677919056103 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 15.09151058361448 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.922925488561647 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.73760246018232 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 14.548621289870319 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 14.363292058308918 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 14.175199605216665 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.99174400626636 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.825417487601923 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.643561017128729 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 13.457310104370118 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 13.269924375745985 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 13.084769252717026 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.899557203054428 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.733561770860538 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.549037988369282 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 12.363774738238968 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 12.175173846158113 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.988523264576619 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.803709165373844 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.629359112845526 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.442954231710996 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.257097900348858 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.098409780557605 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.924225018178817 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.741926976612636 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.564748659201548 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 10.37857681260982 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.191570977231006 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.007597949769762 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.821294250159427 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.637697324360886 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.461527673565612 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.28160376806517 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.101059534405701 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.91918389002482 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.73567442388724 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.553866762863962 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.379503924862233 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.19785071348215 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.015997532875307 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.8340864181518555 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.652092632974029 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.471998072877714 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.297070387774293 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.1173015832901 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.937504575859686 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.757291131549411 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.576428942885135 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.394728829221028 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.21943499102737 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.037671913583594 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.85561990737915 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.674561137244814 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.495323570522331 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.315676759271061 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.137076221711454 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.9612549182980565 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.783195565890715 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.618642163002629 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.442145960671561 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.263583074916492 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.087481986331401 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.9084601616591548 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.7301140244446653 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.551638735665215 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.372658053814377 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.1945605487613884 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.01801196212977 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.839998431827711 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.6620627158396952 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.483706730668263 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.3060376516637957 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.1280842182484077 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.9518100685543482 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7740049989599929 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.5961486793937483 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.4183855255444844 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.2408561706542969 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0633465997951548 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8864923195961194 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7096772631820367 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5321535035438344 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3546885745693939 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17732746756855566 seconds remaining)
    2007 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.768 seconds)

**Estimated memory usage:**  1908 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
