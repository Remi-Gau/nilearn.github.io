
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc998369040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.54928970336914 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.911702394485474 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.780452489852905 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.900538921356205 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.24880075454712 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.770394802093506 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.408099412918094 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.099625825881958 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.831880569458008 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.70442959997389 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.748348712921143 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.522122231396764 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.303879817326862 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.107120899053722 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.94268035888672 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.778526941935223 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.623827934265137 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.45610673287336 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.401298443476357 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.24019752050701 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.089179277420044 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.927376860664005 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.765175992792305 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.60868987829789 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.447713375091553 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.551790237426758 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.39239556972797 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.350048232961583 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.20503238269261 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.241524425046194 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.08451279004415 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.91857494077375 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.80727469921112 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.649561528003577 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.488178715986365 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.331633363451278 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.277225547366672 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.128365774412412 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.972392119859396 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.87161056811993 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.744736671447754 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.591230188927998 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.43401150476365 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.27564955866614 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.127886577086016 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.98717620637682 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.8801006856172 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.731062767353464 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.577295621236164 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.42593814888779 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.275911331176758 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.141735712687172 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.993235312975372 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.870095900769503 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.71492608388265 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.561577710238367 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.407295772007537 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.25450417451691 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.101379846704415 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.94745630328938 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.796442190806072 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.677122979867654 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.528055514058757 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.376536240653383 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.22364777326584 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.077016683725212 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.93848528284015 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.788856591751326 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.66435115477618 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.516502338906992 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.366772890090942 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.223250768554042 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.077754974365234 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.931226201253395 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.785372244345176 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.670791943868004 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.526877127195657 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.378314157585045 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.232236232513035 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.083564296553405 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.936641454696655 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.787820486374844 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.65597282967916 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.51263002027948 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.367134866260347 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.221908260794248 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.07478147883748 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.929615873029864 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.783864411440762 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.640133841653887 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.509202506807117 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.364647894115238 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.221314865609875 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.0770893737834 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.932709901890856 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.792794478567025 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.648609220981596 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.517535457906035 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.373776392060885 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.229725192291566 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.085774898529053 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.943130013966323 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.800864934921265 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.657103489903571 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.522839546203613 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.379632518405007 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.236922853397873 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.093219583279618 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.950990129400182 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.80828356086661 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.665906537662854 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.524101996207023 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.391468831471034 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.249482638013045 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.106341792826067 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.964486236157624 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.823457101295734 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.681894530597916 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.54075178857577 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.407174815650748 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.267794132232666 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.126990302535129 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.985656030842517 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.843355913472369 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.70203588854882 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.561069965362549 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.42782931857639 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.28657062973563 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.145948857069016 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.003697794537212 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.860538666064922 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.729410495466858 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.586372483860362 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.449573993682861 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.307036346464015 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.165518910796553 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.022885042078356 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.88305225685565 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.745224475860596 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.602827139037975 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.464162383760724 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.32150069703447 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.179506046671262 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.036998807133495 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.894828094376458 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.754332928821958 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.611884143254528 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.469960953913579 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.332062250859029 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.189187054666097 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.047202189763387 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.905057078165724 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.762953582562898 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.620953609740813 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.47960530318223 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.341144200294249 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.199626922607422 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.0579656385312415 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.9161671203903 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.7742351960835965 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.63282322883606 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.491944875776398 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.352997647391425 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.212102243505372 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.0709007833062145 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.929940180345016 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.788784986518952 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.647644738237301 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.506619317190988 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.36728898590133 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.226287533255185 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.085213811774002 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.9443070223165115 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8033531952455557 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6625699750308334 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5217016083853583 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3805619911714033 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2414933368984586 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.100457502215096 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9594355135656603 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.818799310260349 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6778371940001597 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5368155070713585 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.395939565095745 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2558820558630903 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1149367706195727 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.973892475969048 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8328559577146315 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6917937715002829 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5507484617687406 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4098096646760638 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2694823030401898 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1283279160658517 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9872294497613461 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8461306218019466 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7051083552531707 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5640503387061917 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4229987974699379 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2820828177712181 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14103597971662205 seconds remaining)
    1993 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 9.800 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
