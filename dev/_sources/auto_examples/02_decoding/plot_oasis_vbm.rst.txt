
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f683b135be0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 156.4311981201172 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.805501699447632 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.82071590423584 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.08465917905172 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.565597772598267 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.325265645980835 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.95137961705526 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.779415913990565 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.8515682220459 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.636195765601265 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.39620542526245 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.207488038323145 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.029427210489906 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.84557419556838 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.68738191468375 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.588799715042114 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.44168198108673 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.394405855852018 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.266872114605373 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.15632754877994 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.026267766952515 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.89495608920143 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.774081316861242 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.687096201855205 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.55307594935099 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.488342761993408 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.335164565306442 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.186123424106174 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.050841876438685 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.914051730057288 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.773420174916588 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.64861552176937 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.511253476142883 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.40072933110324 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.3216672224157 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.186755895614624 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.051730500327217 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.924681592631984 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.79630753868505 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.665683880830425 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.53444194793701 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.40839201066552 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.276109309423536 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.187611624251964 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.063305724750865 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.931787941190933 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.807762239290323 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.692948108023785 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.58290159702301 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.51808150447145 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.4204204082489 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.351208995370303 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.25893682699937 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.166391840520895 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.070217971448546 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.967041405764494 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.848179749080114 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.73442650677865 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.610965301250587 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.485029770156082 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.374536434809368 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.243668055925212 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.11564588546753 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.988343579428536 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.86106887459755 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.73559463941134 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.613980148777816 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.489736037467843 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.364768056308522 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.257403200951176 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.129238843917847 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.005446632143478 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.882304297553167 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.761671804401972 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.641666347916061 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.51878309249878 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.398393317272788 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.274602298612718 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.164278996296417 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.040111167521417 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.920029997825623 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.804046451309581 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.684914367954905 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.569354712244976 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.45499508721488 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.336670973721674 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.223165107327837 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.115632449073354 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.00123154033314 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.883362325389733 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.763692405488756 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.640996566185583 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.520040615745215 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.403848191743258 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.285051736425846 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.165573044827111 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.055699865023294 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.936205596038976 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.81670729481444 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.699392846136382 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.583460330963135 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.466431407645198 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.350157616185207 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.230944420527486 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.122448774484488 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.00257268406096 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.884170190343317 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.765632437768383 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.646267670172232 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.526362786599256 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.407538825815374 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.291758911029714 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.17592375619071 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.066264933189458 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.947738998814634 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.831384410028871 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.720766141496856 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.60716890066098 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.494380991337664 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.3768029253022 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.25903606414795 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.141962045480398 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.029973260691909 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.910991098822617 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.792855631920599 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.674922847747803 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.563386667342414 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.457788934857826 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.341977685689926 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.224651728489603 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.106144758371206 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.993534277413637 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.877013741117535 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.760623944433112 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.643997078511252 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.528504442285608 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.410565768971162 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.296308322544515 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.179391055867292 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.061543445792987 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.9495221206120075 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.832200413900064 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.715027372602006 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.597756520851509 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.481718129581876 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.3659729299874135 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.249155622639067 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.132032348996117 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.018098077258548 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.902413819460261 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.785171747207642 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.668954329774869 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.552339127189234 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.436364175447451 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.3200216602969475 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.203340684213947 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.0864661290095405 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.972790836528608 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.856381558164765 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.739647262501267 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.623213887214661 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.507279561913532 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.390637318293253 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.274521871578474 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.158185511100583 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.041807622620554 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.927438830754843 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8112504111078684 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.6948942456926614 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.578741913011088 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4657011172350716 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3555122620878164 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2573922179466073 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.140611782239352 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.025107622146607 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.9081601755959645 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7911542979153716 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6742202387017717 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.557873425858744 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4413193297785756 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.324990193049113 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.20825485761653 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.0915450421008432 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.975871205981312 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8593553045521611 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.742908812857963 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6266227306858185 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5101158351184212 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3941351352853977 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2778425267133762 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1614575135080438 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0450676773231067 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.929224411646525 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8129417352725804 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6966404546167433 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.580415407816569 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4642482339119424 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3481440640948146 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2320468497998787 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1159965692453049 seconds remaining)
    1979 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.062 seconds)

**Estimated memory usage:**  1885 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
