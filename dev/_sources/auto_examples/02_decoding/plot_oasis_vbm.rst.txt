
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f611bc853a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 358.71028900146484 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.213868141174316 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.06921648979187 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.21910961469015 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.99692940711975 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 44.48878240585327 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.57533653577169 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.113191979272024 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.636423110961914 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.20518300268385 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.99833130836487 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.73578576608138 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.489120880762734 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.14151778587928 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.839983224868774 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.670735597610474 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.366469502449036 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.1118511171902 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 39.794188499450684 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.72078786398235 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.40891170501709 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.13770789191836 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 38.82374165274881 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.54717361408731 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.38874038060506 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.12553882598877 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 37.87915299488948 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.59995313926979 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.39153562273298 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.20284355097803 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 36.94453326861064 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.65982296389918 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.40202057361603 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.16616109645728 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.062629882027124 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.163672379085 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.98534854253133 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.76741697981551 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.59251869352241 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.35691575514965 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.09499168395996 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.83115984753864 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.570048377627415 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.36621512368668 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.22556138038635 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.96217997868856 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.71313367719236 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.46951991953748 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.31353863080342 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.08549940829374 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.85357999801636 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.606639076681695 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.42355482394879 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.19445577657448 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.954635107958758 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.715209332379427 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.472105639321466 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.2692405884726 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.025962393859334 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.78566092959905 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.56013369560242 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.34711759207679 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.151200332949237 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 29.92105788654751 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.702507108449936 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.495602699426506 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.26414753451492 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.066142235229265 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.846683277803308 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.637824438620303 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.42117214202881 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.244301302332275 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.012227800157333 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.772969686821718 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.538602590560913 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.304418881734215 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.096817041698255 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.853235616312396 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.61631313348428 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.388253507734852 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.153810620307922 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 25.9506554927355 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.72116562796802 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.489021849919514 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.271518389383953 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.04328405155855 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.840325555136037 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.607481813978875 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.38971255042336 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.162809637155423 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.970095740424263 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.74851706263783 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.518002810685534 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.301698013018537 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.074529282590177 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.874561209427686 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.650714298089344 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.432149134960373 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.208201087251002 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 21.990679362807608 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.785770416259766 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.56191032475764 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.34321435292562 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.117532496313448 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.89584578000582 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.692286037263415 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.469411512590806 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.243053409540764 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.023605699892396 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.822505876558637 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.61883505907926 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.40879834450043 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.193229607173375 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.988101552018023 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.784612764391984 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.563187920528907 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.347829530979023 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.14138002884694 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.935971264111796 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.71736327539973 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.50623353322347 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.29376068785171 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.079062907422177 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.86386718788767 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.640821956819103 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.41960368156433 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.207465826518952 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.997924969890924 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.787549182772636 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.562965984492338 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.342655255244328 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.120351578443104 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.910876461953828 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.693757177295542 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.471106130685378 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.253843713689733 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.039180755615234 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.827377119203554 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.604589144388834 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.383464413581134 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.162908349718366 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.950933508839167 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.72864857190092 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.509694914717773 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.290033459663391 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.07081705126269 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.864108111760387 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.642133521384935 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.423600667231792 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.20598458763737 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.985537608464558 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.771675098810764 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.548759134192215 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.328547828337726 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.104380740747823 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.886913699488487 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.666295864643194 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.446228485957832 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.224240333219116 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.001233169867557 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.783202052116394 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.56299690578295 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.342618874561639 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.121354815418735 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.900930968726554 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.683494575095899 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.463610709431659 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.242681531849022 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.022087097167969 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.800887210834661 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.583331612979665 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.364713224054079 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.144427781881289 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.923685933813195 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.705153207669313 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.484381914138794 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.264360189437866 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.043879785106681 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.823762700798806 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.60512011277609 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.385276158650716 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.166969520610999 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9470294700874073 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.727448894677918 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.5087845636450723 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.289373913326779 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.0696857847193235 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.849675170878038 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6305579936250725 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.411549103953851 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.1921803072879187 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.973342121583629 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7536297738552094 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5345283147584587 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3152365242083048 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.09597337551606 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8765101189516028 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6572825715021434 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4382398995486173 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21911737787064595 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  35.918 seconds)

**Estimated memory usage:**  1904 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
