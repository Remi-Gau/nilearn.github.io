
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f154ff99ac0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 210.87169647216797 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 36.982850074768066 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.54733920097351 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.48916959762573 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.63937973976135 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.07900357246399 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.64697631200155 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.35419225692749 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.027212142944336 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 31.797408951653374 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 31.785887479782104 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 31.543441642414443 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 31.2924587726593 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 31.093014588722816 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 30.863451719284058 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.651334285736084 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 30.670966744422913 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 30.478907599168668 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.260545359717472 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.064690539711403 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.861878395080566 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.675099486396427 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.596828959204938 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.400309935860015 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.203150749206543 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.033122777938843 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.84856227728037 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.660436003296464 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.489426204136443 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.411453633472835 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.22173349062602 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.034786362801828 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.856179535388947 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.678894685976434 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.50248218985165 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.402190344674246 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.240199936760796 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.075890102901973 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.915176692761875 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.758785950831882 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.592698097229004 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.482987997008532 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.359422592889693 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.187579970027123 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.012128960002553 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.839211622873943 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.669212341308594 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.554576325923836 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.379446744918823 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.212212110052302 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.04170274734497 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.868762969970703 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.69261088738075 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.566377158434886 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.390566605108756 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.213975299488414 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.038725376129154 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.881414045367322 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.70647968917057 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.567050380221865 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.3881254196167 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.21365039075007 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.034545083199777 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.857738555423794 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.68494486808777 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.554014737789448 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.382346059336808 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.204929985217195 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.03210237446953 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.859503732211348 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.683978966304235 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.532417109314824 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.369983673095703 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.195629028424825 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.028167524853266 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.860133965810142 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.694274425506592 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.52879292933972 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.38351821899414 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.216245928897134 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.046629548072815 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.879117379953833 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.70816765180448 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.538787344852125 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.412786336172193 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.26339279904085 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.09133006805597 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.921052036614256 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.754393620924517 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.583150944013273 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.434342649247913 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.265128161880995 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.092850425969 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.92156143342295 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.751318439524223 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.58000367566159 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.427735606829323 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.2553594505664 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.087607768117167 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.92078778960488 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.75736403465271 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.590498079167734 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.44407001663657 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.274774625463394 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.10630145439735 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.945878721418834 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.776425883455097 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.605932855160436 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.447303824954563 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.276287326025306 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.10577357899059 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.933371217401179 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.76365063871656 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.596738714032469 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.440639746816535 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.271783403728318 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.101731357903317 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.932814214983559 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.764890197980202 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.596587058876743 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.438838164011637 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.269040915591658 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.099018722284036 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.930159865356073 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.761486084230485 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.5924587726593 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.431736045413547 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.26195487638158 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.093035459518433 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.9234740937403 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.753537599857037 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.584928578092851 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.424231579809478 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.252827821817613 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.08267447130004 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.913313503618593 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.74660031935748 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.576285026369304 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.413608758345895 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.244406281615333 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.074690444128853 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.905274807138646 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.735982206505788 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.566145613476946 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.396542575624254 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.233412791942728 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.063387815266438 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.893892721253998 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.723921924024015 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.554616008028889 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.385787725448608 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.221437395803186 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.052457960028397 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.882706261927786 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.71272688097768 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.543157308332383 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.373819014964959 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.207871757495175 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.038960855218428 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.870041094486068 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.701235711574554 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.533098377796434 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.3662386882452315 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.20078538385637 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.032032571187833 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.863263267459292 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.694934821990599 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.526310045562105 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.357987812587193 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.192865285647692 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.027731713126688 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.859230664738437 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.691172860389532 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.52257794865294 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.359147406172479 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.192889043263026 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.025019277225841 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.8569344006015753 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.6886848546146007 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.5207926028267633 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.3528895378112793 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.186602247354075 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.0185718903174767 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.850453185253456 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.68227133543595 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.5143021119607463 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3462683129054245 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.1783398982675317 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.011567765093864 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8436613297336315 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6759274884274131 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.508197692052232 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3405384719371796 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.172823560052585 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0056297459553198 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8387352014199281 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6709450556307422 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5031669406116311 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3354201967065985 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16768813971898064 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 21.878 seconds)

**Estimated memory usage:**  1899 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
