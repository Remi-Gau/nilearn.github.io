
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe1d121a670>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 204.83732223510742 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 36.181499004364014 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.06169152259827 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 31.92616883913676 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.248600721359253 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.827535152435303 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.560432593027752 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.240424190248763 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.990392684936523 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.791502793629963 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.56123661994934 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.34920720620589 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.102011124293007 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.90009933251601 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.63738478933062 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.3830152352651 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.158456444740295 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.930108042324292 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.711095598008896 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.51260653295015 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.317903995513916 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.13270089739845 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.947925372557208 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.758843100589257 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.59274673461914 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.4315128326416 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.306871139086212 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.14891892892343 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.984580210277013 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.826669479238575 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.665088812510174 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.49878861058143 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.319747149944305 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.145745421900894 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.988229386946735 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.81958293914795 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.65547556347317 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.495432885917456 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.335422302547258 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.167683460773567 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.000529289245605 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.83447450544776 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.67829016276768 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.52044043430062 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.366792808879506 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.20131974750095 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.02379530409108 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.8572323017932 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.77346897125244 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.616509033709157 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.46401333808899 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.30654979687111 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.154998064041138 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.999821325518052 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.84122262177644 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.683746207844127 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.529614789145334 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.372733630632098 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.215008957632655 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.06115625672421 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.911754767100017 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.76118670135248 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.608227852852114 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.44980866189987 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.29278728365898 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.140150418648354 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.992312864823774 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.84567887391617 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.688515032038968 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.531727414200272 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.37884991509574 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.225197536844604 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.07378217909071 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.91706088471086 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.764051276284295 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.613663117090862 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.46111710448014 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.307234702172217 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.1562588765071 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.00483382200893 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.850240111351013 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.69602352012823 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.54725722568791 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.397529165428804 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.245547226497106 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.094661418129416 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.94738948622415 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.796424621823192 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.644588990644976 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.494635943616373 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.344451586405437 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.19978621503809 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.049249255138896 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.898513429908343 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.747966964194115 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.597438360515396 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.449214855829874 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.300403329514966 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.152076375727752 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.00251550626273 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.852542638778687 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.701693140634216 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.55023658509348 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.39949773121806 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.249267358046312 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.098863510858445 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.949716361063832 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.805798011405445 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.655068786055953 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.50486302594526 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.355201872912321 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.204439055812252 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.053657140050616 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.90530167427738 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.754761118637889 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.606578909832498 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.457731608686776 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.30709598818396 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.157244730803926 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.00733250730178 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.8581379254659 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.708223370481129 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.558559495894636 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.409862551262707 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.261686009745445 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.112222719192504 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.964034750348047 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.815479883058803 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.667324423789978 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.518257677093032 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.36965194115272 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.22117708657534 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.071861577756478 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.924626111984253 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.776827812194824 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.627624405754936 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.478472204769359 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.329922531643053 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.18105875927469 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.031984416700952 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.883203438350131 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.734173167681863 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.585085046123451 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.436514907783561 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.288605650266012 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.146671106075418 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.998319593194412 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.849873090276913 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.703119600141371 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.554827203686606 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.407072385152181 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.258546245019168 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.110240434345446 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.9620636039310035 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.813482789250163 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.665537341948479 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.517567066045908 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.369499724382048 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.221268617654148 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.072512145312327 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.924138367176056 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.776818916664361 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.628231440061404 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.47980938367317 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.331622490068761 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.183409134546916 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.035369278436684 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.887231190047578 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.738929021926153 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.590935719789132 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.442572327221141 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.294159166994151 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.1458548168803375 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.9973994762222205 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.84956954265463 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.701257501329694 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.553084926171736 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4046969912146445 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.256340125973305 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1080800088424256 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9599671363830566 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.811984419164078 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.663973082552899 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.516588575853025 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.368471518806789 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.220274068213798 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.072146120891776 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.924033091030019 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7758388925105966 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6280178102866683 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4799569782457853 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3318822471259153 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.183813472588857 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0357583470912795 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.887783583906508 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7398354579240848 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5918647756381911 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4439221081999958 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.29596436384952435 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14798752386965344 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  17.131 seconds)

**Estimated memory usage:**  1905 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
