
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f41a14c4370>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 154.51908111572266 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.978012800216675 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.041030406951904 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.467812220255535 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.068856954574585 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 24.87002420425415 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 24.388058106104534 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 24.03786771638053 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.750816345214844 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.628796550962658 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.42572784423828 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 23.218012137846515 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 23.004750331242878 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.821417643473698 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.765689407076156 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.652033011118572 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.490433931350708 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.340366026934458 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.29137839211358 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 22.11082518728156 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.942933082580566 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.771895783288137 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.690444426103074 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.51669306340425 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.371123949686684 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.23995876312256 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.117988146268406 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.996293129744352 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.85826587677002 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.706132913457935 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.562365929285686 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.461548843691425 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.309921622276306 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.1723651452498 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.03902658294229 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.9062112058912 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.777019262313843 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.66888171273309 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.556005352421813 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.469590113713192 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.325660705566406 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.187459951493796 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.06354698680696 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.927959625111068 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.789146466688678 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.64843832121955 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.514758452125218 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.453176904231942 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.32093890508016 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.19379694607793 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.064587593078613 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.93731927871704 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.808582672706017 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.68144771288026 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.549460163822882 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.41843661394986 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.31375115258353 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.184502501236764 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.055312674621053 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.940270880521354 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.820124626159668 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.69890170410031 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.570503750155048 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.447799156582544 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.31829884648323 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.208758097428543 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.079251795104057 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.95522264936077 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.83109195092145 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.703947627026102 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.58121269089835 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.459773349090362 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.348214043511284 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.239679356143899 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.112723028337633 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.98570203781128 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.862239298067594 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.739136265469837 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.616272993576832 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.492159257961225 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.370299577713013 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.247805742569913 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.136867023095851 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.019274088273566 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.89828620638166 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.775023754905252 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.648463221483452 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.531076576517917 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.407430605454879 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.286212993471809 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.172828594843548 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.04841484604301 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.922993307528289 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.80557123307259 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.686927039572533 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.568906620929116 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.447254121303558 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.33023283899445 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.209564895046 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.09699810153306 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.975967168807983 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.855185895863146 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.733944804060693 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.613817668655544 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.493679706866926 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.375263997486659 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.257233480237565 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.146195309184423 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.02790700947797 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.909112479708611 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.78921989961104 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.669213492591103 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.547735060964312 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.425545612267689 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.301893221704583 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.185698809831038 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.06577231144083 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.945799436324682 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.831032591351008 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.711021405308188 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.589134216308594 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.46668888714688 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.345305818026183 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.224993259926151 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.111740942924254 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.991570568084716 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.870734150447543 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.751054748775452 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.631553530693054 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.511250348054162 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.405566985790546 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.284468627158011 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.16925751801693 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.04871656303119 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.927978512066513 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.806490368313259 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.685464298023897 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.565789776126834 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.446427766827569 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.327801222423855 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.2107243197304856 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.089264597453124 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.968286433690031 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.848151003564154 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.727724446190728 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.605926308138617 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.484648077455285 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.362438907428664 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.242814205788278 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.12580420986918 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.00572927792867 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.88663361719902 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.766480972892359 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.646406097349778 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.525617946277965 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.4054423993633645 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.284432680178911 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.165630217570408 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.044410358501386 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.92373360028057 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.803158342838287 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.683030775615148 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.56306164647326 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.443861525482927 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.323675347537529 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.202367139585091 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.083176681794316 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.96227313087372 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.841706321353004 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.7208303643401557 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.6002242705401253 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.4794980141154506 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.3592003278954086 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.2399888727706294 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.1214516601343267 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0014528547014505 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.881363196806474 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.761320347166331 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.641650666011853 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.5215189057355487 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.401572863260905 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.281296270328332 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1610332137935764 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.041604970973698 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9216296776481296 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8016879300813418 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6815871474563435 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5615627191920969 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4415161863286443 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3215968091651875 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.201394332082648 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0815765246046776 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9613640507062275 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8411491436044168 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7209516063178938 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6007865575643686 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4806813463872792 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3604811980639618 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2402993789826981 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12019332329831531 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 0.641 seconds)

**Estimated memory usage:**  1933 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
