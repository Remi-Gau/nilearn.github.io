
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff099a73be0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 262.5584602355957 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.6453332901001 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 35.98899006843567 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.86811661720276 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 34.46638464927673 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 34.23300004005432 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 34.47672994931539 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 33.94921592303685 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 33.565813064575195 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 33.32155397203233 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 33.02186703681946 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 33.10544820265337 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 33.070276180903114 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.94920539855957 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 32.75881259781974 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 32.629605770111084 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.52738296985626 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 32.593387631809016 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 32.421017964680985 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 32.35680719425804 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 32.19065594673157 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 32.08903646469116 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 31.983931324698712 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 31.835352286048558 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 31.591053009033203 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 31.33380627632141 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 31.110010605591995 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 30.90710374161049 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 30.744035550526213 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 30.63464959736528 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 30.57917833328247 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 30.41180716022368 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 30.2519411444664 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 30.079797239014596 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 29.960019293953394 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 29.74871952193124 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 29.539440711339314 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 29.309092302580137 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 29.1076379449744 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 28.937899021001964 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 28.81764030456543 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 28.57428642598594 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 28.347829035350255 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 28.156177509662715 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 27.958332538604736 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 27.740119722154407 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 27.588106393814087 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 27.450264139378323 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 27.282864292462666 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 27.08981383576685 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 26.89535665512085 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 26.73385638816684 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 26.63468984457163 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 26.560028193131934 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 26.377327000653302 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 26.18435777317394 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 25.98737444196429 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 25.846111423090882 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 25.68252997562803 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 25.501515566292454 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 25.33186427752177 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 25.173503195653197 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 25.031187565095962 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 24.8506972373478 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 24.646380871534348 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 24.45926042703482 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 24.281029253294975 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 24.0897338995293 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 23.94126563913682 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 23.746055164198946 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 23.546329770769393 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 23.366625913431946 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 23.18928061591254 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 23.007000109920764 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 22.851125343425853 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 22.653541564941406 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 22.45928266173915 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 22.29109463444004 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 22.09746690896841 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 21.907188255575637 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 21.734081625938416 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 21.536695948353522 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 21.368440930436297 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 21.18339971461928 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 20.98111912182399 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 20.802888589746814 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 20.615098382151402 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 20.43640815800634 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 20.25932125611739 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 20.091678520266928 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 19.918428712420994 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 19.777976625568265 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 19.593913575877316 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 19.418761325138874 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 19.244761416252622 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 19.06176216978776 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 18.893498440583546 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 18.709963621552458 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 18.54201065277567 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 18.358079414175013 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 18.16938042640686 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 17.980968510750497 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 17.80691204819025 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 17.62441618465683 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 17.43673500647912 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 17.249509028026036 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 17.063474412234324 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 16.877794169933996 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 16.705526784614282 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 16.51433035430558 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 16.329379190098155 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 16.14245957726831 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 15.957468952451434 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 15.770794357873697 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 15.612609591400414 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 15.424767981404843 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 15.247618675231934 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 15.06022248716436 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 14.87273230795133 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 14.696231916171163 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 14.510925928751627 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 14.321915910263693 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 14.13185314272271 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.947282705849748 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 13.757842086976575 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 13.580682563781737 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 13.398677625353375 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 13.215954930763544 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.027907207608223 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.841434645098309 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 12.652509982769306 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 12.474154002793872 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 12.307030302105527 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.141913729502743 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.968510257664011 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.787300339451543 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 11.610257204841165 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.42625139229489 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.243525273558022 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.059369179842284 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.875391857964651 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 10.692631887205948 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 10.513328898120934 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.326478362917067 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.143828723165724 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.962302191504117 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.77698986171043 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 9.590557474668335 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.414653578320065 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.231241507818234 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.048708438873291 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.862947328201193 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.679032677098323 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.494545467538773 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.320353879557027 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.136667174677696 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.951864688824385 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.771730586981318 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.5867781035507775 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.401532377087095 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.22436386346817 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.040468158188815 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.859073247438595 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.675458365422816 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.492519867129443 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.311261343233514 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.133604233523449 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.950834579810411 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.768767583937872 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.586307709033672 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.405353882733514 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.224567370107996 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.046719933665076 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.864531690674711 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.682634515323858 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.501995972224644 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.319930369203741 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.139607086020001 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.960399014226506 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.7803159346127644 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.600040170881483 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.418804284617387 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.2377966734079213 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.0589572471347664 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.878636007723601 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.697732229490538 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.5176360427692375 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.337140017014774 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.1575206137718035 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.9789371503093254 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.7984483493001837 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.6181551399031235 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.4378805756568909 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.2577460454535607 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.0777155345248193 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8983225944714668 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7184397979658477 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5386665678266341 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.35911454576434515 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.17954108223843215 seconds remaining)
    1989 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 27.792 seconds)

**Estimated memory usage:**  1934 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
