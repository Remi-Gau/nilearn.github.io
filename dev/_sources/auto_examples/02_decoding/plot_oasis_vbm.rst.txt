
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f75621b5730>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 276.5154838562012 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 48.47618865966797 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.00378775596619 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.526507218678795 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.05322790145874 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.44446897506714 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.3144915898641 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 42.786657912390574 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.43752479553223 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.27374291419983 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 41.91341733932495 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.88445466214961 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.601513783137 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.29880767602187 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 40.96550416946411 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.77955746650696 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.74601876735687 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.43784099466661 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.16088859240214 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.98348980200918 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.72624707221985 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.44380102838789 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.22614550590516 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.989625028941944 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.69873746236165 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.37165427207947 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.130043690021225 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 37.897956954108345 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 37.630004440035144 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.44383673832334 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.22603567441305 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 36.99566814976354 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 36.773975014686584 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.48478001536745 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.23572317291709 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.01936095101493 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 35.7925160990821 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 35.58203364707328 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.3435231886412 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.1034294580802 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 34.8916654586792 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 34.692886085045046 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.458353735151746 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.214841260466464 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.02289256182584 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 33.7925496896108 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 33.58645310609237 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.34258331643774 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.11722028255463 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 32.897323311591634 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 32.69205379486084 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.47868796423369 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.29054375795218 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.05898450455576 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 31.824413573300397 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.653124765916303 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.406012330736434 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.18104336972822 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 30.965250253677365 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 30.736132803609813 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.528633197148643 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.2917278516488 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.05690546958677 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 29.831508992210264 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.620387941598892 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.41855414097126 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.20445252909805 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 28.983036866828577 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 28.7547987909878 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.522812922795612 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.322609458650863 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.097124328076 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 27.862204233805336 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 27.64049380119533 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.41796141057401 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.199620803197227 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 26.973534395820217 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 26.753695398182064 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.529286494621864 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.306740739677526 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.087612986564636 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 25.85820962470255 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.640308199859245 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.42149920923164 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.214116879871913 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.00230748513166 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 24.77918572758519 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.573329226724034 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.36036304994063 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.138996973466337 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 23.911998060014515 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.690721726679538 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.499528594638992 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.286816445730068 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.071586933541806 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 22.85037630482724 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.6339390873909 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.428763797602702 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.22339803831918 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.000015456267075 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 21.777459859848022 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.55932352802541 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.341979213789397 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.13326532169453 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 20.9149499306312 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.693111782982236 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.46670798535617 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.249245873121456 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.03136686042503 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 19.81419249193384 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.595225962725554 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.376852662713677 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.159112896238053 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 18.93853268370164 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.717079430295712 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.499203671579775 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.276609149472467 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.054333242595707 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 17.83735578747119 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.617028516881607 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.39626391728719 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.177076664837927 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 16.954547518589457 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.73378987040946 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.518653215900546 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.299442291259766 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.076392525718326 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 15.854129074126716 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.63807637989521 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.425750418226848 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.209164215968205 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 14.989749784688003 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.773043748104211 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.560743348042768 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.34726722204863 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.132099487163401 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 13.911261614631204 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.68964755796168 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.476551840270774 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.258154505448376 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.03808467728751 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.817013174084062 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.596716675959843 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.381300397686191 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.171826945410835 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 11.952825718912585 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.73605660216449 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.521745151403 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.30506688195306 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.087912181879851 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.86923297246297 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.666179090146198 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.448160447572407 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.229289513008268 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.020942009888685 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.803904002712619 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.584907574531359 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.366113620199215 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.148015312001673 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 8.928820308649314 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.711761772632599 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.493921096280495 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.273944619261188 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.054956020753076 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.836070444525742 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.620003216194384 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.402058773730174 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.1847446050472605 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.967207454499744 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.748831167728943 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.532346164478976 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.314204712360225 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.095244684884715 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.8765125688100825 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.657638875917457 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.439097915376935 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.2209906578063965 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.003366467642919 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.78546483864945 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.568795094942914 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.352616839938693 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.134935419862441 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9165409947489644 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.6988966647393067 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.4815495325171426 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.263170964009053 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.045961961951307 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.827506804848737 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.6101881341731294 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.392519819673407 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.175199546312031 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9573949818835834 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.7395904958248138 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5220378606430607 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3045423080011742 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0869994224646151 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8694577557700021 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.652037350659443 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4347780352891094 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21739404884415056 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  32.092 seconds)

**Estimated memory usage:**  1895 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
