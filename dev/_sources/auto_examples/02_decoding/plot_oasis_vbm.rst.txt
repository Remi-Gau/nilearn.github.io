
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f25d54cd1f0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 224.01809692382812 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 42.042938470840454 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 40.08206248283386 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 38.7913138071696 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 39.31714987754822 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 38.81246209144592 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 38.639202276865646 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 38.417659180504934 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 38.15629577636719 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 37.72710763083564 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 37.603461503982544 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 37.311349933797665 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 36.97672327359517 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 36.65212143384493 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 36.38443790163313 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 36.08460307121277 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 35.829634308815 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 35.56593270862804 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 35.307229624854195 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 35.00283921392341 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 34.864726066589355 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 34.6259663105011 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 34.47214536233382 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 34.26671405460524 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 34.049095948537186 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 33.83592629432678 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 33.66174426445594 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 33.40293037449872 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 33.21387389728002 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 33.01577284418303 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 32.763060649236046 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 32.55792326311911 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 32.34144240617752 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 32.18037326408155 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 31.990672490176035 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 31.76182314327785 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 31.56811369789971 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 31.319169643762947 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 31.176518252021392 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 30.95724225044251 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 30.764744758605957 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 30.562900752556033 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 30.361323788052513 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 30.1822875765867 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 29.978059660304677 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 29.781502352820503 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 29.62509176005488 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 29.423896216331645 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 29.237987478574116 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 29.038600965422027 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 28.822697639465332 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 28.609913601594812 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 28.411712664824268 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 28.19226379664439 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 27.984644218727393 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 27.77685930512168 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 27.588339941842218 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 27.385269616779524 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 27.198738772293616 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 27.003355349524544 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 26.814022699991863 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 26.6531705113708 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 26.463522872617165 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 26.26242879837278 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 26.07382595539093 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 25.87262892723084 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 25.665010329448815 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 25.46810597092358 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 25.27106536135954 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 25.08209757182909 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 24.891311168670654 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 24.744064415004893 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 24.533946990966797 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 24.327903558130135 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 24.145299138249577 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 23.948744932810467 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 23.75029632919713 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 23.551511606612763 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 23.363035856149136 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 23.157348801818074 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 22.957846641540527 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 22.764602705284403 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 22.58436786256185 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 22.38699557407793 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 22.193502165022352 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 21.998078065759998 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 21.807914123978723 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 21.60925179788436 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 21.407381881367076 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 21.23124391577217 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 21.033928420808582 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 20.84310799902612 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 20.64643142534339 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 20.451264658281882 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 20.261386298118754 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 20.07841199322751 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 19.88430078824361 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 19.684137484461992 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 19.479264575607925 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 19.28759486988337 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 19.089326858520508 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 18.900473674925248 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 18.70878947949877 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 18.51144958468317 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 18.310431993924656 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 18.11832618713379 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 17.933088145166074 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 17.740762242646973 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 17.547076119316948 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 17.349302414360395 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 17.154898361726243 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 16.957616509617985 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 16.765735387802124 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 16.576402275963165 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 16.383537066610238 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 16.187147617340088 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 15.996138638463513 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 15.813778968957754 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 15.620901483600424 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 15.430767684423623 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 15.235151926676432 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 15.045252092613662 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 14.857059810982378 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 14.66231026494406 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 14.466654208398635 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 14.27782917022705 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 14.088617918983338 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 13.896421004468062 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.713817119598389 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 13.518734732339547 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 13.325533371705275 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 13.134738037604412 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 12.945236256628325 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.758184811226409 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 12.568788346959582 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 12.378306441836886 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 12.185079798978917 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.994441747665405 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.801821173101231 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.613489727322145 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 11.423098223549978 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 11.233201353262501 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 11.042560745292986 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.854088863292773 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.663306567404005 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 10.47450279367381 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 10.281189219592369 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 10.088663496938693 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.896693468093872 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.712928511152331 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.5203853448232 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 9.32742862196158 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.135019051401239 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.946351620106915 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.768778999130447 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.576736619395595 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.38473172676869 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.192969745891109 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.001971057698695 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.818455628629001 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.631462097167969 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.441814803188632 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.253751219054799 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.062157737696829 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.874564508112465 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.685158520033865 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.494352297610547 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.304244542550184 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.114554223560151 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.9243011065488735 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.733249159420239 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.5429720739175 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.354076069454814 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.163189183769887 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.971923312921634 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.780515568596976 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.588296207514676 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.395711875904751 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.2034655822796765 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.0118736022011525 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.8225147194332543 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.6314197311085232 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.439838152665358 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.2480137947478585 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.0562905435976773 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.866008996963501 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.6755853058189474 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.483987479286398 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.292551385595443 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.1011765318572837 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.9101670164810982 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.7204759819969457 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.5296201705932617 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.338553364412772 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.1473079268465338 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.9561044864165477 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7649400623477235 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5737350918919907 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3825334346655644 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.19127655867955193 seconds remaining)
    1978 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  23.653 seconds)

**Estimated memory usage:**  1915 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
