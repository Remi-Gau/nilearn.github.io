
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff8b90627c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 174.9563217163086 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.794939517974854 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.394583463668823 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.410996834437054 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.874061346054077 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.852055072784424 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.40657107035319 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.114593880517145 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.89561653137207 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.65755263964335 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.455164909362793 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.294567433270544 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.300038258234657 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.118029062564556 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.92503482954843 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.74646584192912 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.542999505996704 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.38188799689798 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.23029534022013 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.049015120456094 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.998741149902344 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.83140292621794 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.672131733460862 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.504931885263197 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.355931917826332 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.207892656326294 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.05898847946754 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.91359297434489 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.85109921864101 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.702645811541327 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.554104884465538 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.405871106732274 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.256907105445862 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.11256995345607 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.97402798428255 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.83401087352208 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.747094498740303 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.608548048380257 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.459338928523817 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.321022846759895 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.18048095703125 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.03715329635434 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.895672593797958 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.796439509059105 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.65058905428106 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.510790983835857 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.38980267358863 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.245931442747725 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.106183568636574 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.96694448042889 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.826640129089355 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.720541566025975 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.578950019983147 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.444134194895906 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.30273714771977 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.164000207727604 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.03787572043283 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.90176580663313 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.764584442664834 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.656060772427058 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.530153195063274 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.389660030114847 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.253285161910515 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.11477920744154 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.978202283382416 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.84198966393104 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.70711587414597 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.59224056841722 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.454185233396643 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.318197633909143 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.18202464921134 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.0475209229429 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.911288367377388 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.774785874641104 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.657799527451797 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.522913773854576 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.387387024728874 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.25276433028184 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.116409741915188 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.9835160472725 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.851397156715393 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.716267626962544 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.597555840887674 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.463217746780579 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.329017423448109 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.196152546826532 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.061035516650177 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.927338528907162 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.79471475427801 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.660950521404823 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.536180734634401 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.402116235795912 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.270709017048713 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.136342310136365 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.002135286939904 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.86714069466842 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.732444783051807 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.608493136376449 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.473617660756014 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.339221000671385 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.203824996948242 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.069090215286407 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.934707351759368 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.801641718855182 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.670714451716497 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.547214394523984 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.412891050554672 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.27870951189059 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.14522593109696 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.011347335412962 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.878393585031684 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.749961880950242 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.620553152901785 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.494303021810751 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.36020437039827 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.23333832491999 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.099866464220245 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.96632296203548 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.833492493225357 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.699652507525533 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.574663003285725 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.440308718641928 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.305685711688684 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.171430643981065 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.037351646730977 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.905502319335938 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.772028321311588 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.638618459851722 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.509794190526009 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.375974141350088 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.242348230802095 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.109560100176862 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.976557131969567 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.84357938730627 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.711204158726023 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.578602578904894 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.453316969030043 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.319682672946122 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.188790780910548 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.05568821996236 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.9225451946258545 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.789574667071619 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.657095825168448 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.52614393767777 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.398290250036451 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.265343460543402 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.132154379805473 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.00016204840472 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.868690046104225 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.736868221487775 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.604609330495198 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.4756182866380705 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.34271102202566 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.210116350572873 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.07771196613064 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.945504250064974 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.813330882634872 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.680778339410284 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.548407545572594 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.4192058095392195 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.286847293376923 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.154678760848431 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.022449213781474 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.890279066343249 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.758399777296113 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.626118797244448 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.496165502502257 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.363671665420076 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.231181099301293 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.098786244025597 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.966420776703779 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.8340044690851576 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.7015513264855677 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.569091118829099 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.43852039589279 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.306122473308018 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1737176396630025 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.0413635868137163 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.9091818305883512 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.7771371929339193 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6448014577229815 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.512458095234402 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.381494288916116 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.2495273110645067 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1171696704366934 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.9848558773865572 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8524018872168757 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7199861149099422 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.587575668984271 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.455913672371516 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3234880347000924 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.191159732678798 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0587954421838124 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9264164403312564 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7940888798113951 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.661784691688342 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5294024311766332 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.39721233953679275 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2648005052046343 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1323932151698587 seconds remaining)
    1980 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.208 seconds)

**Estimated memory usage:**  1914 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
