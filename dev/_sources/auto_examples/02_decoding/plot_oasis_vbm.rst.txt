
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f851e157310>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 257.92598724365234 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 48.843130588531494 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.54665994644165 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 45.1806526184082 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.48656725883484 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.78764224052429 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.19269919395447 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 42.99881894247873 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.06527328491211 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.66643688413832 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.14505648612976 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 41.91083999113604 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 41.63440990447998 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 41.52103627645052 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.15301745278495 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 40.84602737426758 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 40.53812074661255 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 40.45098407128278 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.0550815794203 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 39.791946147617544 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 39.46180486679077 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.22737414496286 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.152559063651346 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 38.92836517873018 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 38.708483060201004 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 38.43848657608032 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.19107904801002 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.29711836355704 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.12324861117772 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.89287004799678 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.62506898244222 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.456719775353704 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.20281285047531 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 36.98900378111637 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.761045596178846 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.03994332041059 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.14799324671427 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.902828448527565 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.66573511926752 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.382490732730965 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.17195701599121 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.94381844125143 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.68540637833731 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.43093506679978 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.17454416101629 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.98373357454936 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.74885316517042 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.51438067314473 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.30007557074229 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.090057207613576 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.857327699661255 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.63954978830674 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.42712184099051 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.18035406886407 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.9836923899474 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.74923701719804 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.52159547805786 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.27962997921726 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.06345412648957 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.822046865851192 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.579426606496177 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.339679096565874 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.099436598439368 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.90404519202217 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.66380587220192 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.42654743561378 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.189524917891532 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.999193625663644 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.771205930148852 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.55313205718994 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.357885803495137 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.130643209940953 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.920717875162758 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.695871418469572 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.461387982239593 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.217067321141563 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.035008468125994 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.794945500113748 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.56683185773018 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.338940255249604 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.108405590057373 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.900524107026467 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.665065300173875 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.42530824190163 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.191185440335953 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.971712799633252 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.752788194390227 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.522171754946655 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.288880174810235 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.061124697160185 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.866821289062504 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.648410262642326 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.420457083245985 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.188496343551144 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.95715952426829 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.745501844506517 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.53039546807607 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.29913170313098 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.065364861974913 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.853799415357184 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.62623691558838 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.41118263726187 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.18085859336105 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.952214004924 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.74069639352652 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.506744838896253 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.27955716061142 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.0489829722966 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.831533087624443 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.606717842434524 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.376216368241746 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.14391587016819 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.91813768659319 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.71079028391205 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.48239294687907 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.262036727822345 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.034950535872888 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.817456481803177 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.59408518823527 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.37234632908797 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.14327303568522 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.916219671895682 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.69684587932024 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.464997448572298 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.237453153056485 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.0058274269104 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.788361053618175 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.56160318194412 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.33365873992443 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.107558265212894 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.888756128457876 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.67900218126428 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.461224375349103 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.230310449026582 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.99921922897225 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.777136431799994 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.5526362026439 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.321619230465297 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.092298224352408 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.868728027069311 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.6506313255855 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.418500313522122 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.186865299520358 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.957295927968058 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.734597576989069 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.503632233060639 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.27439826155362 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.04539595169275 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.817929544964352 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.599146318115643 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.371846119562784 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.16052807561609 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.93850326538086 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.715886937247383 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.486332261717164 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.26037230030183 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.031320834771181 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.810015573623074 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.581676286987111 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.354629858484808 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.123857319355011 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.897542076821653 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.676643236183825 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.485198146726455 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.278542035963477 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.05224092801412 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.8198592289384585 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.5912389384058425 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.359725861322311 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.12744090825143 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.899481170317706 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.669391017211111 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.438201466272044 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.2076012991756375 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.980127288007188 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.748901878084455 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.518861673095009 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.289211323032271 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.059663341286477 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.830929146132656 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.60196402337816 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.371090454291243 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.140733441153725 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.912033061512181 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.6819016622460405 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.4522113348986654 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.221775847096597 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9926167732891553 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.761969282272014 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.5314381740711354 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.301156119296425 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.070593223521847 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8414601484934487 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6112382115477724 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3809302271026926 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.150674275862865 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9208957321789799 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6906582123131921 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.46038576569220035 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.23016763092884468 seconds remaining)
    1994 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  39.667 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
