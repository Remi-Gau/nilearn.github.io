
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3366b1e790>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 186.9797706604004 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.677616357803345 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.737154006958008 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.97876254717509 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.46102476119995 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.136820793151855 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.11841956774394 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.846452270235336 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.574878692626953 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.34846591949463 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.14690375328064 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.91457202217796 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.723799228668213 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.686827476208027 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.474991219384332 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.29676373799642 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.12107753753662 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.0040998879601 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.846313529544407 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.73720609514337 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.60182499885559 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.427131414413452 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.250874822789974 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.0457441703133 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.88416274388631 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.711442947387695 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.62322502869826 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.459133757485283 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.2991989340101 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.152903014215926 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.981264670689903 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.82097764169016 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.667388677597046 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.55866234952753 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.397949835833384 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.268760715212142 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.117339875962998 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.954460163374204 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.805370481390703 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.652511156522312 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.530811309814453 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.378249680123677 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.22416681335086 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.076544667399205 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.931506958874788 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.7783506181505 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.617628232292507 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.496261114769794 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.353007793426514 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.195930461494292 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.0414981842041 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.883876683665257 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.733770003685585 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.556799371287507 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.3513791207914 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.125205105001275 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.9046870640346 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.686735922830145 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.505798816680905 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.370586892305795 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.22342403729757 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.0682249420979 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.940283306183353 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.815364137528434 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.663089632987976 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.539950279089123 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.410267562577218 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.28833881065027 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.156445377013263 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.043184332225632 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.91722617830549 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.77321563975912 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.64868927001953 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.51250476706518 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.384551467122257 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.270630836486816 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.136262705451564 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.009890277664383 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.867603674913063 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.72738359246073 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.590459942817688 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.456465609279682 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.33266634475894 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.197410623711274 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.06032699630374 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.935579776763916 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.79497921744058 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.65666616648093 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.53613463315097 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.39732552110479 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.26156242688497 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.117210393423562 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.97046060147493 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.835077701076386 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.699093159208905 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.575690445147064 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.431255916754404 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.293788098797355 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.145453005420919 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.030319955613876 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.890073537826538 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.757958832353648 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.615355126998004 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.467251715150852 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.323383037860578 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.178327299299694 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.034000149313009 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.893169086670207 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.761454608705309 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.619042584655482 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.472678921439432 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.326806476524284 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.184579423495702 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.04473586842022 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.91011613293698 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.765081996503083 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.619968356757328 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.475083296115582 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.328138416096316 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.183672918992885 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.041103680928547 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.895715884925906 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.747747628415217 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.597389936447144 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.451169852287538 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.302200508117675 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.154876708984375 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.009659502449937 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.862482622265816 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.713153855745182 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.564591316076426 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.415823168426979 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.266342603799067 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.12273153147303 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.972893010324507 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.824453866040265 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.675210055182962 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.526554420916703 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.376861029776974 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.226769202047114 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.08424721445356 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.933537359778763 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.784446545050178 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.632322728217066 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.481468319892883 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.33257269859314 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.186822744264994 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.03767627923667 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.888072406923449 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.739166013346423 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.588576475779215 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.438508586378287 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.29241260729338 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.146794546663372 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.995640627749554 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.844171770157353 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.692627319922814 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.54074356358522 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.389386744438847 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.24128406302734 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.091019153594971 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.939801509335915 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.788345313366548 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.63648002864393 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.485777651391378 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.335046753738866 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.184408452137407 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.032892065847705 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.881497065226236 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.730408465368508 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.578012480455286 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.4265179411012525 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.276064817295518 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.123803931164604 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.9717598947985424 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.818820408412388 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6669481775977393 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.5140301723264704 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.363210605771354 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.21056491969018 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.0579263899061413 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.905659968023142 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.752542029370318 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.600041411613506 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.447116167648979 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2956758834220268 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.1425967370310137 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9897215111370392 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8369251261366173 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6838771603094838 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.531169201198377 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.378599845926175 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2256945669651031 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0726329156154177 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9194586104953413 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.766460657119751 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6131820240799261 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.45996038925829275 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3067664449865168 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15338507728960046 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 10.017 seconds)

**Estimated memory usage:**  1908 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
