
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f00e6e46820>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 179.20255661010742 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.49512815475464 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.28987169265747 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.65558743476868 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.381082773208618 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.150115251541138 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.860675334930423 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.557295663016184 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.411022186279297 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.234535455703735 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.13874316215515 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.03796078942039 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.90263279279073 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.794978270163902 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.632466214043756 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.497170607248943 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.328235983848572 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.08649856903974 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.87981186972724 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.67871949547216 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.506603002548218 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.29533603077843 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.248308008367367 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.101269690886788 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.885812600453693 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.695988416671753 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.48379010420579 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.288524954407304 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.11944481304714 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 21.92705803081907 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 21.75441837310791 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 21.608163241417177 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.431097149848938 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.257147001497675 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.099877764196957 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 20.93064205987113 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 20.776474157969155 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 20.622727800059963 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 20.47306978075128 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.35440881435688 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.219127655029297 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.095495567089174 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.987059956505185 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 19.88052543928457 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 19.768766381523825 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 19.662529495027332 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 19.54673685198245 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.39941888159894 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.26407738526662 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.116452003011897 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.959436893463135 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 18.81175996275509 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 18.66392970085144 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 18.51543677977796 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 18.366170900839347 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.24441157687794 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.099726676940918 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.95709501651295 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.81294776653421 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 17.66990037287696 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 17.533722956975303 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 17.40992431953305 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.26881662491829 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.128117534849377 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.991469711065292 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.870585496609028 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.75102282292915 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.641552448272705 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.520185105940875 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.392662393874016 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.275045701435634 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.15508889480376 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.031268225775825 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.920833937109334 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.79706125646024 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.680078665415447 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.562699593995747 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.438579175379369 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.304465905213966 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.174950156030775 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.042739391326904 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.907389749715358 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.774320631492428 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.64144291073443 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.508909361703054 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.383410271476297 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.252791293831757 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.127874357946988 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.002094355496492 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.88163693031568 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.759733067618477 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.642525940151005 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.523396232853766 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.405426140754455 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.287967164465721 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.163888793242606 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.041913231213886 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.923128651589462 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.804185030411702 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.68409226879929 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.56701946258545 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.445548810581169 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.319837130752264 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.18962403408532 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.06534532400278 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.934360288438343 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.801862815641007 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.673315638693694 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.544139137974492 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.41398946735837 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.288042697039518 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.166104370409304 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.044892617634364 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.922363196854043 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.803745115012454 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.677425115004828 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.557608990833677 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.435083525812525 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.317794557345117 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.19465658043613 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.073028723398844 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.953378320725497 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.832984650721317 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.713565776018593 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.588068423732635 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.458812522888183 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.329622185419476 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.198281952715295 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.072773829102516 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.942338729089544 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.811696749467115 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.681936879194419 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.552121964367952 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.423040918837813 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.293233163321196 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.165658818350897 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.038892072789809 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.910993302825593 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.782203553379445 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.656344662467353 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.528347424098423 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.405858739893487 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.279783285839457 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.153936801256833 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.024199763933818 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.895334317766387 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.7824400320445015 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.65617501492403 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.5274953971038 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.400326207180151 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.274080355962117 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.1463338112989 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.018267104500218 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.891888194613987 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.764552193802673 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.636928527585922 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.511061741755559 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.386197664175823 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.26240720628183 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.137695168549159 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.014357328414917 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.889665594752531 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.764791359136134 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.640565271026517 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.516111990300621 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.391775427442608 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.268686084862215 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.144486500117593 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.019891557239351 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.8953918775863197 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.771208721048692 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.646854420154415 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.52249477075976 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.397546518744761 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.272536787493476 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.1473024572644914 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.021861141378229 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.896304294887909 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.7708634071135787 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.646082026998424 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.5206499364640975 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.3952192074686125 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.269869851542043 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.1444530513117224 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.018767833709717 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.8933627218813511 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.7676435875636276 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6416622330160702 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5160124910638686 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.3900622829558356 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2641074280989797 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1381341175259096 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.011838932832082 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8855853056042923 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7591816715358459 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.632785283602201 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5063255806358493 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.37985838004175176 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2532617949476146 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12665715409283662 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.147 seconds)

**Estimated memory usage:**  1839 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
