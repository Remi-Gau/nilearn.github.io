
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fd664d1a0d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 171.43964767456055 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.15491604804993 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.27950692176819 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.940963109334312 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.090444326400757 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.565701484680176 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.14196618398031 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.80459874016898 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.528188705444336 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.508955425686306 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.280313968658447 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.085176923058253 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.89316948254903 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.71685759837811 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.537663323538645 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.348385334014893 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.327122569084167 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.151531780467316 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.164205975002712 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.065502003619546 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.992422342300415 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.849849144617718 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.693771275607023 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.61506209166154 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.427573521931965 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.25991439819336 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.08974935458257 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.922655944471007 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.747570616858347 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.578469112001613 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.414765119552612 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.31843147739287 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.15273827314377 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.996817205891464 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.842459257911234 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.686986344201223 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.531430668301052 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.37852853053325 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.2283969176443 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.127363107143307 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.985280990600586 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.8279100162227 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.72142618043082 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.568777699803196 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.422246022657916 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.277224514219498 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.179795648740686 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.0332261704384 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.88080930709839 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.736425428974385 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.585724592208862 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.434657989763746 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.28558509166424 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.17768960179023 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.03018120483116 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.885389393026177 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.741732733590265 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.592481027569686 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.451527044690888 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.304334228321657 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.160574833552044 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.046402829592346 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.905785514462377 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.76107223071749 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.617652237415314 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.4731725362631 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.32862578016339 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.185528986489594 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.040516881381762 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.924408380536065 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.78131937980652 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.63566871428154 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.491068098280163 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.354406967555008 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.2155403897569 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.076585292816162 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.96279862052516 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.82840532451481 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.69274125343714 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.557662206360057 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.42351269721985 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.287980633017458 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.154622740861846 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.043477900056953 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.904894068127586 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.76803262093488 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.629474351572435 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.493513962318158 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.356079405004328 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.219958763444021 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.082167042626276 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.964376211166382 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.828061228213103 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.68924008646319 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.548547572277961 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.412710327851146 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.274249116579691 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.134884234556218 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.02250996414496 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.88391174692096 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.74311113357544 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.602401747561917 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.461782361946854 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.320263182075278 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.179239493149979 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.063826413381667 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.928447161080703 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.7893526620954 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.649470850273415 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.509176477379755 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.368590593338013 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.229252821690327 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.09062876020159 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.959737697533802 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.821236401273493 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.683999870134436 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.542929410934448 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.402806628463615 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.26244895741091 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.122946743203812 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.992751916249592 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.852644153862945 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.713759453570256 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.574959328504113 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.435651125446443 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.297362470626831 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.158483543093242 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.019986274674183 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.888456657528877 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.75056973723478 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.612311381560104 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.475281163936353 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.336755080656571 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.199286294162722 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.065630233109886 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.933445126922042 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.795225480023552 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.657794282384163 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.519889686418615 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.382355858096115 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.244776487350464 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.106540728968087 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.97409087839261 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.837039617391733 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.6995867358313665 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.5617338377853915 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.423365648478677 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.285678962460992 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.147526947227685 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.0101748552898435 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.8763487339019775 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.738843039961051 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.601547391791092 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.463642070496005 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.325472717161302 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.187591506588844 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.05022528844002 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.916097106447645 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.778430386434627 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.640612054920796 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.503397464752197 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.3654446927657045 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.227420415407345 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.089984715350567 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.954289953883102 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.816828294233843 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.678640196122319 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.540318062205515 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.40197567712693 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.263465235219199 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.125953351750094 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9886716917941443 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.853272282800009 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7152694387932046 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5774999952864377 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4395347322736467 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3017412640831685 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1642155822387523 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0274596080351412 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8911460844498107 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7534126440684 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.615654103663745 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.4776153695452345 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.339584355797273 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.201727763466213 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.063892680245477 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.926083085357502 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7896223450727005 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6517625514497147 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.513951296528811 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3761336301502427 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2384034938213089 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.100739598274231 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9630511671767951 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8257040903740323 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6880270701188307 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5503481358897929 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4126896712985741 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2750877153993857 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13751446422020994 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  7.057 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
