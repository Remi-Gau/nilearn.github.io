
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f752ccf2100>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 220.71361541748047 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.67914819717407 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.36485409736633 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.69584099451701 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.41008758544922 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.00412654876709 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.878170967102054 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 31.472719873700825 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 31.09174919128418 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.881817897160847 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 30.611823320388794 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.38102472912182 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 30.167450269063313 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 30.112709283828735 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 29.907941068921772 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 29.73409366607666 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.652021050453186 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 29.59426638659309 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 29.496274047427708 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.449867524598776 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 29.287188291549683 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 29.16066572779701 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.001040545376867 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 28.827744639438134 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 28.659886995951332 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.610349416732788 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.457047572502724 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.27692378891839 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.082681076867242 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 27.8706859637951 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 27.66913978258769 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.548346411797308 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.354387760162354 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.166401277888905 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 26.978412277558274 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.800861256463186 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.61706813176473 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.424613772211845 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.28338569088986 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.098548363416626 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 25.915968894958496 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.725327294047286 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.547709203901746 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.37082774140114 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.24849306453358 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.08682669533624 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 24.923437958178315 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 24.763067996248285 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.643550594647724 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.489019895086482 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.357115745544434 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.19668092914656 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.044878922975983 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.874640730192077 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.711740564416957 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.530297712846235 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.350989818572998 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.195185456359592 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.02289052667289 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.841385417065375 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.657052278518677 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.487040480629343 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.304974471369096 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.15243893956381 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.9959035217762 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.823744462086605 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.658192266117442 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.472315898582117 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.29336702122408 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.12595445867898 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.983634914670674 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.81438154569814 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.650716569688583 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.47187872128944 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.296956809791357 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.118659734725952 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.964857452794124 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.79079195740935 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.619362568243957 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.44591143463231 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.272870182991028 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.103800202593394 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.93145100663348 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.783830045217492 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.612701620374406 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.44507915833417 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.275225217952283 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.105182162646592 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.93450199473988 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.779054424735936 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.612615134980945 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.45243486729297 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.291411690090015 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.129962780142346 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.972040896720074 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.809145613720545 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.66482408841451 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.500793272686987 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.33604569337806 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.17369380623403 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.011220455169678 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.848432120710315 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.697136575100469 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.532219845114403 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.364056587219238 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.199562924248832 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.035060446217376 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.867704908424448 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.7042587156649 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.555724126483321 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.393933447924528 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.229073606095874 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.062842045511518 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.896898212686049 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.731524630596763 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.581111845762832 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.423300932193625 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.262930623486511 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.105279348664364 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.941458760189409 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.776522159576416 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.613292895072748 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.457897870267024 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.293478517997555 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.130039714997816 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.96662459373474 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.803190223754399 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.640566855903685 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.487156629562378 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.326510861862538 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.163282100970928 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.000728499798374 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.8393119392973 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.676517554691861 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.51371603225594 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.361016785656965 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.199455597821403 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.03714965903846 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.876508249752764 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.717125981831721 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.55725758416312 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.403308246152621 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.242080634748433 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.08065578820822 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.919049541155497 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.758438250114178 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.597086968487256 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.435724263288536 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.279166640462103 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.121645471393663 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.960406303405762 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.799846543381546 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.63831269113641 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.478900892282623 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.322328366242446 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.162261755235734 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.00147576821156 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.840819636727594 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.680749355992184 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.52050707025348 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.360036015510559 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.204149816347205 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.045374343424667 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.886044345750399 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.726186374338662 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.566350647897432 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.4067885128848525 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.249963050830864 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.090373084658668 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.9306560253955904 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.770935591529398 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.611153912125972 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.451818482820378 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.2945620641543 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.134829671903589 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.975344453539167 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.815766627138311 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.6564250100130415 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.4970955902271057 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.3377719897797653 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.1800967057545977 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.0205624762161 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.861106956398094 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.7019118715505135 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.5432984310647715 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.384617953687101 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.2269443901636268 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.06751247140813 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9082228528692367 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.749074272377781 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5900278216914125 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4308545913995874 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2717931667963662 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1132287484994206 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9541021696071035 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7950551020793425 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6359574794769287 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4769115254358592 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3179616398281522 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15902299497594785 seconds remaining)
    1971 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  16.760 seconds)

**Estimated memory usage:**  1892 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
