
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f51d6099490>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.2369613647461 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.95193600654602 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.761026859283447 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.935853719711307 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.651111841201782 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.784258604049683 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.341440836588543 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.024424518857685 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.723390579223633 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.45810471640693 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.226751804351807 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.00436596436934 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.984992504119873 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.783531665802002 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.614888463701522 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.424964666366577 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.24897265434265 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.09353644707624 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.955258157518173 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.79021279435409 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.908432722091675 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.810275441124325 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.73308090730147 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.565064160720162 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.418341954549152 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.255324840545654 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.276348132353565 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.189618013523244 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.024062633514404 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.245992208349293 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.161054531733196 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.988443851470947 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.837271630764008 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.73545528903152 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.563696047839 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.407322849546162 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.250493738386364 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.099295777243537 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.938650156322282 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.77871496860798 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.619945526123047 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.516330282862594 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.359607605707076 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.204410907834074 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.04852453145114 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.891904883914524 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.741683617882106 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.58520026917153 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.473330934842426 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.309055459742645 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.149715185165405 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.986212814555447 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.82674941649804 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.6704631796423 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.509841751169276 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.38723204352639 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.236338819776265 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.08840967061227 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.940371554473348 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.7824816340107 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.63080143928528 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.4798785897552 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.328204893296764 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.207580679938904 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.06074544787407 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.921164659353405 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.767630772157148 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.621050905825488 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.472296911127426 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.32335306250531 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.20035457611084 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.06296394240688 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.91905805799696 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.885118507359127 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.77760102942183 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.626597483952843 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.476991151508532 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.35713696789432 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.20908479201488 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.05691435367246 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.90641438961029 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.757555470054534 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.608068867427548 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.45793738709875 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.328287612824212 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.17962852646323 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.03257042862648 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.885586977005007 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.737134976820512 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.590632808342408 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.441535234451296 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.294380782724737 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.168668933536697 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.019605339214367 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.869926346109269 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.722068297235591 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.574062744776407 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.426540212532908 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.280406995695465 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.147409321081758 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.001915216445923 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.856730909630803 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.713456392288208 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.568780301844033 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.42373591202956 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.281485478083292 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.14065935476771 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.012443399874963 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.868539324513188 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.725736106207611 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.581264409151945 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.437796983632955 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.29608040196555 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.157090775734556 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.027601225334301 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.885951829993205 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.743765230836539 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.624569927525316 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.522526082345996 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.380456714069142 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.239579677581787 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.104854272416802 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.96025758102292 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.816265433784423 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.67324073083939 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.537024354934692 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.393066077005296 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.254053436865018 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.120089948177338 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.977855072465054 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.834338775047888 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.692719252054928 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.56262048808011 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.41942508597123 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.276794234318519 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.14175859204045 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.998981924617992 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.856031377820203 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.717430978581525 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.57420389600795 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.430849143436976 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.288482769161252 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.14930538056602 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.007391731222192 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.864423619376288 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.720920225669597 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.579007697432008 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.43666426340739 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.294429669509063 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.153240922313409 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.01454742749532 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.872125474032977 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.729823614421643 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.587758304246891 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.44556956786614 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.303847028363136 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.162450160735693 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.024527405477633 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.8830077829240235 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.741925089614196 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.600908160209656 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.467006191703844 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.34365341692795 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.202453105727588 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.0638218449383245 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.92195657527808 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.780002616974245 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.638530983896312 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.497257414318266 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.35852136414432 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.217343765146592 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.077835333974738 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.936214885046316 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7949106927551974 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6535869384634085 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.511908973966326 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3704952218315816 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.229157499000851 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.088135004043579 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.948571450217476 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.807754357655843 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.666742162809846 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5257356140639753 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3848768179533915 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.244112844052522 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1036011463886983 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.964013720071444 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8233031640078294 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.682632212943219 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5422042942551708 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4017956382349916 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2613505643075673 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.121064692735672 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9806662828811091 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8407397024410287 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7004140584896772 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5602416116364147 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4201175767153048 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28003941160259826 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14000533214166536 seconds remaining)
    1993 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 7.365 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
