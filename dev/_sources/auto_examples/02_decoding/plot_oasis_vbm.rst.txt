
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8ccd424f70>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 279.9391746520996 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 44.85511612892151 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 41.38405179977417 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 40.15903536478679 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 39.15559244155884 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 38.43026375770569 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 38.110427935918175 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 37.722993680409026 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 37.36566925048828 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 37.156365341610375 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 37.07404589653015 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 36.68375515937805 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 36.38298320770264 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 36.018527452762314 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 35.810741901397705 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 35.63092279434204 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 35.49150013923645 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 35.26247675278608 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 34.98348779148525 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 34.70978201063056 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 34.519933462142944 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 34.27846233050028 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 34.019239685752176 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 33.80464693774348 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 33.59119272232056 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 33.417420387268066 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 33.21294857905461 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 32.99013626133954 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 32.920029640197754 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 32.75351480779977 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 32.58095280329387 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 32.376707315444946 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 32.177581429481506 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 31.954261165676694 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 31.79020904092228 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 31.596141610826766 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 31.445378939310707 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 31.238567281413722 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 31.039980035079157 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 30.84969228964586 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 30.649210929870605 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 30.441458388072686 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 30.248519670395623 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 30.041538227436153 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 29.85430318659002 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 29.66914063029819 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 29.48483727289283 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 29.26954597615181 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 29.084648569424946 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 28.874325995542566 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 28.66476559638977 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 28.451212317335838 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 28.2709203683413 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 28.070560252891397 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 27.86777455718429 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 27.702619682658803 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 27.512770925249374 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 27.332719618814032 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 27.133197562447908 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 26.933608580443817 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 26.735968510309856 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 26.532934669588435 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 26.34733878412554 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 26.16467570123218 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 25.96661749482155 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 25.77530039273776 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 25.57039218960386 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 25.371055446453948 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 25.174904486712286 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 24.983507284219716 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 24.79029062816075 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 24.587773702514003 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 24.38490549723307 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 24.18530406364023 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 23.984975357313413 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 23.78359158833822 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 23.588942766189575 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 23.388912835678497 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 23.204157077349148 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 23.01035982747621 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 22.817660093307495 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 22.621966052938394 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 22.441042295316368 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 22.274989860603608 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 22.079074814206077 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 21.889284190009622 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 21.692659793898116 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 21.492606809769555 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 21.29569981314919 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 21.10547230216894 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 20.90998238987393 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 20.712703524055062 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 20.519724337950997 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 20.325874746486708 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 20.133601939424555 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 19.936806001161276 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 19.745399316151936 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 19.550590077626335 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 19.360286352585774 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 19.168545874682337 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 18.973588705062866 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 18.78524145041362 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 18.598052796195535 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 18.40349797369207 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 18.215380888718826 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 18.027157431557065 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 17.83254090794977 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 17.638700255723755 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 17.44670400796113 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 17.252933952786506 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 17.0770415392789 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 16.88779484259116 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 16.69972649642399 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 16.5080688632695 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 16.31534023033945 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 16.12628884937452 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 15.934292521970026 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 15.740635042516596 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 15.548895819712493 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 15.35938293192567 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 15.169982433319092 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 14.981286178935658 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 14.79056474810741 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 14.600304370973168 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 14.414096963021063 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 14.220953893661498 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 14.030751061817957 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 13.839108348831417 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.649748131632805 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 13.460245788559433 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 13.268627221767717 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 13.078191584303179 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 12.888184229532877 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.699730856974323 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 12.512376948968688 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 12.330042397534404 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 12.143754398121553 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 11.960696566713988 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.770247780758401 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.578937954182248 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 11.388018199375697 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 11.19708546002706 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 11.008634526964645 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 10.818297831328598 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.628905375798544 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 10.437513400768411 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 10.248531112932179 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 10.057418338295554 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 9.867469001460721 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.680694896902814 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.491273641586304 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 9.305647238990328 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.116604303058825 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 8.925095043930353 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.734352929251534 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.545137912996355 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.355542476360615 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.166091682045323 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.977835096890413 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.7859111641937835 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.5963521003723145 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.407268524169922 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.220130858597932 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.031249735252989 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.845341252117622 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.654716072660504 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.463901189436395 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.273126352333024 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.082942372276669 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.8920452693510335 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.7017061289619 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.510942710073371 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.320542451947235 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.1308306173093055 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.94068735495381 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.75060190473284 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.560569546439431 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.370032389958699 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.179631383231516 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.9890877001778375 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.798611243565877 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.608422210861965 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.418109713019905 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.2282792401444067 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.038350126017695 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.84871413256671 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.6588370005289717 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.468726541906755 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.2786532057092543 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.088898663798337 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.8999377928282084 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.7098880138696801 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.5197715957959492 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.3297008838060604 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.1399084661424774 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.9498946544451591 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7598619898971246 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5698508937951877 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3798770928623701 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.18995299650796096 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  23.911 seconds)

**Estimated memory usage:**  1898 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
