
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8febe059d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 273.1442451477051 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 50.7287015914917 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 48.02535152435303 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.07150340080261 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.712109327316284 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 45.36526107788086 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.76557795206706 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 44.31045069013323 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 44.152822494506836 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.7230994436476 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.29650259017944 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 43.18521328405901 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.793420155843094 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.677740977360656 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.32203756059919 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.08956893285116 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.77761244773865 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.68187002574697 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.41987657546997 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.08479654161554 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.98822641372681 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.72016829536074 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.575634089383215 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.310676782027535 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 40.03608560562134 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.75878715515137 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.60611871572641 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.320984213440504 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 39.04451813016619 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.789991937834635 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.51663152376811 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.330964349931286 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 38.05481457710266 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.80008146979592 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.53192651973052 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.28221126965114 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.08108443684048 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.83839802484255 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.59433087549712 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.33322062247839 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.181023597717285 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.92466630005255 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.67726424762181 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.42946391327436 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.20567326112227 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.00823383861118 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.74695348739624 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.52716040611267 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.28596023718516 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.08352409090315 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.83721613883972 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.60152269344704 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.443991239254295 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.19431092154305 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.989013671875 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.73066438328136 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.51389707837786 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.26861287836443 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.06587012060757 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.819036148362237 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.568426132202152 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.330764930756366 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.187167559900587 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.968487380042905 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.734220147132874 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.51941145383395 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.288720831726536 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.08668960030399 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.83441686630249 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.622578036957893 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.37099688393729 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.137775568894938 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.93323304918077 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.699246507801423 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.45782328296352 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.209195137023926 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.97139044811851 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.77537397595195 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.54615319080842 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.310676248767706 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.08292818069458 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.86869618922104 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.632167071830935 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.409590264400805 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.183243399574643 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.95001215093276 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.735645693401956 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.50471441225074 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.26633141257546 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.030728032079974 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.810976134406197 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.577486321166322 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.35764413294585 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.126972826578285 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.89500831543131 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.674589094362762 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.44957081476847 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.213604592785394 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.980171262001505 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.754620783256758 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.546154260635376 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.309025549652553 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.075445240619135 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.84468001995272 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.626536736121544 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.398247718811035 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.167567451045198 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.938476622661696 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.710904050756383 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.501302509132874 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.273461623625323 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.052476180566323 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.82500469684601 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.60775682778485 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.378105477282876 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.179765701293945 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.948818552082983 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.720887758792976 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.515968888492907 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.284460446413828 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.05237913131714 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.82136938394594 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.600276986106497 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.37176256257344 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.14250095428959 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.913162899017333 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.688412900954958 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.465410940290436 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.253993779420853 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.03958074436631 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.812209624510544 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.591062422017105 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.36388376264861 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.137202786323721 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.908756170699846 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.68015800582038 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.465386334587546 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.23912571120436 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.00856135893559 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.780922857119883 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.562710353306361 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.333308810037924 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.103134104903315 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.872593377853606 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.648101568222046 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.428483494396867 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.20873655031805 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.986583451835477 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.762308307596156 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.54405631314988 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.324745655059814 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.095038707682628 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.866073457818281 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.638427538030289 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.414841286547771 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.186460933377667 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.959069362053505 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.731261154648605 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.510949355137498 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.283496129437813 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.056382894515991 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.830177736578522 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.601931839813421 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.377542175398283 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.148973127690757 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.920652367851951 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.693440885428923 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.467198907258268 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.240320387340727 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.011944444927238 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.783889195498299 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.556622100852386 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.33217321440231 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.1052295982493145 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.877501180802269 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.650009291512625 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.423350485888394 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.19860048482647 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.973482970441325 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.7470510338937775 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.5210532082451715 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.296896156026514 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.0700240449591 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.84327026794517 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.616573375204335 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.3905125437556087 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.165202474081388 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9385160048377705 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7133213002631003 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4872974113181785 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.2620151795839005 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0359828185036544 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.809969147046407 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.583868545571757 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3589476088887638 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1332195905538704 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9065984317234583 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6801538467407227 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.45362165961602724 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2269151498324907 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 31.264 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
