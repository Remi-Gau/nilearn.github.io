
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1a46fd09a0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 270.8268165588379 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.20879149436951 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.58046007156372 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.843700885772705 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.83708930015564 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 44.42988681793213 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.89501555760702 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.45263648033142 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.260154724121094 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.488735861248436 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.17991065979004 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.810997139323845 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.33888069788615 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.17211758173429 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.897235938480925 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 41.525684754053756 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.26676046848297 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.17989740652197 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.04233566919962 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 40.820641003156965 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.472280979156494 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.25870269820803 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.13143216479909 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.82694450668667 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.59019215901692 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.287659883499146 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.02588152885437 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.85080411699083 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.561088051114766 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.25378061985147 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.974390824635826 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.71487276015743 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.559596717357635 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.513830466703936 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.22068802048179 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.956765924181255 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.762264278199936 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.481359178955486 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.18722880514045 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.900883008272224 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.63788414001465 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.47232201622754 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.215627499989104 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.936079934585926 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.68281494487415 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.430744859907364 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.23282325786093 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.975295741507345 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.72195768356323 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.506794331025105 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.3138313293457 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.195640764984425 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.98144265321585 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.75588614535781 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.515351895932795 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.33771061897278 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.11410447529384 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.860227091270577 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.607033787102534 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.366589239088153 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.149326642354332 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.90298656557427 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.6610959499113 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.42771096078176 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.21724420785904 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.977271318435672 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.737098823894154 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.49291607159287 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.263157171361588 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.051028040872104 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.817599569048202 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.57715439460647 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.34584299723307 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.10016877357274 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.883411027289725 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.649425665537517 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.423845554652967 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.192162055473823 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.964578176156067 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.76831728295435 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.55478298664093 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.335965000552896 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.115005673431767 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.91062614716679 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.683213540485927 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.449218273162842 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.22561322811038 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.005629936854046 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.790742484006014 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.55592851960257 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.337104452980892 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.105931153664223 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.890578715697583 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.656582424717566 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.4383938667622 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.206622864070695 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.97550141811371 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.758696720772182 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.531184376502523 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.309267988108623 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.080448150634766 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.85050840897135 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.673951032114964 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.46144640098498 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.24215632218581 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.015409094946726 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.800764961062736 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.572291755230626 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.35233169131809 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.233042091404627 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.075660900636155 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.844621166452633 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.618156143597194 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.395469209789173 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.165256353846768 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.950369741605673 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.72172211778575 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.49285362724565 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.26231619867228 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.041428724256885 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.814908981323242 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.59170873303059 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.362706622139353 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.137391092331427 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.9171156267966 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.6883593082428 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.466380683202594 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.236549796081903 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.011076167225838 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.789784167164056 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.562945934442373 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.347012332377542 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.124766263094815 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.90580097176975 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.688353947739103 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.465817504458956 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.242393493652344 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.0220648024204 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.806300446607064 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.585489995187993 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.359955276761735 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.13275393695696 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.906804504528852 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.689140449870717 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.46397528383467 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.239836849015333 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.014101825348318 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.793910775865827 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.564769506454468 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.341317880873712 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.122424364089966 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.897374500502025 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.675061552148115 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.44800477246054 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.221053386663462 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.994192369522588 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.767059619610126 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.546662617640889 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.32289818268788 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.098010713949144 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.875090837478638 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.654534464297088 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.42985631801464 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.205270378136197 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.981902279504916 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.759941736857097 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.537986459502254 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.313441816204323 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.08925537835984 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.873229077581823 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.650829245062436 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.430697074410511 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.208436566729879 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.986861723695877 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.763743269032446 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.541727134159633 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.320316824046047 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.098939276010976 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.876338256878799 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.655496617269249 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.436287773980035 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.213339846437148 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.9913675994663445 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.7695462391024734 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.547066999518353 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.326703458218961 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.1049087688487065 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.882459538505677 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.661661924199855 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.440460361500896 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.218256812346609 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.995992772866294 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.774010717868805 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5520417035552503 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3307274371078335 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1090303628872602 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8873028949815399 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6654652278435412 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4438202886870414 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22188887524245374 seconds remaining)
    1960 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 29.137 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
