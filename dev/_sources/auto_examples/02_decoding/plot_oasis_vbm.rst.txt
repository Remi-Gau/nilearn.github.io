
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fc9089fec10>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 156.4931869506836 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.3465633392334 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.00675129890442 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.249982674916588 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.670215129852295 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.227049827575684 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.209601561228435 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.952254125050136 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.73695945739746 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.55367271105448 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.456783771514893 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.331745819611985 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.25979916254679 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.11409715505747 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 20.97093977246966 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.987965265909832 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 20.855948328971863 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.72618525168475 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.601829078462387 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.485018529390036 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.39453887939453 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.287289505913144 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.153512672944505 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.03267741203308 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.980475743611652 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.845934867858887 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.719761004814735 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.5826028364676 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.459219523838588 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.31439451513619 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.186318238576256 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.058900079419534 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.9326012134552 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.872468825542565 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.757144465165982 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.63506821223668 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.51555527581109 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.397183560036325 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.280872796711172 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.172247550426388 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.059229850769043 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.94828849304013 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.877498286111013 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.75465897626655 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.63252871686762 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.51018367873298 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.401080338851266 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.278611873058562 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.159904400507607 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.039682057439066 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.919771432876587 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.832991352268294 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.71297022012564 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.59109256852348 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.476290067036945 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.35883541540666 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.238941873822895 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.118754257235608 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.001824247425997 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.880682933128485 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.811723152796429 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.702082501083124 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.589144960526495 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.497926780155726 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.383480101823807 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.283036983930149 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.168688644062389 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.0523186370508 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.935350684558644 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.83668199138365 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.718701873506818 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.602693823021902 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.485437605116102 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.366942725769462 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.254174889744938 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.143126010894775 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.031898548728542 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.918715065175837 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.821830248221373 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.706840994991833 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.592302322387695 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.476750991962575 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.359674854976374 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.246467702360038 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.128640492757162 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.014290136449478 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.898181643596914 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.795955660699429 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.680630683898926 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.566230645340479 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.45118636555142 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.336238258487576 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.228487108064735 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.111958693432552 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.99843161156837 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.883226444846706 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.782766143480936 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.66853052562045 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.55588010865815 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.465756274232959 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.357252836227417 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.24335763950159 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.133124748865765 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.018794668530955 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.915143013000488 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.802391040892829 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.691337257061365 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.57568566821446 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.465705226968836 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.35452497114829 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.240755558013916 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.127584208239307 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.012952310698372 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.90662891041916 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.795375230019554 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.684739506762961 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.572154595934112 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.460537197243454 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.348221944550337 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.233908623206515 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.118614514668781 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.00587276584846 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.896015347027388 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.780571094373377 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.664509057998657 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.548601102828979 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.435128261172583 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.319905243520662 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.2040586322546 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.087311763172002 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.971793449842012 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.860888053442686 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.744072278340657 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.629754600668313 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.514197068427926 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.399618643301504 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.284473755780388 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.1691407130582485 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.053564724714859 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.938625373428674 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.828078848975045 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.712436163679082 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.598598144423794 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.483657870259318 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.36918134159512 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.254775047302246 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.140135510327064 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.0260922957439815 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.913165311555605 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.801322881007355 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.685736179351807 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.570847160768825 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.457165843562076 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.343871889550702 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.228887263830606 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.113947883729012 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.999221159861638 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.884337634797308 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.7727458537379395 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.65871906730364 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.54448801279068 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.430394199323951 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.316596522743319 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.202987401763354 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.089530171417609 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.97635800188238 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.8627515902002174 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.750460860258091 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.635900224958147 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.521623357513247 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.407480225843542 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.2940072371945743 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.179964769718259 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.065757387635336 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.952166220237469 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8380683490208214 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7253865328702056 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.611299332925829 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.497222900390625 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.383360279338986 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.2693879074520535 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.155464562263278 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.041788473234072 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9280417369363088 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8143411304639734 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.701370683876244 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5877041970529864 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4739801258964336 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.360480191859793 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.246993136784387 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1334682389309532 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0199306660297653 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9064698815345764 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7930192243249922 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6798831113834971 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5665298792032095 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.45314186933089273 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.33986775282070725 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22656507443900062 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11326546645044681 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.125 seconds)

**Estimated memory usage:**  1905 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
