
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fb8a44deaf0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.06053161621094 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.16925358772278 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 38.3580436706543 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.50254543622335 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.5618200302124 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.432809591293335 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.839678605397545 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.17013989176069 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.541446685791016 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.289907349480522 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.84711217880249 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.43334421244535 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.23801263173421 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.960907587638268 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.72560865538461 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.50482734044393 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.400739789009094 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.265041673884674 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.05995734532674 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.915076820473924 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.705770254135132 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.47033468882243 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.258785746314313 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.11279460658198 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.90958801905314 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 25.779191493988037 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.657231422571037 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.509642283121746 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.326363801956177 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.168756756289252 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.034956296284996 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.841376166189868 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.649356722831726 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.472453680905428 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.28285152771894 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.104393107550486 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.924858252207436 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.791703050201004 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.621148121984383 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.433794149985683 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.267643928527832 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.112262923543046 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.942283880142938 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.775367332059282 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.604920213872735 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 22.461726956897312 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.301586503567904 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.14439003518287 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.984529336293537 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.81362264010371 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.654762983322144 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.48507246316648 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 21.45479860672584 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.295354708185737 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.13777235702232 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.988537094809793 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.832118443080358 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.68707566512258 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.5227732329533 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.396225282701394 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.26725125312805 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.11152612185869 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.95702234391243 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.800612748615325 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.64265787601471 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.48872916515057 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.345255620551832 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.192947127925816 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.039578269509708 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.881804279659104 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.738697460719518 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.585883029749695 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.430556403266056 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.29627423743679 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.14555991662515 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.986832062403362 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.835096773348358 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.676128551557465 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.523467876972298 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.37288410150552 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.298197150230408 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.14595190095313 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.99631825889029 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.83574926422303 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.680559362683976 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.530073278090534 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.380077661469926 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.232914209365845 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.096638896248557 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.941028236003403 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.78697885407342 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.630391637047568 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.476645117220672 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.321586137176842 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.168816206303049 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.031778323022944 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.88381654024124 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.740968483010517 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.591348560488955 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.441492738145769 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.291290521621704 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.144612477557494 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.99875200028513 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.847582717543666 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.697042832007776 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.543448346001762 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.390722621161983 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.236929788767734 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.08787852746469 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.942423523019214 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.80107524178245 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.662156180218533 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.517863188471113 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.37479932329296 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.228901202218575 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.083846092224121 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.94038775049407 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.80169117756379 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.65389829166865 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.507881693479394 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.358970801035563 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.210028356757046 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.063143694987064 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.918602420062554 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.769863020989202 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.627861833572387 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.479315859930857 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.333693534370482 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.187360420823097 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.044225640999255 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.900257275654718 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.756804855725237 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.616731181289211 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.474772028456954 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.334064045948768 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.189292086495293 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.04389830196605 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.899683205750737 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.75792442197385 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.618544513373067 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.479135956083026 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.336738420716413 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.1951539113488 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.053078746462202 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.91228093041314 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.771172581047847 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.634390184324081 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.496743390349304 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.356217287682199 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.214315284818611 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.0711469650268555 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.92872978993599 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.787114093178197 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.645207959842059 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.508108343396867 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.367713851313438 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.227192982649192 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.084676993121008 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.943840156627606 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.801100537462054 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.661655604839325 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.523563395375791 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.382044768627779 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.2405956478938 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.098431028970858 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.957087047172315 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.815530130662114 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.67376926987471 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.533650579906645 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.3932177978154465 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.251920742147109 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.109587202295225 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.967402413833973 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.8244761772927522 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6812425070795523 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.539214849472046 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3966911380941216 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2643189820866128 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.1220196713222546 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9796832806571234 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8374247815873885 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6948679402388263 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5532504333244574 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.411046613109568 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2685117514237114 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1264607777466646 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.984430907874979 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8427761264025846 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.701313794927394 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5603008888385914 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4186697006225586 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2770237423362532 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1354245841503143 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9935589145502277 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.851664584936555 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7097889826847956 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5680992797929413 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.42606020094779545 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.284005829782197 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14198921433645278 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  8.487 seconds)

**Estimated memory usage:**  1916 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
