
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2510ff4fa0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 219.3617820739746 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.52489447593689 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.395265102386475 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.546924352645878 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 30.01655149459839 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.82745385169983 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.48388926188151 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.19744648252215 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.94109535217285 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.732568396462334 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.545498847961426 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.38193767721003 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.210868755976357 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.021864579274105 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.846986430031915 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.657186190287273 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.498929619789124 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.340027276207422 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.181081798341538 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.036041360152396 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.878809213638306 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.728046417236328 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.578322627327662 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.457939956499185 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.33796946207682 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.189359426498413 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.033982313596287 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.881015830569797 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.74165177345276 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.587699306422266 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.431759039560955 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.283622780153827 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.126331090927124 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.96378795305888 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.8154934574576 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.665264776774816 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.52183715502421 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.37298010491036 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.223710047571284 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.072503438362713 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.91759490966797 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.77294152538951 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.622119506200153 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.47296395967173 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.32532228123058 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.181272135840523 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.03171648149905 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.875580757222277 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.72462248802185 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.57078750279485 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.421260356903076 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.280565462860405 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.128355136284462 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.974425090933746 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.86764144897461 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.710110447623514 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.560095718928746 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.41044323067916 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.262038831053108 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.113088284508656 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.960310061772667 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.8071852746557 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.656809960642168 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.512215353193735 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.362641215324402 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.209459359829243 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.055147012074787 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.902075233744153 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.7515635209925 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.60336829268414 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.449462720326014 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.29797488870755 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.14517339070638 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.998900060784326 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.0215682210149 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.121777216593426 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.182678247752943 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.2077281877592 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.25276819864909 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.259763159329378 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.257100582122803 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.276586282400437 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.25581289500725 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.221752229943334 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.18661497888111 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.155713067335242 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.10549638992132 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.975313671703997 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.78180594877763 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.587234499749172 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.39947395854526 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.20854396348471 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.02294300950092 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.844750096721036 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.660056687415914 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.472677594737004 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.288512309392292 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.103779020997667 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.919273760853983 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.73583205059321 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.554258584976196 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.37193747558216 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.19158989307927 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.010301946436318 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.829837065476639 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.650806211289906 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.473837609560984 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.296627764389893 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.117685627054286 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.938916499461602 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.76662122119557 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.590028784296534 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.415561727115087 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.240093973885594 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.066972013105426 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.892557672832321 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.718542715598797 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.544330425751516 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.370272385872017 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.197981227345828 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.026549498240152 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.855571173439342 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.684659008119928 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.513148478376186 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.342286279124599 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.171186876296996 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.000581226651631 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.8293864201373 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.65923884510994 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.48905147692954 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.31926312813392 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.149483025529003 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.980541901154952 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.81474216540057 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.6466026911095 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.478127117510194 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.310345593620749 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.14356043216956 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.976715101711992 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.810695831724209 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.645171506064278 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.481358357355104 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.316505106402115 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.151025028495521 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.986244930161371 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.821395857580777 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.657249636846046 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.493172141159473 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.328361227705672 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.16377589686605 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.999637047449747 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.835264355931061 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.671116050920988 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.507464080075033 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.345405891344145 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.183551157674482 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.020948874644744 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.859064146211952 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.696828377397754 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.534965887009722 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.37314510345459 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.211421683708333 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.049803686730655 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.888082325824199 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.726473593130344 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.566628297170004 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.405459335051387 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.244351980928889 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.083561306908017 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.9228798002886345 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.762215950909783 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.601619314729121 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.441142376079116 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.281221556525699 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.12161319009189 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.9613479546138217 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8017307411540635 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.643198376995022 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.483506256274963 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.324266299189136 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.1649272706773544 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.0056619841749495 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.8466344403696584 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.6875272969730566 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.528622357741646 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.3697571045643575 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.211175675033241 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.052682174080833 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8942486276017858 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7358384460368483 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5775530463770815 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4193910603747943 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2613686819871266 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.103376596085148 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9454600884742344 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7877095173566769 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6299862618349036 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.47232722994034665 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.31478519873185595 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1573461707512937 seconds remaining)
    2013 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  18.009 seconds)

**Estimated memory usage:**  1926 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
