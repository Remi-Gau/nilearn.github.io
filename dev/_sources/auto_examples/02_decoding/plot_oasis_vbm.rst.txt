
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fbe32577820>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 223.55318069458008 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.739546060562134 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.991862773895264 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.46491821606954 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 32.66720795631409 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 32.117435932159424 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.715174674987797 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 31.38262292316982 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 31.401437759399414 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 31.104493406083847 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 30.86795139312744 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.662832823666662 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 30.520996729532875 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 30.326556040690495 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 30.10916989190238 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 30.05251407623291 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.82472515106201 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 29.581790601505954 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 29.366495264901054 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 29.157126025149697 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 28.95762848854065 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 28.897367386590865 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 28.721814459020443 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 28.548141531322315 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 28.382912000020344 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 28.201581716537476 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 28.035748353371254 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 27.83609586291843 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 27.720545325960433 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 27.53401923179626 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 27.35214964548747 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.189180827909897 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.006427109241486 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 26.823255762909398 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 26.69902666877298 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 26.531411136899678 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.368480337990654 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.217763784769417 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.034861803054813 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 25.859302062254688 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 25.74270534515381 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.58050829608266 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.409828435807 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.23839954997218 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.063454714688387 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 24.899528688854645 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 24.742007556168932 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 24.613996206445897 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.440348982810974 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.284270753665847 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.108339071273804 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 23.93517978518617 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 23.76464944619399 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.631823499247712 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.459677466639768 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.28394003347917 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.112178802490234 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 22.950709175645258 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 22.787154526546082 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.645683652263575 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.486842552820843 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.321788862103322 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.16320183200221 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 21.996937047867547 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.84771755337715 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.685195409334625 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.551723805340853 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.38782808318067 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.228628340889426 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.071604801260907 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.91635046686445 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.75929105785531 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.62482918633355 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.457320252509966 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.292691024574072 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.125160217285156 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.962285393162777 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.80455360784159 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.657555378400364 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.487581663493867 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.32446050643921 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.156283849551354 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.99010466947788 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.820504205772675 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.653778518949235 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.506043546340045 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.33761246814284 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.179956345722594 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.013993740081787 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.846332440215548 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.680344475640194 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.530737295255555 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.38794042753137 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.229412609531035 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.064328599483407 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.903672230871102 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.743040561676025 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.59625487475051 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.430285351616995 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.267962007811573 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.10338830947876 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.940031226318661 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.776345598931407 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.61507145872394 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.465120022113508 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.301620392572312 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.139834759370336 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.978690566303573 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.815951064780906 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.654968613878303 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.498974019830879 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.33562733031608 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.171302659170967 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.007623984750392 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.843940316585073 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.681218696677165 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.526729131567068 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.36185758949345 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.1977788876679 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.034618902607125 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.871235688527424 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.708424619406708 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.54512209970443 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.389924154049012 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.232592590393558 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.068178749084472 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.904906034469604 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.741456546182707 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.577330753207207 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.422354032826977 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.258373498916626 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.097227740833777 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.933777541825265 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.770353057330713 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.606507258628731 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.444546390462804 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.28915023803711 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.126877843898578 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.964529631794363 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.802033012719463 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.640213864190237 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.477350047294129 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.318711203588567 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.156419632318137 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.99439385202196 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.832240959693646 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.670082441748004 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.507714326689843 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.34583889471518 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.18790599963809 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.02590298652649 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.8645424290208625 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.702492814314993 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.540361300013425 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.3787777516749 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.221183553818734 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.059311457169361 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.897744807468098 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.736384935016873 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.574418870158166 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.414535045623779 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.258289744394907 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.098545533639413 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.937584075459673 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.776594842352519 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.6151994719649805 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.454739461462181 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.293470785289467 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.135564940316336 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.976000668734488 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.8192090427174294 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.6654237961908525 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.50481950959494 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.344021229385641 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.184634099061462 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.023581709180559 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8627511588009917 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.701755957414875 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.540939700737428 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.3797980074109977 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.2201898097991943 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.0592754045244077 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.897939663666945 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.7367877595411625 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.5754964869955312 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.414178545410569 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.254045068576772 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.092611533435271 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9314745081231948 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7703359063970978 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.609183022850438 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4480284134130827 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2870092292626698 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1263885905705584 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9653743493188288 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8044615464332776 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.643534991205955 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.48264123945671894 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3217581715246644 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1609397006394276 seconds remaining)
    1996 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  13.399 seconds)

**Estimated memory usage:**  1894 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
