
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f34e7a93f10>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 215.26813507080078 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 38.62768363952637 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 35.83929705619812 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 34.65043346087138 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 34.33819246292114 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.88170003890991 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 33.594126303990684 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 33.327076298849924 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 33.10771179199219 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.81098249223497 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.5684278011322 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.32716087861495 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 32.105579773585 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.17347675103408 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 32.06174325942993 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.984090487162273 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 31.750572323799133 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 31.505417557323682 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 31.2624491320716 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 31.07514498108312 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.842466115951538 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.66629750388009 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 30.457258116115227 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 30.252744384433914 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 30.049316565195717 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.8435218334198 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.665042822177593 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 29.45649179705867 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 29.34479880332947 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 29.134928053823007 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.934694131215416 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.74545021210947 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.546455681324005 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 28.37571521238847 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 28.195942570181458 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 28.032560655048915 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.840689208772446 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.658615563366862 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 27.468259485144365 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 27.288789779711994 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 27.102530479431152 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.939837851175447 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.762687671752204 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.596230728681697 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.421562931754373 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.238904105292427 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.067498144896135 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.898991138377088 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.827927947044373 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.663831803263452 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 25.493298768997192 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 25.33134457644294 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 25.156971949797413 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.976024605193228 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.824042549839728 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 24.64611903103915 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 24.467539174216135 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 24.29328039654514 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 24.132755846812806 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.951823949813843 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 23.78171809514364 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 23.61054156256504 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 23.438149429136704 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 23.2629346128494 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 23.079785734415054 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.904646635055546 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 22.725590525251445 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 22.54640385997829 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 22.371243532966165 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 22.19285131537396 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 22.01256891659328 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.839436463906733 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 21.667247772216797 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 21.49204582384188 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 21.32290941315728 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 21.15966041882833 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.992753543351824 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.8134580804156 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 20.633935115276238 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 20.462778441513642 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 20.288406014442444 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 20.11495963438058 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.94660707217891 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.774099597011705 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 19.598729916981288 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 19.432167880675372 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 19.266440774119175 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 19.096473340330455 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.92807219245217 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.75649376665608 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 18.59107531441583 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 18.420948248643143 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 18.253923467967823 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 18.088641184632497 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.923957758761468 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.755660847613687 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 17.586705446243286 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 17.416944498868332 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 17.242581133939783 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 17.073380123485215 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.906585693359375 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.731690347784816 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 16.562368720185525 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 16.392405280789127 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 16.21942498133733 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 16.046113638650805 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.874830722808838 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.705523285910347 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.5363934746495 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 15.374321808508776 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 15.20619763027538 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 15.040226790282103 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.872283969606672 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.705139683411184 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.537921683830128 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 14.371451108351996 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 14.204471382601508 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 14.035623495395368 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.867329751030875 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.699559271836481 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.530914465586344 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 13.361669599517318 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 13.19208275685545 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 13.023570423203754 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.853397807767314 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.685838842391968 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.520715308567835 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 12.351812818857628 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 12.182041481137276 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 12.01450401868007 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.848081203607412 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.679917226310904 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.512794371807214 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 11.345938847477276 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 11.176718441408072 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 11.008875943996287 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.84209846047794 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.673369574720843 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.504042169322139 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 10.335310375090126 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 10.16540561403547 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.995777835237218 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.826927087676358 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.656858492564488 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.488602148161995 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 9.318900560510569 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 9.149214329784863 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.981117209609675 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.810282165939745 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.640585451318113 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.47025426228841 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 8.300825082703142 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 8.131331092432925 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.962189200656867 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.792458679768946 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.62320750759494 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.45314990557157 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 7.283387197810374 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 7.11314418346067 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.944639718757485 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.775193929672241 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.606886185474278 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.438008691057746 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.268472819240547 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.098894468167933 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.929468458349055 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.760053548468164 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.590648922377718 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.421660150800432 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.25274373652667 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.082754107082591 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.912827370459573 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.743584832479788 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.574720501210648 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.405084300315243 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.2354946817670545 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.066766641356728 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.897115571350701 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.727888251958268 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.5583435290352594 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.3887329896291094 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.219257101828222 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.050591288032112 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.88116789645836 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.712086532426917 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.542574740744926 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.3731602135524956 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.2035904517148266 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.0339989154896836 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.8645902954081377 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6948964595794678 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.525519111393634 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.3561214208602905 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1865229680748182 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.017000476109613 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8475060218419784 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6780561281710255 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5085640933913023 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.339030612598766 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1695048737166515 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  17.486 seconds)

**Estimated memory usage:**  1949 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
