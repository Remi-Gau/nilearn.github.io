
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe9651b3550>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 137.06445693969727 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 21.12653684616089 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 19.548651695251465 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 18.846345106760662 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 18.44541049003601 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 19.148951053619385 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 18.742091337839764 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 18.393838712147303 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 18.16468620300293 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 17.930395232306587 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 17.730716228485107 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 17.608653415333144 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 17.52481381098429 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 17.41867127785316 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 17.322381326130458 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 17.19299077987671 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 17.07814311981201 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 17.206304564195523 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.171527677112156 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.209768307836434 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 17.441544771194458 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 17.40317474092756 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 17.274252869866114 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 17.153453443361368 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 17.036897818247475 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 16.906707048416138 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.778617198650654 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.80998679443642 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.68238653455462 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.56708736255251 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 16.50026567776998 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 16.36671596957791 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 16.41424459218979 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 16.475933956377435 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 16.372228552313413 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 16.243817261287145 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 16.115851905610825 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 16.07195245253073 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.946068575507718 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.818396305426575 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.688819885253906 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 15.593524688627662 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 15.454773119517736 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 15.316204597783642 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 15.181296782060103 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 15.048286543952095 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.9655282082765 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.86513454356092 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.865065693855286 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.752376327709277 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 14.632368564605713 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 14.52506230391708 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 14.409104420588568 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 14.352290666328287 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 14.249504725138346 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 14.230175733566284 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 14.154467582702638 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 14.25470074854399 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 14.134834585518671 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 14.018443059113066 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.898509581883749 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 13.779358109489817 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 13.660736491603235 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 13.558188094033135 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 13.444068729877472 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 13.331197115091179 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 13.33246299714753 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 13.345353443231156 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 13.224255449631634 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 13.304145225580188 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 13.197590282985143 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 13.139199176304777 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 13.086392720540363 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 12.961709744309726 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 12.836971270071492 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 12.714719772338867 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 12.629995346069336 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 12.515924766466215 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 12.40853815812331 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 12.302068858207026 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 12.19722855091095 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 12.092049698770783 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.989873019660392 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 11.880482093397394 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 11.77103024437314 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 11.67538930388058 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 11.57613898432532 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 11.528696082104211 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 11.454201048070734 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 11.345776472198828 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 11.234952423307632 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 11.123028540349269 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 11.016106429307358 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.899154437485562 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 10.811734169087512 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 10.714666391673841 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 10.609358648459116 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 10.519306214814334 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 10.406535153486292 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 10.292426073189937 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 10.201552391052246 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 10.104543806302665 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 10.03276879647199 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.947541266969107 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 9.907279234666092 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 9.835307121276855 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 9.72590106388308 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 9.616485638039133 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 9.504772248091522 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 9.395074078796107 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 9.286116600036621 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.178039243629387 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.069661276681082 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.96337945693362 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.857700251696402 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 8.751721931540446 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 8.662168412372983 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 8.58687421399304 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 8.52402504015777 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 8.441653628309234 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.334819157918293 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.224234888376284 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.113539230628092 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.001772564601122 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.889705165739983 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.790393400192261 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 7.677936588014876 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 7.569945243399912 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 7.456584244966507 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.348694490831951 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.244655774189876 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.144586639549896 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.035255396004879 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.925153296692928 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.81601285222751 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.7065170517674195 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.62521115471335 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 6.533250806975539 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.434900083403656 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.3536474241627205 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.2478444916861395 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.137755857291796 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.027662549220341 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.918657296187394 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.81145375304752 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.712775509932945 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.605715931278385 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.4990391812356965 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.3931016406497445 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.287621213285715 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.188762426376343 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.087305967381458 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.994382582212749 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.9018395741780605 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.804092162615293 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.701999410506218 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.596163181158213 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.488789070943358 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.383898692794992 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.276384764497385 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.169827103614807 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.070743494152283 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.9683911712081343 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.862040971685772 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.760129207518043 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.65285062789917 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.5452403591339845 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.4381600325692916 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.331557228451683 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.224560922419531 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.1178632904501526 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.0111785269620124 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.904513336891352 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.798313030617775 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.692897081375122 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.5901319640023366 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.4842010953209614 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.3785747781311724 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.2734576691402477 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.168982195454603 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.0639542473687067 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.9590883716035283 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.8544193257342327 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.749877174043916 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.6455741757931917 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.541547272656415 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.4376468196991952 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.335351620128448 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.2316933591315087 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.128125855531642 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.024924215517546 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.9220567635840771 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.8191779355208079 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7165525849001395 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6139150526105743 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5113128087459466 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4087589662902209 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.30634093526656253 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.20426636753660263 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.10205694419055727 seconds remaining)
    1973 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 47.642 seconds)

**Estimated memory usage:**  1861 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
