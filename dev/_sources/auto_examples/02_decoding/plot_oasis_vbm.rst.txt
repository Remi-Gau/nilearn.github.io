
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9d78ef9f40>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 194.6258544921875 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 35.04670238494873 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 32.26122808456421 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.38472191492717 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.517462015151978 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.95283007621765 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.496957778930668 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.21997390474592 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.96648597717285 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.261373466915554 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 30.19146180152893 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 29.8530764579773 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.578663110733032 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.34603467354408 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 29.08806221825736 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.855738162994385 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 28.78162682056427 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.529910732718076 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.30149202876621 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 28.089295249236258 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.88046622276306 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.672966389429 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.482480807737872 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 27.391178400620174 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 27.18841711680094 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.993303060531616 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.80180912751418 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.604600146964746 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.40905250821795 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 26.235661440882186 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 26.114025433858238 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.92731879603478 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.748098075389862 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.572395743745744 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.398550117717072 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.225201300212316 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 25.050899320178562 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.95162398106343 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.784455600537754 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.620692100280372 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.449942588806152 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.29896247096178 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.13199824378604 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.961034375567767 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.842787569219414 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.674088451597427 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.51526668797369 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.34280860170405 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.17569557825724 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.017436090780766 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.9113872051239 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.750531958598714 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.6019590817965 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.444167150641388 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.281781576297902 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.117125056006692 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.954177515847345 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.835176124907374 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.675267803257906 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.511537143739602 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.35239346822103 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.191621170669308 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.034110938349077 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.874123664129346 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.747694313526154 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.605977828686054 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.44331049196648 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.28458662887118 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.127444127026727 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.96524050615836 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.805754593440465 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.677539842229493 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.518924713134766 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.36024449949395 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.201452583880037 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.045814275741577 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.88655840723138 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.753548783141298 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.602101705013176 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.4446022480349 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.294991493225098 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.140289300753746 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.9816563594632 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.825933450675873 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.684727725528536 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.53103719038122 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.37488947358242 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.216531142421154 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.06035770069469 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.904712301961492 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.748062239752876 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.610213347843715 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.45314291249151 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.298386253336425 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.141401564821283 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.98553706470289 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.830157915751139 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.673573734834022 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.535833572854802 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.380390745220762 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.224890232086182 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.069804201031674 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.913064891216802 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.758635002432518 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.613582317645735 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.459701878683907 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.304551614905304 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.151799712225655 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.020727616769296 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.864247422699535 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.708907214078037 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.566388671462601 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.411445753914968 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.256491893160659 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.102376904403954 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.946971914042596 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.79197749598273 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.663096134479229 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.51393657215571 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.360650298976097 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.212345441182453 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.061285470142838 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.908388532576014 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.754635047137253 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.609022494285338 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.457446765899657 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.304142017213126 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.15080031259792 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.995407938957214 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.84350674096928 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.688619907085712 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.54566571002698 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.390864516749525 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.237689165244426 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.083979015919699 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.930121059770936 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.7754384209128 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.628185098188636 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.473529532335807 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.319602981745767 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.165331159319196 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.012052769356586 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.857973347247487 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.703760055395273 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.55593486626943 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.401181385434906 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.24683162284224 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.09336239788808 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.939550193580422 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.785483008263095 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.6316869258880615 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.483235812345088 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.329424230675948 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.175667391883003 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.022144992630203 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.869165389768539 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.715316142791357 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.5636684044151545 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.413919382457491 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.261506659429778 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.108008503913879 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.955565345953711 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.803775675502824 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.650899155739626 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.500832511157524 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.348380847410723 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.196204972554402 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.042997494429171 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.889562288920084 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.735922264629567 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.582694418290083 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.432330063211987 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.278879642486572 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.125901300783102 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.972501017581458 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.8194603238786966 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6746035597541113 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.5222369627763994 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.3685639601075246 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.215061772469036 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.061625878016154 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.9079990255239916 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.754614581118573 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.6014975211659417 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.449554961660634 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2963769886944747 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.143291317006593 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9902028361743784 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8374361078789891 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6841227137853227 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5307572138936896 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3781401012580432 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2249426245689392 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0716129658753388 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9184134006500244 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7653010380573761 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6122824999750877 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4594595650125881 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.306325011783176 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1531478004838953 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 13.602 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
