
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f9537e0d5b0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 147.7670669555664 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.00339150428772 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.7341787815094 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.162527402242027 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.610832929611206 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.30383539199829 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 22.36074161529541 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 22.12195008141654 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.922748565673828 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.69721844461229 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.688214540481567 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.58302296291698 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 21.515053192774452 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.526289059565617 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.41382816859654 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.327442566553753 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.165734887123108 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.01088004953721 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.85157036781311 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.701784422523097 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 20.533204793930054 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.42680850483122 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.27897247401151 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.131858628729116 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.04504076639811 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.898260831832886 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.763846617478592 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.624715425350047 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.4920859677451 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.35901611426781 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.240480025609337 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.111024587385113 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.98130226135254 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.985437400413282 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.854784446604114 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.729281902313232 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.595372729831272 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.467679642342233 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.338748542886034 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.224994983428566 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.09717082977295 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.98050429181355 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.888580481211346 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.75768485180167 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.629443363709882 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.510790559980606 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.391801450563516 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.264531348613982 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.140103220939636 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.028133752394695 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.917378187179565 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.829533647088443 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.707130395449127 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.599115146780914 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.48090743135523 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.357115680521183 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.234397751944407 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.11075177109032 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.990615762513258 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.873881469338626 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.775715430577597 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.658378206315588 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.544143838267171 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.432665416172572 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.318130195140839 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.201848745346071 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.088447628599225 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.9719095372442 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.862348949207979 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.77000079638716 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.65575885772705 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.548819280006516 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.435453202989365 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.320029108491664 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.206047998892293 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.092623790105185 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.978769879592091 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.865461888251366 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.765999488341503 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.651014478900764 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.536221623420715 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.42437732955556 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.308753071761712 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.193154694086097 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.077429442178635 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.963169827180751 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.8560910058576 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.754636687793951 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.640115737915039 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.527979089972678 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.416856474346586 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.301990852251157 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.188365366147913 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.07605294514728 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.963746091152759 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.851750599710567 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.747531950473785 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.633420941755944 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.520981044185405 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.407507544816141 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.292887926101685 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.176882876027928 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.061408795562444 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.947849662558546 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.834136669452374 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.728612774894351 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.621797386205422 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.508738346188983 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.396149882563838 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.28589426486864 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.172413262453947 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.058454938837 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.945369856698171 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.831358352593616 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.723834803229884 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.60926537928374 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.495913439783557 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.381257745954725 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.266604314416142 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.15301997922048 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.039539337158203 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.925666042595855 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.812252228377297 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.704959661979984 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.5910842187943 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.478061437606812 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.364944227158077 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.250673618842297 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.1366096585989 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.022992073103438 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.909376492867103 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.794913988986998 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.68744496865706 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.573187865709004 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.460329674962741 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.345983955595228 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.233270532944623 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.118012029759205 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.004661850307299 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.890135245357486 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.776819024767194 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.667997175920094 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.553720611921499 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.439450439039644 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.325316203965081 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.212228807909735 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.0996613731122995 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.985759571296017 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.871943241841085 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.7589229913365925 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.648796081542969 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.536189330334695 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.42302992469386 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.310473343905281 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.197851143874131 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.085382807639338 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.972693382165371 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.86007650794497 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.747276882582073 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.63875044066951 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.525616109371185 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.412018457554883 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.299016110691023 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.185442762140847 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.0720371967408715 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.9587216594002466 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.8456105726311005 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.732251207271736 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.6208976563953215 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.507615446338992 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.394327514311847 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.280963775010137 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.167561902556309 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.0541227277303706 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.940716313219619 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8273734705788747 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.7140005393461744 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.6018614216712908 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.488727076669757 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.375295235458033 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.26196116871304 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1486235323531853 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.035424905818897 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9221899678798322 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.8088721607042395 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6955925193992822 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5832182207415182 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4699948407749441 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3566236090152821 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2433727355230422 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1302133233923661 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.017144157000237 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9040431479612986 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7909386479175152 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6778724168993764 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5650830268859863 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.45201586703864893 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.33897156279704294 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22601613372263285 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11299229147446216 seconds remaining)
    1961 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.121 seconds)

**Estimated memory usage:**  1905 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
