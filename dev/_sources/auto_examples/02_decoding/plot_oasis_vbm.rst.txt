
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa82085abb0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 197.75629043579102 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.94141674041748 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 31.66281008720398 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.573289314905804 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.75307583808899 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.121280908584595 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.775068600972496 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.443323203495574 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.193500518798828 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.936502509646946 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.693718910217285 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.617803920399062 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.694307645161945 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.47542040164654 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.217201471328735 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.02091964085897 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.823341012001038 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.657678576076734 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.66069075796339 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.50500465694227 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.33476972579956 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.17207137743632 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.00381688638167 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.807042940803196 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.643843809763588 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.569182872772217 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.406774594233585 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.233130357883596 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 26.07508046286447 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.901522422658985 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.72187566757202 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.560827732086178 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.478779077529907 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.30570158813939 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 25.147210976656748 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 25.011489016669138 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.862447235319348 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.721267597095384 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.568219184875492 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.468681029784378 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.31238079071045 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.15541109806154 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 24.015283607301257 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.8808774005535 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.742256619713523 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.654982778761124 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.50294592069543 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.343130695058942 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.17624521255493 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 23.007526207943354 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.8688645362854 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.715942368787875 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.623079079848072 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.477838570216917 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.323370085822212 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 22.152887496081263 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.99533700942993 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.831656083726045 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.66781143484444 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.533622386091846 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.377553701400757 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.222092210269366 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 21.063546872908066 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.9078545305464 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.746985524892807 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.616339903611404 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.449378208680585 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.285892404727083 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.135309163261862 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.971830181453537 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.80773115158081 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.645660601871114 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.516891055636936 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.355586486319975 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.20237572773083 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.034912586212158 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.876842774842913 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.720351572160595 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.557886380415695 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.4216650166089 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.26291513442993 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.10237965760408 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.943533897399902 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.783354629953223 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.63007244609651 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.468073536367978 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.326935285745662 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.162939014105962 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.003798268058084 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.840049807944993 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.684571901957195 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.522374032617925 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.362768235413927 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.22121886284121 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.06134595769517 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.896143725043851 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.732150475184122 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.575557433452802 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.419766893192214 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.266055646568837 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.127553939819336 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.974772080336466 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.81861912502962 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.663809871210635 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.509871116051308 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.357203926358904 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.201583317990574 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.062869693631324 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.90802648332384 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.754067906545936 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.598502224141901 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.444354832709372 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.28718900680542 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.132355690002441 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.98710540721291 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.836496311685313 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.682089674061743 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.528163805986063 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.373961226414826 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.22109598271987 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.07001241048177 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.927581083676047 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.770951826064314 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.618551752431605 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.467782651224445 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.31290431022644 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.15807386807033 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.00281910070284 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.856249704957008 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.699524811071942 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.544290707661554 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.394315963483038 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.240704066825636 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.086648446276673 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.9320945241558 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.786056032887211 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.631863537956686 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.478766509216197 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.331804569216741 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.179416608467376 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.025335890906197 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.871858388819593 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.727940989212252 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.573952193026775 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.422279808256361 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.26947202353642 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.116984194272185 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.96445715346304 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.811668325114895 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.664422830479257 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.512328704198201 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.3608697944919 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.208998655018053 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.056943503859776 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.904899770563299 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.752908137536818 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.606974406120105 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.4581456245130795 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.307082909571973 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.156256078924023 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.004966914653778 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.853374448622236 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.705148028738704 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.553171633211382 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.401774423878368 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.2504850517619746 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.098885412675789 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.947242251413311 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.79675783429827 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.6491562304412115 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.498245688045726 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.34823949852882 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.19918536030969 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.049614625170052 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.898505591798103 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7478883947644914 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6003230159932915 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.450413248633261 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.3003269179483476 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.149934453005231 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.999656915664673 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8493655412895245 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.699165975654518 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5503351063024806 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.400019542030666 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2506398252538733 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.1006904058558966 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9506593158538328 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.8006454072100049 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.650220473607381 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.5008086530785811 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3506459927683725 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.20039501786232 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0501968576500451 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.900043848863582 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7504628560481927 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6008424904881691 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.45061782410907264 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3004410724447231 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15020220243751103 seconds remaining)
    1991 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.116 seconds)

**Estimated memory usage:**  1949 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
