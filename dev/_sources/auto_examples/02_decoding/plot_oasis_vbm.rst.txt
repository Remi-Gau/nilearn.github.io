
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2faf6af880>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 158.56027603149414 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 27.35866641998291 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 25.241848468780518 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 24.57388265927633 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 24.203007221221924 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.905834436416626 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.660834391911827 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.55610605648586 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.414148330688477 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 23.239654541015625 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 23.12682342529297 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.97732845219699 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.85339903831482 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.784858538554264 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.616278716496062 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.468157927195232 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.331666469573975 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.19690348120297 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 22.066900995042587 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.9274648490705 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.806889295578003 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.669568708964757 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.540289271961562 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 21.401584065478783 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 21.264623483022053 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 21.13214087486267 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 21.000689781629124 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.892750881336354 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.76982627596174 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.645872666917995 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.519263744354248 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 20.397974698774274 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 20.277208507061005 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 20.14528671177951 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 20.021895352531885 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.896639449255808 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.773072269227768 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.65103554725647 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 19.524249465841997 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 19.395548630983402 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 19.27565860748291 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 19.15581185643266 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 19.02999276206607 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.908871190492498 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.787862452593718 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.666756444507175 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 18.543215305908866 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 18.423360373111482 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 18.310063997904457 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 18.19479248961624 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 18.077889919281006 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.961522518419752 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.83726947124188 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.720247974935567 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 17.595850397039342 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 17.474317940798674 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 17.351938452039448 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 17.232782991308913 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 17.11336482804397 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.993219395815316 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.870750506718956 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.747398286569315 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.624734347866426 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 16.498462079063295 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 16.37434431910515 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 16.255749409015362 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 16.137124307227857 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 16.016953806378947 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.896765975391164 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.774284421533778 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.655448743275235 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 15.536427256087183 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 15.425398932562933 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 15.305219633938515 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 15.184368977675566 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 15.063470204671225 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.947855196501079 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.830543041229248 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.715585188987928 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.593462563768217 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 14.470862030982971 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 14.349783838531119 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 14.22623068530385 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 14.105507870754563 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.985256853557768 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.866697423598346 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.7445937755496 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.630097309748333 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 13.509506312283602 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 13.388618271002608 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 13.263188388612535 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.14189633170327 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.024056144382644 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.916709940920596 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.798168481664455 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.679895300614207 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.56154990196228 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 12.441481373973728 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 12.32292574765731 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.20371094135323 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.082427024841309 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.961707983866777 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.841671522925882 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.72263843573413 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.59970415555514 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 11.480992237726847 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 11.360413204948857 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.239165566791998 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.116890033086142 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.995348667879718 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.884543462233111 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.765869104110443 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.6449373960495 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.52328204264683 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 10.403484235730089 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.28471977814384 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.162202399352502 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.042464904296093 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.923395443770845 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.803777782856917 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.680559953053791 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.556900144608553 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.436337025439153 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 9.315853217752968 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.19499256533961 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.074307346343994 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.95568563446166 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.833424620740995 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.713414683938026 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.592737894649654 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.471783839739286 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.349411560378911 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.22807572104714 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.107924179923266 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.988289761899122 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.867250212916621 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.747485441320083 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.625681694406662 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.503381556358891 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.3820438933887065 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.261438608169556 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.138951260992821 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.017306801298974 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.895613063465465 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.774618691868253 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.6522189830911564 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.5308794550699725 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.409750588086187 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.288641794307813 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.16723461599158 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.045636336008707 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.924322169348104 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.802699791757684 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.681297048244601 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.560233165691425 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.439168322470881 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.317689455472506 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.196395094986934 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.075967903378643 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.955222039852502 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.8339478969573975 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.712576404121352 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.591421612986812 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.470246269659031 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.34903643189407 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.227854483055346 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.107033223990935 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.9865095287026047 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.865804218110584 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.745418741858217 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.6248699637020336 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.503923563929329 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.383136355599692 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.262481511672797 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.141553604739836 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.0206155436379567 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.900547363541343 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.779725383230522 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.658752757511782 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.537985427419567 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.417330185572306 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.2963498297317253 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.1754593010787127 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.0545826049450318 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.9337787420853323 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.812829623351226 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6919255051561581 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5710529108098483 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.4501200128108895 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.329394505768226 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.2085886001586914 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0877756123767472 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9669314225514729 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8460263279435547 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7251565800499671 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6042809119591346 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.48342170520704614 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.36255683027548236 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2416962397218955 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.12084365729710565 seconds remaining)
    1982 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  2.418 seconds)

**Estimated memory usage:**  1879 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
