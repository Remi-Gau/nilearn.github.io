
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe1b841f250>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 306.6849708557129 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 51.640315532684326 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 50.114633560180664 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 48.62099838256836 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 47.47330617904663 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 46.60783338546753 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 46.28404752413432 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 45.757306746074136 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 45.16804504394531 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 44.63980870776706 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 44.054187059402466 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 44.07071328163148 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 43.72146654129028 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 43.292448373941276 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.86870792933873 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 42.70949896176656 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 42.39673316478729 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 42.141413169748645 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 42.16274831030104 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.91458661932695 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 41.73663353919983 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 41.39164297921317 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 41.08890082619407 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.79333387250486 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 40.693532307942704 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 40.39490485191345 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 40.18001829660856 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.988836986047254 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 39.683891364506316 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 39.51833621386824 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 39.26313169797262 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.99256074044012 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 38.70765870809555 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 38.54115918188384 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.24672382018146 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.992732116154265 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 37.71215584543016 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 37.44006409516206 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.25849371207388 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.998155006995574 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 36.75657558441162 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 36.51309767002012 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.31069475128537 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 36.08034401716188 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 35.82848603075201 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 35.553199238247345 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.29724464209183 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 35.085872076927345 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.84545397758484 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 34.59315054270686 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.37377452850342 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 34.179359281764306 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.923352223176224 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.68070320363315 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.4300670447173 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.199557391079985 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 33.011853013719836 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.81614765786288 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.57018131223218 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.326969942804105 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.12577144304912 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.893334197216348 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.635941251631703 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.382085175741285 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.122002005577087 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.917498643581688 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.666726755373404 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.412348394963278 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.16839812783634 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.939418841099393 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.734763281685968 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.495806559710434 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.25955327351888 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.022227251366395 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.826801119623955 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.584672212600708 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.338064934078016 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.099929023098635 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.880300937554775 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.68581786034982 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.46051275730133 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.220326606138254 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.983824183301227 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.776739875954316 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.5934799966358 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.372477573506973 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.124732206034103 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.88832321386228 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.673905979503285 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.430468977167365 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.18804020351834 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.943548008635805 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.720201357551247 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.476948743225428 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.252737090942706 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.03171078782333 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.79592126607895 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.582724087017098 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.34406430380685 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.10750337080522 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.867812633514404 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.657785528957252 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.42538430176529 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.194038779990187 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.958004511319675 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.72045615741185 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.508799651883685 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.283693360391062 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.04377810160319 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.81392546093792 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.591538255864926 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.35771495157534 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.118392450468882 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.881217135792284 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.64638158313015 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.43290410871091 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.194460309784986 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.959732124948093 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.729144456022876 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.49702528544835 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.274757067362465 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.04077566359654 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.80330514126137 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.574782801837454 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.36191273504688 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.129731321334837 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.904739716696362 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.67209676119286 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.445943787693977 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.22712793091471 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.992709159851074 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.7692745751097 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.5442814393477 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.337502655230072 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.109333970653477 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.881642597692982 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.669212229111615 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.44381674188767 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.209646142047385 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.98188519134796 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.753467730113437 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.529313555845977 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.32045327777594 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.105146086299335 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.882351941532558 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.651493039624444 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.426149887581394 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.193542924868007 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.969858639949077 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.75162429137518 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.525015115737915 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.29654785339406 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.06569756959614 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.83377201105255 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.600483720952814 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.37433655800358 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.144951490255503 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.916354921972676 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.692904221860667 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.467798934792572 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.238166868686676 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 9.00804128706085 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.776920401019813 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.54908611876833 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.31476049306916 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.08226219813029 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.850839927972081 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.617491051108537 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.392026265462239 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.180771785374929 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.949619419434492 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.717636947743377 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.4870602862779485 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.256544587240054 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 6.023011980385617 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.794124262673514 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.564238212325356 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.330990707806948 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.099327226703086 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.866522053766517 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.634229951434665 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.4024917881791765 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.170580567894401 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.9390632689324887 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.706976558851159 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.488222373498453 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.26008798486443 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 3.0269618506100087 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7936277338799007 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.56121790219867 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.3275997889669315 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0942851560902223 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8612725834051767 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6290072233565729 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3963149650809692 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1633707682291665 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9307896555686482 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.698004800050997 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.46552265051639447 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2327042560481546 seconds remaining)
    1984 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 38.964 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
