
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ffb5cd55b20>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 168.77174377441406 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.34378671646118 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.800350189208984 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.796811421712242 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.713157653808594 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.206841945648193 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.846963246663414 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.571257761546544 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.339218139648438 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.12344127231174 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.909523725509644 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.745014689185403 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.769242207209267 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.587429450108456 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.630387340273177 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.690858999888103 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.60562229156494 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.489281387890088 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.358696964051987 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.33051607483312 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.154693841934204 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.98320234389532 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.80312952128324 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.618672951408055 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.441672643025715 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.279737949371338 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.209951657515308 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.02905336132756 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.859005451202393 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.70582624139457 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.547058820724487 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.38106459186923 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.234664380550385 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.075593572674375 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.008162035661588 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.83616120474679 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.67498543527391 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.526483336010493 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.378445336693215 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.224618893403274 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.063251495361328 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.953578722186204 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.79669021424793 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.64335560798645 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.490529537200928 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.347194883558487 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.194809488628223 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.04190872070637 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.890111565589905 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.77805531268217 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.630500316619873 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.485759445265227 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.335630068412193 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.184870378026424 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.036676327387493 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.895287925546818 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.777333463941304 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.626064672804713 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.480412154362117 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.347124705880375 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.20174288749695 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.055113808053438 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.908734467721754 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.765134928718446 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.64424777030945 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.49993586540222 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.358074657844774 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.2142035213869 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.069886502097635 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.925950105639473 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.782603876931326 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.664811537299357 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.521826002332897 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.377512869769582 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.240817643500662 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.099866469701134 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.956208592966984 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.812355524533753 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.67209726724869 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.554175171671034 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.41578471660614 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.274513129834776 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.13767923378363 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.99917227963367 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.857569751285371 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.71741777307847 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.592797534410343 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.453761920161632 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.316669594157826 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.177637627955232 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.038315640555489 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.896750699032793 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.757061989411065 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.615129052951772 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.489206973542558 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.350165768673547 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.209904968738554 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.071274981056293 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.932311179686566 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.79464810785621 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.654835939407349 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.527700367540415 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.388520194034951 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.248467431485075 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.11502845470722 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.976355609439668 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.838592038964325 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.697948393420639 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.559380337044045 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.429040274488816 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.289766810157083 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.149706619279879 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.012715867587499 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.87435089803375 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.735731133243494 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.596794968066007 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.466398033602484 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.326950122148563 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.187575691837376 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.049033754012164 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.9112122853597 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.772921227226574 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.634147046042271 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.495179085227532 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.365588388135356 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.228190088272095 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.09172280629476 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.953886099687711 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.815733656287193 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.677584235982376 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.53944628055279 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.408854135120189 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.271142627253676 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.134363212083516 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.997340903353335 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.859577629301283 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.72120610405417 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.58373530415723 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.445861885513084 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.313709857652514 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.176108155931745 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.040058430205 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.9036222679514285 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.765575205529486 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.6278913550906715 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.490388779804624 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.35725023975111 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.221658893182975 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.085978488664369 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.9492056017754065 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.81198771794637 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.6745204530804365 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.537717216893246 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.401477829303617 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.2688531968500705 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.132525997777139 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.995861120713062 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.860341577772881 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.724024766608129 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.587139583983511 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.450105726718903 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.316474517680104 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.180118198747988 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.044046576037728 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.907758782549602 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.771012017221162 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.6345235439668215 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.497603940392683 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.360991341727121 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.226466009602744 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.090015874189489 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9532784174757394 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.81690358006677 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6802243965898636 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5439942485984717 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4072981221335272 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.272068912332708 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1388213998180325 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0026578447791965 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.866197137193307 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7295919789208303 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.592755516589676 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.455982805608393 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3216467046998237 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1847245796867036 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.047918951189196 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9113524447205246 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7747857825641327 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.638056623174789 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5013941557949813 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3648513241818077 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2287635278951436 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.092360476652781 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9557786271979771 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8191353217842653 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6825125523102589 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5459425254743926 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4094120717895818 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2730403452208548 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1365100115387883 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 8.340 seconds)

**Estimated memory usage:**  1908 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
