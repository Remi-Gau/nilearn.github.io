
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fcc37e28dc0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 202.18849182128906 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 34.66263270378113 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.07017207145691 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.89013385772705 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.953768730163574 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 31.487334966659546 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 31.203891754150394 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 30.824713366372247 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 30.542890548706055 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 30.61652898788452 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 30.37363839149475 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 30.089557170867923 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 29.841339031855263 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 29.661660469495335 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 29.482984236308507 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 29.535277922948204 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 29.353503346443176 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 28.903396368026737 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 28.480306386947632 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 28.06734361146626 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.691149473190308 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 27.34124067851475 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 27.00112011215904 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.774965369183086 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.46646483739217 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.165208339691162 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 25.893505096435547 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.620066572118688 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.359278576714654 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.108904205519575 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.868542114893597 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.706577454843828 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.475862681865692 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 24.323449300997186 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.102500424665564 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.888609341212682 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.67298709021674 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.46863084226041 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 23.307241239045798 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 23.107775211334232 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.907535552978516 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.713281864073217 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.523255643390474 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.332807790401368 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.146767247806896 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.96117393175761 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.81892786855283 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.641379559293707 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.47448154290517 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.304500939894698 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.13606095314026 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.973952728159286 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.81192728189322 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.657384499064033 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.521973371505737 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.354198174043134 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.18521744864328 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.0195849401909 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.86021588588583 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.701599084724812 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.538552443186443 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.402465296573325 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.242417789274644 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.081687333091857 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.921067982912064 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.7644084416903 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.60826063156128 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.450553210813606 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.29556777898003 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.168571285579514 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.01371284893581 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.858363789571843 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.704924265543617 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.552333537846398 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.398306633975054 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.249057292938232 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.100781139574554 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.967015086830436 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.82119197723193 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.678204639048516 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.52875542640686 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.379863968601935 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.22936904721144 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.07967381305005 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.93141143662589 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.800279575235704 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.652605555778324 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.505887760513131 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.36440069025213 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.219643568724727 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.07415877448188 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.930030565995436 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.798976379892101 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.656264238460091 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.5132807873665 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.369219503904645 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.227325121561686 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.085404182217784 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.940897167945396 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.796601042603001 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.664520263671875 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.520108706880324 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.377674013960595 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.234365592882472 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.09231655414288 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.950895763578869 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.809551585395381 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.667146466602789 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.56181080253036 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.420090139459033 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.27814631028609 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.136234304926417 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.995553169931684 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.853642807597607 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.712488232997426 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.580777230470076 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.440070949751755 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.299877939061222 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.159864102379752 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.019266643444029 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.879166920979817 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.739124889216148 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.598838868688365 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.4677262170528 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.330559576711348 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.19081425666809 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.051880348296393 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.91216614490419 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.778933614492416 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.643547448076943 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.513609831149761 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.376709614091247 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.238237344857417 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.101201455395922 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.963292178822988 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.824929661220974 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.68734068029067 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.549164112466965 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.41795655955439 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.280230539308178 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.142473357064382 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.005141697876843 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.867350014162735 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.7298198113074665 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.592426313294305 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.455011203371245 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.3225828131584265 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.185054702823665 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.047869347237253 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.910637212279659 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.773240327835083 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.636107507920423 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.499328312120939 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.364716776056228 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.228910740319784 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.092296600341797 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.955915426596617 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.819445831760479 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.683108390132083 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.546848826438376 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.410213053226471 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.2766717398388785 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.140549227043434 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.004527015920066 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.868207320934388 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.732083667408337 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.595969817724573 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.459816011839998 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.323822475615001 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.190866564857889 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.054891684476067 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9191782488460425 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.7832792193390605 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6474394426180448 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.5116709210406776 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.375859328678676 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.2417456778613003 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1060815423221912 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.9704278051183466 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.83511319373573 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.699582841661241 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.5641336217110986 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.4286557056091644 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.2933109067176862 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.159067734428074 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0237200131287447 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8884729749412947 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7532176474198937 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6180451981564785 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4829666967745179 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3479541100953754 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.212960660145545 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0785349011421204 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9435540777413955 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8086137181704807 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6737419580801939 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.538890147695736 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4041005100695615 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26935827130019063 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1346549736195473 seconds remaining)
    2007 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 5.921 seconds)

**Estimated memory usage:**  1905 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
