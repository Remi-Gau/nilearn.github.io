
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fce3e2d04c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 256.1163902282715 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 56.730247020721436 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 52.32011532783508 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 49.81578207015992 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 47.4176390171051 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 47.14138054847717 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 46.461212714513145 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 45.94891888754709 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 45.10968589782715 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 44.46736661593119 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 44.21271729469299 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 43.94419397007336 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 43.5545318921407 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 43.37322136072012 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 43.691041639872964 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 43.89124011993408 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 44.000768184661865 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 43.61220069492565 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 43.58269717958238 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 43.35040315828826 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 43.09636330604553 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 42.701684372765676 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 42.70342946052552 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 42.41643551121587 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 42.08536068598429 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 41.64679265022278 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 41.39355017588689 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 41.08809517048024 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 40.6730466910771 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 40.41958567191814 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 40.14084068934123 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 39.91514620473308 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 39.56066930294037 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 39.20564557566787 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 38.86401733230142 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 38.61501319067819 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 38.41032396422492 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 38.08237375439824 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 37.81889165075202 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 37.51864418005332 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 37.23293209075928 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 37.13440685155915 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 36.77526169731503 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 36.5149802219036 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 36.254113457419656 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 36.086366997824776 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 35.91462555138961 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 35.656506634773095 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 35.37708246707916 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 35.09532474498359 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 34.883875608444214 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 34.70907079939749 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 34.45933019197904 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 34.18431572644216 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 33.94629585301435 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 33.65084071592851 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 33.34317786352975 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 33.08967310085631 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 32.79894892922763 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 32.554631237256324 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 32.40623513857524 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 32.217236561853376 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.942975205759847 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 31.741420340916463 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 31.469979733228683 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 31.230366853567272 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 31.005766175009988 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.732042458520006 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 30.49076742284438 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 30.208981282469153 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.91405888966152 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.625268079865148 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 29.382094065348305 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 29.183415661119437 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.916874627809264 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.6568820476532 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.41139236249422 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 28.17459665954887 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.929830991304836 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.683209796495074 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.416990518569946 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.17523679321195 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.978492219273637 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.750380134008015 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.523882604780653 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.275533816393686 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 26.059447155442346 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.862343440110656 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.632136605002664 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.38852785946278 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 25.167953385247127 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.95926252564231 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.729615771252178 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.518167867455432 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.2945378587601 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 24.0733203762456 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.834637681643166 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.606544993587377 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.38057212440335 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 23.18073295101975 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.948934078216553 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.714722399664396 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.490370212816725 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.272442901018753 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 22.045369588411774 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.800404866536457 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.55222945843103 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.35745378075359 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 21.131826065204763 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.921902127222182 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.699891502206977 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.465926071545027 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 20.23427184990474 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 20.007178120908485 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.780521614509716 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.561585426330566 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.32069392039858 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 19.088526560710026 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.85912958646225 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.644641754006138 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.409405549367268 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 18.171588478009564 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.96705885011642 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.73694866459544 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.52500960134691 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 17.30024027824402 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 17.073421538822235 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.836483343379705 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.59659220278263 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.351707807807035 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 16.10761050077585 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.884116047211275 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.65881905411229 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.41774400553309 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 15.176649922755226 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.947584708531696 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.727171729592715 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.498094550014413 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 14.271433844082598 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 14.045087097360076 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.814671346119471 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.578614931580022 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.34347755472425 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 13.112512170018016 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.888766937785679 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.660921483204282 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.434993064566834 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 12.209249530519758 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.973411437627432 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.749185485327803 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.520822366078693 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.29359542770891 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 11.057681435032894 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.830532765855978 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.59426770891462 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.372466487269248 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 10.140265904940092 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.91476011579963 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.690690903723993 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.457089722531396 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.221090912818909 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.985464204172171 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.755996100696516 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.519682748186076 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.292078739259301 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 8.059866522297716 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.830636073307819 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.600883699462799 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.367199806939987 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 7.1349210132508585 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.903030605877148 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.684551459306862 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.457341765248499 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.22603974039155 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.997403717589105 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.765514510018485 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.534260901537808 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.3093670613348145 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 5.0785276755858 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.847793134231141 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.619111670388116 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.388312659869536 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.156604738025875 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.9244816863471694 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.6936048424762227 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.4617135266999943 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.2304402500070553 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9998565383135953 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.7683362149177713 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.538899469627905 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.307776840109574 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.0765426046561197 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8457734485467274 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.6153374410046195 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3843356997696394 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1529729855366242 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.9218809555987921 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6913680255715617 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4616448614332411 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.2318261089037411 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 44.477 seconds)

**Estimated memory usage:**  1903 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
