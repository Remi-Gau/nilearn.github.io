
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe77b0d7100>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 182.6620101928711 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.04825448989868 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.998791217803955 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.979571183522545 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.787703275680542 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.239660263061523 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.08851687113444 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 28.691283839089532 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.402318954467773 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.158046457502575 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.879450798034668 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.62443581494418 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 27.36351442337036 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 27.12103588764484 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.90391162463597 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.685214122136436 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.50456428527832 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 26.30274825937608 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 26.1159917778439 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.932529236141008 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.748204469680786 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.55617461885725 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.37177658081055 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.210053982942004 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.037853558858234 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.870308876037598 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.71152243247399 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.563496898721766 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.394298928124567 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.23402141702586 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.082545677820843 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.94149371116392 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.800101220607758 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.65458557100007 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.510260624044083 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.355807781219482 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.206078661812676 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 23.054999138857866 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.902599911940726 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.75549475963299 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.648045539855957 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.499699522809284 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.345749480383738 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.203490784001904 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.056284405968405 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.905313756730823 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.753392976263296 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.607707997585866 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.460280140240986 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.309088522074173 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.161383867263794 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.008782629873238 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.868662338990433 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.723447772691834 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.576314908486825 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.429581143639304 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.283054011208673 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.138936766406946 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.99438557131537 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.855661327556028 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.707356373469036 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.562426438097095 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.419102914871708 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.272319948862467 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.132370591163635 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.98439480708196 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.839958826700848 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.69682471431903 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.551746550728293 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.407421892967776 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.264778239386423 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.12035723135505 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.97895304361979 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.834618676198673 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.69224716521598 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.547359466552734 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.403855888467085 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.263913916302965 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.12093196159754 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.978614740733857 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.837012767791748 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.69403483838211 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.55116565053056 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.416426305311273 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.273179951168242 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.138257138869342 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.997373641923415 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.855079206927071 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.712627801028164 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.571234952197985 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.431813240051271 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.288636089681269 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.145324478978697 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.004663972444433 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.862167728708146 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.721826126700956 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.581575532754261 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.442116511236762 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.301355566297259 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.159389137017605 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.018569707870483 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.878548900679787 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.738809043285894 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.59753609860985 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.456165827237644 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.316076414925712 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.175381084658065 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.033406970656921 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.89312039481269 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.752415331131822 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.611850370060315 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.474830698322606 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.333536999566213 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.19297221909582 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.050174867897702 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.908703379009081 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.768433513312504 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.627832871216995 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.486627049365287 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.345498758203844 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.205122947692871 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.064656813282612 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.923897473538508 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.782735394268501 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.643924628534625 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.503378868103027 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.36570686385745 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.224180777241864 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.084330067038536 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.944085453831871 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.802982275302593 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.662501493483099 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.521715214758208 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.381787714205291 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.24102786049914 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.100265105565388 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.959701762479893 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.81926819877903 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.680049028949462 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.540950473263967 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.4001544543675 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.260541422147277 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.120710742305702 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.980537029413076 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.840744376182556 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.700457581158342 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.560905387956802 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.421261957713536 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.280856126063579 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.1410535021916335 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.001259406407674 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.860937265370855 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.720709072916131 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.580902409709357 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.441106393739775 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.301030328196864 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.161131326968853 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.021007574287949 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.880409955978393 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.740647863292094 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.600553750991821 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.460313650391857 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.31978447937671 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.179888119726824 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.039316764691981 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.89920728856867 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.759240018316062 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.6192555013530985 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.4788544518607 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.339078767765203 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.200435624403112 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.060067250714664 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.920224051142848 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7800607309176053 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6448279167043753 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.5050251824515204 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.364942984147505 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.224537434551002 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.08416735724117 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9437580787935738 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.803636100557115 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.663308433406261 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.522891010556902 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.383303345226851 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.243158008741296 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1029217114319674 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9626678625742595 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8223998674096908 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6822565819354767 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.541983648582741 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.401735644591482 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.261659992927032 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1214326918125153 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9812532014797388 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.841079397299855 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7009090337997828 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5606932688732535 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4205115410277081 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.28033800076956705 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14016560693482058 seconds remaining)
    1981 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  8.517 seconds)

**Estimated memory usage:**  1916 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
