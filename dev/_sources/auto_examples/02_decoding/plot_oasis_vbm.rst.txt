
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f19e1dba1c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 205.6264877319336 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.944966077804565 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.411065578460693 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.415688991546634 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.55129599571228 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.032867908477783 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.66412631670634 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.35708512578692 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.04654884338379 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.796770440207585 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.824306964874268 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.57384829087691 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.335576931635536 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.148354493654693 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.959392411368235 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.769505500793457 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.582048177719116 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.425388223984665 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.40474330054389 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.227667030535248 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.050158500671387 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.887250389371598 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.722608241167936 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.559018539345786 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.39628760019938 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.33111596107483 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.162907857161304 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.003488222757976 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.845982483455114 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.69719152614988 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.545387585957847 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.40012695712428 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.250967741012573 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.17015151544051 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.00777906530044 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.849558966500418 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.70384605725606 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.551879277100433 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.402836272591042 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.2507042273497 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.158857345581055 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.00615603749345 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.861814703260148 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.712818428527477 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.57783911444924 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.430164337158203 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.279574228369672 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.136924708143194 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.018715421358742 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.87134325261019 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.72771644592285 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.581398010253906 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.432107962094822 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.284657973163533 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.14105080675196 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.03258763660084 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.885166849408833 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.744103586464597 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.615631942091316 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.46890207468453 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.32461508115133 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.178269788867137 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.03279746732404 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.91800560648479 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.771464437246323 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.628824013930103 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.48629202264728 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.340454866637046 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.19640649066252 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.05509108391361 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.938675369535176 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.79409155375521 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.65073267618815 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.506362722344594 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.364601734522225 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.222201426823936 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.08109508062664 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.93716402796956 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.81841602692237 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.675805454012714 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.533265113830566 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.388688652603715 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.246049404144287 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.104420687778887 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.962395009540376 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.842709625468535 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.700580286425213 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.560013760095357 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.423803979700262 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.284503208117538 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.144431167178684 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.003430756893787 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.878032041632611 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.740433380167973 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.600968381191821 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.458688472446644 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.317780514558155 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.177290572333582 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.036901916776385 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.89633571017872 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.770299911499023 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.631088105758819 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.489721200045418 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.351369360118237 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.21187606224647 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.073354414531163 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.934094397526867 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.80072447295501 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.669125998461688 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.531271258625415 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.391980236226862 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.251476644395709 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.111851624080114 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.976727572162593 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.83798457028573 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.710435877675595 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.570839503715778 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.430383678175446 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.291758868653895 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.151651861286965 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.01208718617757 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.872466428220765 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.742793243439472 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.602879212154605 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.463231671241022 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.324101161956786 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.184345203732688 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.046031850529468 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.907541379332542 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.768053052961363 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.63794653232281 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.502626548286612 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.366504828135172 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.227577888875976 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.087960026157436 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.949602400815046 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.810786527745863 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.679639931142765 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.541445521340854 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.403141915369376 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.26481396811349 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.126487304132882 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.988218898504553 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.849810663636748 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.712427854537964 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.580816721094065 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.442135585497503 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.304051029438876 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.166315259160223 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.027897716368605 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.889652570088704 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.751358335381312 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.617309294248882 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.4795978505627 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.342274266403991 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.203891792605001 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.065638872293325 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.927372607455891 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.788979756681225 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.654680787392382 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.516403138637543 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.378135577492093 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.2398087742887896 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.1016724826368085 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.963625035634855 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.825367501287749 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.6870501185038 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.551865232204963 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.41348747980027 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.274998656391392 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.13673734664917 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.99888961635835 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.8653061611707824 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7274534647175344 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.592042076176611 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4546780245644704 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.31659553267739 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.178952536340487 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.040733728515968 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.9023918106569258 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7641348044077554 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6274381131757027 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.488984210150582 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.350506462034632 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2120760420094365 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.073652576755833 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9352244074626637 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7969248613571738 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6585255379372454 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5210783834810608 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.382744688736765 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2444182478320536 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1060715814431508 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9677332855876862 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8295274862309092 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.691218553445278 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.553253665262339 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.41490782820028704 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2765890925821632 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13829431222311817 seconds remaining)
    1971 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.282 seconds)

**Estimated memory usage:**  1901 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
