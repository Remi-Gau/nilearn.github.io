
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f04471c1b50>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 134.96160507202148 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 21.295774221420288 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 21.53492832183838 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 20.21409797668457 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 19.502467393875122 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 19.072425842285156 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 21.420799414316814 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.231248446873256 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 20.59917640686035 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 20.108824438518948 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 19.71502137184143 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 19.37714637409557 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 19.35803206761678 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 19.069650961802555 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 18.822490760258265 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 18.601591189702354 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 18.373937964439392 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 18.1446473458234 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 17.96053253279792 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 17.794710749074035 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 17.625372648239136 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 17.470445769173757 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 17.328061038797554 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 17.33931731141132 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 17.192161242167153 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 17.043824672698975 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 16.89921839420612 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 16.76159711237307 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 16.62589362689427 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 16.487978918799037 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 16.364551146825157 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 16.24082585304014 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 16.111078441143036 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 15.990018266620059 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 15.972578609690949 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 15.847367150442942 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 15.723825560675726 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 15.598636768959663 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 15.484907401235482 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 15.369347266661817 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 15.257562637329102 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 15.14673077187887 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 15.036111718132382 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 14.927495368691376 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 14.824976530942049 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 14.787385092841255 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 14.675999755444735 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 14.566185342504623 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 14.457441647847492 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 14.35058744586244 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 14.243109941482544 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 14.131920389100616 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 14.026568761238686 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 13.918916040996336 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 13.814813684534144 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 13.70950336889787 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 13.651906830923899 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 13.539432567462585 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 13.427801115759486 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 13.318831855967893 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 13.216665983200073 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 13.113927149381794 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 13.009400967628723 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 12.90618676231021 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 12.80036199092865 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 12.696783212515026 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 12.593023011178682 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 12.487946656212877 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 12.416407374774709 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 12.3143640462903 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 12.213392291750226 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 12.116268154600977 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 12.025126987033419 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 11.925181526027314 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 11.828104541108415 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 11.730528275171917 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 11.634419604351645 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 11.536972278124326 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 11.438223447555151 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 11.37500623208058 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 11.275474905967712 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 11.176975082468104 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 11.080578449295787 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 10.982306285076831 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 10.882150536491757 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 10.783492158440984 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 10.685481115829113 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 10.588767098284317 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 10.491448098962957 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 10.395431089937016 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 10.324480056762695 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 10.226112208523594 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 10.12970370831697 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 10.032480826941871 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 9.935899237368968 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 9.838941900353683 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 9.740816096464792 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 9.647761593159942 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 9.553486201227928 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 9.457147928199381 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 9.35962438583374 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 9.280516891196223 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 9.182576165479773 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 9.086732760216426 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 8.990687150221605 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 8.895251274108887 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 8.798396285974755 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 8.702565420453793 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 8.607230407220346 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 8.51141997214851 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 8.41646992076527 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 8.321269825772122 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 8.258992723056249 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 8.181004146559049 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 8.089156995739854 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 7.993284215097842 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 7.897108431520134 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 7.801090835506081 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 7.7055230787244895 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 7.611305332985245 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 7.516388098398844 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 7.420354663833114 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 7.3320482793401505 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 7.242439281649705 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 7.148053369214458 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 7.053435945510864 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 6.957545359929403 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 6.861824426125353 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 6.766362279653549 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 6.671226044957952 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 6.575850285016573 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 6.479780630300973 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 6.384883952863288 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 6.295904924995021 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 6.204460891325082 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 6.1089955789071535 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 6.014429316801183 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 5.918889477305169 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 5.82386657120525 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 5.729110331844082 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 5.6349712780543735 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 5.539626069102727 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 5.444439068646498 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 5.349623385009232 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 5.261234680811564 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 5.167857827811405 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.073279570226799 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 4.978880351903487 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 4.884367349985483 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 4.789831969561993 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 4.694610357284546 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 4.600167643944949 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 4.505988497483103 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 4.411766853207856 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 4.317524925454871 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.228093570278538 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.134355367758335 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.040104135586198 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 3.9458006243162513 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 3.8515657029061945 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 3.768933892250061 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 3.686333834014324 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 3.590834129003831 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 3.4958106974151235 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.400623077299537 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.3241681546875927 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.230783810098487 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.1345271792954312 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.0387142726353233 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 2.943220492650771 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 2.8477454465978287 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 2.7526761425866018 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 2.6573320654935615 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.5621522851072984 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.466561539419766 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.3711202144622803 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.2785158157348633 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.183083464196846 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.087591840979758 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 1.9921606319576668 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 1.8967429002126057 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 1.8017128238361844 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.7065926357940002 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.6120101506592799 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.5169074639030125 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.422055585964306 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.3271474274255897 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.2336677115231274 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.1386911970503786 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.0436302745153032 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 0.9485938298074822 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.8536452335837 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.7588025629520416 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.6638510684275256 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.5688777879341361 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.4739886369460668 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.37910772829639666 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.28450313195359284 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.18972468616986518 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.09484894311607783 seconds remaining)
    1969 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 46.090 seconds)

**Estimated memory usage:**  1912 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
