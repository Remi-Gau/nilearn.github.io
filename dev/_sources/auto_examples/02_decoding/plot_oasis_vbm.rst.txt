
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f1160e619d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 230.82971572875977 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 43.97548031806946 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 44.51046895980835 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 42.06446750958761 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 40.580087661743164 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 39.69418501853943 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 38.887474060058594 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 39.160068307604114 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 39.25254821777344 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 39.35306538475884 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 39.19342517852783 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 39.08461527390914 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 39.75137122472127 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 39.461191360767074 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 39.15451761654445 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 38.558156967163086 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 38.07630383968353 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 37.990272129283234 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 37.71693968772888 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 37.65304806357936 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 37.516645431518555 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 37.60577900069101 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 37.224554538726814 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 36.79133067960325 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 36.502547581990555 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 36.2157187461853 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 35.91922919566815 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 35.68550846311781 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 35.37125767980303 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 35.13265721551303 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 35.61733102798462 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 35.59865646977578 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 35.2845738530159 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 34.99474586862506 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 34.64117194624509 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 34.314179931368145 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 34.099131160312226 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 33.773852934708465 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 33.45637807093169 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 33.230987120897346 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 32.99244976043701 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 32.73316639807166 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 32.497788213548205 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 32.22532548460849 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 31.924607276916504 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 31.647141536076866 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 31.38621198612711 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 31.200966748785465 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 30.950200994809467 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 30.74996087989029 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 30.471977949142456 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 30.212126694473564 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 29.945911150712234 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 29.73223446000297 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 29.468144134238916 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 29.234487360174004 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 28.979083401816233 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 28.723735817691733 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 28.514429980310897 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 28.26217712790279 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 28.00698002179464 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 27.775988688234424 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 27.545797740259477 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 27.315452537839374 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 27.117268711328506 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 26.947610763403087 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 26.72251533017014 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 26.493985766795145 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 26.277170293471393 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 26.081727504730225 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 25.853987966265 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 25.677507615425217 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 25.45433807373047 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 25.23453127847959 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 25.024492573093724 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 24.793967405954998 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 24.568037798530177 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 24.33495984449015 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 24.153454517706848 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 23.95044268837458 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 23.74032175540924 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 23.512258067543126 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 23.31276815112044 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 23.104463037238062 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 22.893094482876005 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 22.702807720969705 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 22.487605549568354 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 22.277040522674035 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 22.071063475175336 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 21.851610459638444 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 21.658169454998443 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 21.470919902508076 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 21.266808178113855 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 21.07291016783766 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 20.86779438181126 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 20.659553025898184 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 20.45686811208725 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 20.249382493422203 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 20.03428990500314 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 19.83516162814516 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 19.62203049659729 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 19.42832042675207 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 19.213483548631856 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 19.004281293998645 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 18.804388926579403 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 18.59226734297616 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 18.3900908074289 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 18.193144470731788 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 17.98476686301055 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 17.780802427081888 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 17.568464756011963 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 17.366714159647625 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 17.174393909318106 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 16.968662662843688 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 16.762540875819692 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 16.56053298452626 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 16.360411627539275 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 16.156505435959907 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 15.965735556715627 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 15.75980895106532 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 15.55567979812622 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 15.352848984978417 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 15.159902736788892 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 14.979387355044604 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 14.777315608916744 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 14.58564805984497 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 14.380692046786113 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 14.176451818210872 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 13.972205445170403 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 13.789969675300657 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 13.587466936845045 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 13.384516048067399 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 13.182403961817423 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 12.981902749914873 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 12.788188304474104 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 12.586855234923185 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 12.390344844144932 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 12.195774574349397 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 11.99935175370479 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 11.806357382012786 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 11.623310463769094 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 11.42525375650284 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 11.22828707560687 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 11.048903768712824 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 10.85561728477478 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 10.667816589618552 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 10.474120705095055 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 10.278554493067217 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 10.082581300993224 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 9.892433449725976 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 9.702763001124064 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 9.510011868761074 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 9.314874096920615 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 9.11760191823922 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 8.919357197625295 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 8.725188063037011 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 8.53327106206845 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 8.337958150608523 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 8.142386677898937 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 7.947227461532977 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 7.75237113237381 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 7.560124144050646 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 7.366264513981195 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 7.171820624474368 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 6.976956070923224 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 6.782412687937419 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 6.5884145196661885 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 6.392416061755426 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 6.196188063848586 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.001934912077774 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 5.805699053932639 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 5.612484278037534 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 5.417772803195688 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.222757256789015 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.029757253054915 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.8371796267373215 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 4.646839662031693 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 4.46046914623282 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.268699860304928 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.07692699459012 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.8822286658816867 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.689397973908904 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.495594404555939 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.3019529926320894 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.1085610597029976 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.914124057099626 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.719628082808628 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.5273537878046697 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.3330973006309343 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.1397783264281256 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.9467838061483282 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.7528252876241794 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.558681527773539 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.3646210401169376 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.1700723933190416 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.9755268280322735 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.7808342904460672 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.5859602792614003 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3908624167394157 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.19552629317470532 seconds remaining)
    1974 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  31.508 seconds)

**Estimated memory usage:**  1897 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
