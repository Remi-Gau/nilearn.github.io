
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f8479076220>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 154.4475555419922 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.1155047416687 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.40668797492981 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.839890877405804 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.42232346534729 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.365973711013794 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.194108724594116 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.065687043326243 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 23.0321044921875 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.7822359667884 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.655590534210205 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.968041766773574 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.82774551709493 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 22.57839562342717 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 22.409541504723688 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 22.28641176223755 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 22.236369252204895 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 22.044517194523532 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.84492829110887 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.636372277611184 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.458845853805542 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 21.28269628116063 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 21.117746418172665 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.97499254475469 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.816579500834145 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.733840703964233 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.57046653674199 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.446120959741098 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 20.30500796863011 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 20.158396457803658 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 20.02622652053833 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.87909129358107 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.747586488723755 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.602593544757728 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.506326451021085 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.361502272742136 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 19.22284796502855 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 19.08247169288429 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.94450506411101 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.811012940529068 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.68368434906006 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.553747275980506 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.422102610270183 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.32764628876087 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 18.19177729433233 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 18.059741338094078 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.929858041846234 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.800984428284014 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.678396781285603 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.564345992341334 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.436251163482666 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.336508175906012 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 17.218666058320267 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 17.10006670232089 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.972243211887502 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.847278464924205 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.72487109048026 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.59708747947425 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.475527204316236 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.36715710365166 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.261868635813396 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 16.140790063826763 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 16.01995269713863 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.901301985695246 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.787971436977386 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.663081407546999 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.538290767958669 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.413591178495492 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.296620761646944 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.193456915841587 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 15.072916235242571 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.951896543234167 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.82867219712999 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.715188731885936 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.601165745709393 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.484103520711264 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.369946228830438 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.250173788566094 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 14.143268065574842 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 14.026156455655642 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.904762148857117 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.785622287679603 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.676868560837535 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.555440161601606 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.441837810334706 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.325245352352367 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.21060049256613 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 13.100754039040927 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.981973604722457 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.859097684367319 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.739625930786135 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.620391235246762 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.500069867009703 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.380318467335035 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.261308076533865 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 12.140975738826553 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 12.033109585444132 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.915906736531209 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.796303661502138 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.678306550690621 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.56071400642395 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.442458025299675 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.3323333123151 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.21868170812292 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 11.109402069678675 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.989477452777681 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.872552021494451 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.756160038653935 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.638924280802408 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.520620687292256 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.402985897931186 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.286570134463611 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.170154963220869 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 10.05800045697035 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.941852732708579 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.825026833492776 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.70847671607445 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.590507625514626 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.473081245260724 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.357275506027607 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.241348107655842 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.125017022298389 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 9.014088368806684 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.898202128526641 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.780517355088264 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.664677381515503 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.549500946014646 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.432102550671795 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.316750571131706 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.201297643572785 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 8.086507870600773 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.9748458243508376 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.860436128847526 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.744557898743709 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.627461871104454 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.511592741365786 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.395828695858226 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.280267334332431 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.16315575959026 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.049754813420686 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.934415306363786 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.831385443396602 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.7149114877405305 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.599174998023293 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.482266651259528 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.367392030255548 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.251081081285868 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.1354548639180715 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.02222762236724 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.905828637564743 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.789315859476725 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.672350768221924 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.555653019955283 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.439981776904437 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.32348538993241 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.207222031008813 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.090743932968531 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.9765510999473035 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.859784210784525 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.743933640186142 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.628992021083832 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.512612179939792 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.396012023643211 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.279502331844868 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.163090682611233 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.0474849686478125 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.9330900950604173 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.8172142605581683 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.7015086582728793 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.585427335028112 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4697391145369587 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.354523782841643 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.2393873347792517 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.123973738940465 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.0104005227143737 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.8944690568106513 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.778415008024736 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.662477840811519 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5463797885380433 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.430384416153977 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.3146213160620794 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1988895927344894 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.082976922884092 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9679692690489723 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.852017361184825 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7362640483959302 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6203005365146104 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.5044823763842252 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3887182448772672 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2729170953155193 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1571069516633685 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.0412964633622095 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.9258920451005299 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.810112648059667 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6943696946212926 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5786362000000782 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4629218043113241 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.34717224213072495 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.23145150656651972 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11570415784366167 seconds remaining)
    1968 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 59.501 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
