
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3b73d63b50>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 169.25334930419922 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.597614526748657 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.794496536254883 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.959259668986004 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.381362676620483 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 27.020577907562256 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.79615410168966 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.570508377892633 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.38909149169922 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.16337299346924 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.9122371673584 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.655724048614506 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.37816047668457 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.100188493728638 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.881924322673253 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.63765867551168 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.426395654678345 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.225780276691214 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.028854370117188 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.83172911091855 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.635196685791016 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.45146041824704 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.26423209363764 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.092007688854054 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 22.910451094309487 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.75947618484497 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.66777852865366 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.52108445873967 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.391714470727106 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.25288989626128 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.13264838854472 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.01509521853539 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 21.87154072523117 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.72949029460098 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.589515265296487 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.456480605261667 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.324648936589558 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.20575365504703 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.061962943328055 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 20.91889256697435 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.80354118347168 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.67793923471032 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.544409343174525 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.405258916145147 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.273173440586437 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.143138382169937 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.00805683757948 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.874281502784566 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.735235532124836 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.604945012501307 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.462214469909668 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.332714375327615 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.22477747843816 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.130830427385728 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.01463050312466 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.89747649973089 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.77904224395752 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.629372638568544 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.479335447837563 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.327878891411473 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.16671641667684 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.008450684000234 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 17.84863591963245 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.68525673472692 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.54350256919861 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.408483945406402 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.25987117940729 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.107263867534808 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 16.955785190357883 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 16.80868781476781 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.6634464604514 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.52710693319079 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.397461785210503 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.27823876681393 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.14843197126646 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.01925492286682 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 15.892973912389655 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 15.769390072141375 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.641572701625336 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.519342760496501 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.39138150215149 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.257494393690134 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.127976929269185 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.002287586051297 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 14.873364811851864 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.744595191057991 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.614757504574087 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.482986387165115 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.353172605687922 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.228599709071469 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.09841561317444 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 13.97345635655162 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 13.854098610256031 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.739712922803818 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.619888549155377 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.49761112112748 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.376489420731861 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.251068144729457 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.123703153765932 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 12.99897982857444 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 12.872951745986938 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.748995561410885 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.623509556639428 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.495573039193756 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.368627841656025 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.240733952749343 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.110061748972479 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 11.98295145836946 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.85829594400194 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.7335032169972 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.607555627822876 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.483609208115586 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.359121084213257 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.23406738095579 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.11344091515792 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 10.990550518035889 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.866822135859522 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.745792653825548 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.62104310423641 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.50006283431494 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.375131924947102 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.251900290654712 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.127567158370722 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.000388054343743 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.874169441961474 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.748729133605957 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.622410433632988 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.497284280972218 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.370260313153267 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.242815191431562 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.11569723716149 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.986519558739117 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.855866396065913 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.724951446504521 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.593586106798542 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.4625053052549 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.330567191628848 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.197054394840324 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.065064665200055 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.932556075157879 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.799220085144043 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.670177248352808 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.539768830151625 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.408414799016672 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.277528882026672 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.147362076002976 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.015923343292654 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.884094136101859 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.751993308196197 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.621087159086394 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.490497827529907 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.360064410215971 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.230462626407021 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.101324570724388 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.972039832697286 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.843011540751304 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.712780567315908 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.582404598308976 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.451617228833935 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.321270923194645 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.191025376319885 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.0607404442307375 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.9296955738538575 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.799330992201354 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.66884424628281 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.539944757114758 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.40985796537744 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.281239503871895 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.15214711143857 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.022522218128633 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.8926652038798615 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.763495779874032 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6350104254345563 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.5062034447069115 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.377294811709174 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.248514073235648 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1193794987418433 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.9901057986889854 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.8608739001027654 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.731563123244813 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.602024793624878 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.471904229064014 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.3416168087131375 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.2126923727858916 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.082348408906356 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.9519708543210417 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8221517224465649 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.6923918698560745 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5626078869434112 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.432701611645007 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3026898158224005 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.1727848876833291 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0427621801694233 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9130713470241566 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.7827708204996955 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6524373017824613 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5220675371131118 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3916141526953218 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26111875158367737 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13057825912782295 seconds remaining)
    1972 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.794 seconds)

**Estimated memory usage:**  1892 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
