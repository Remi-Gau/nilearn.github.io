
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f5ae9f5f190>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 264.6040916442871 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 58.360135316848755 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.61357569694519 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 40.393094857533775 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 37.611690282821655 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 36.627978801727295 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 39.22305647532146 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 38.55214067867824 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 37.230228424072266 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 36.21340092023213 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 35.67157244682312 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 34.868226593190975 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 34.16462222735087 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 33.56822718106783 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 33.02420353889465 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 32.625641981760666 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 32.1751092672348 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 31.920485720914954 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 31.52837088372972 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 31.13700022195515 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.796982288360596 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.468530598140898 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 30.148006785999648 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.961809635162354 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.67084503173828 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.374143600463867 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.092220251376812 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.840910452383536 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.58854252951486 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.343213796615597 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.178357044855755 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 27.935225602119196 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 27.69633775949478 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.477358651883673 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.25240487210891 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.028110674449376 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 26.810673899120754 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 26.66529280430562 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.46098711616115 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.251599776439182 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.0608491897583 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 25.869130157842868 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 25.6816866284325 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.535406295643295 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.346909913149748 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.199695931540596 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.324131882709008 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.1237535679594 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.92350395520528 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.76162322686643 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.557072639465332 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.358770959517532 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.16815445973323 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 23.97499635984313 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.77939658694797 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.5907367142764 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.446891512189595 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.262552524867807 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.088533886547744 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.911079766386646 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.733307917912803 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.554022222268777 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.40873071455186 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.226471189468626 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.04465338587761 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.869121496494003 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.69400655862057 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.519232959889653 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.340474858003503 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.18828568942305 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.012453079223633 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.836906198044897 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.66116672092014 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.4869079687824 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.3152094016204 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.17566283543905 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.006784903375724 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.84107297736329 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.680576672920814 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.51095637188682 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.382737040519714 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.209899566791677 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.05422718931989 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.883344523877984 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.78841721443903 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.67760689118329 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.501524182253103 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.332214325323875 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.185030243613504 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.01433717266897 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.84221657117208 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.67124952850761 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.498715753140658 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.327323288045903 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.17877076027241 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.015055392917837 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.846947014331818 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.6771252474834 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.50581251845068 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.339739717618382 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.170368909835815 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.01752014915542 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.84907151671017 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.680269167261217 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.511732028080868 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.343727384294782 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.17419431344518 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.020901189786251 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.853317110626787 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.687658850206148 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.521334669806741 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.354836107374313 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.187788912228175 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.021472025761561 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.86780139437893 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.702442749686861 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.537991647062631 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.3734740884895 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.210465059442036 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.046399489170364 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.891196250915527 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.725123385752529 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.559951250670387 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.457535129252488 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.29549902485263 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.129579305648804 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.972625932996236 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.806570828430296 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.639650672674179 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.472359958545182 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.306021965467012 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.139960853198103 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.974078041134458 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.81557798027096 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.650643459006922 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.485297618088898 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.320143980138441 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.155156487095965 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.990507733994637 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.833782069117046 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.671667030879428 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.51046843731657 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.347942916440292 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.185010890027026 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.021298580699497 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.85726051494993 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.699576482380905 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.535741126456228 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.371926307678223 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.208100880552458 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.044780333836872 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.881199677258927 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.7221646057932 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.559150723850026 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.396249229257757 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.233344239573325 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.070679505666097 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.907848315633786 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.7450092261350605 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.586943926301393 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.4251574873924255 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.262814909775065 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.125680119902999 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.964685146062652 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.802710399395082 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.642827041221388 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.480168319610228 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.317749113379838 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.15560990288144 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.993087642996974 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.83065170400283 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.675212761114913 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.512966139372005 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.355359959464542 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.193357352552743 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.031474726540702 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8694651018489488 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.7095415619133556 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.5473658770657654 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.38532245492136 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.2233755058712426 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.0615792985779144 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.899729610799433 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.7379488554157194 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.577474718508513 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.415824058893565 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.2545466807580765 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.0932745321549198 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9318022626511593 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7703942142466387 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6097750287306936 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4484446360802776 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2872228026390076 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1260448255687179 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9649078772240078 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8039885178590432 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6430579594203404 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.48241826483440886 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.3215301060917402 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16072636752871414 seconds remaining)
    1989 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 19.976 seconds)

**Estimated memory usage:**  1909 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
