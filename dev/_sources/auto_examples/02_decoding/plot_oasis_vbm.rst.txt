
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f42651897c0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 190.80877304077148 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 33.41159510612488 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.19649362564087 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 28.95672885576884 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.37257695198059 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.453728675842285 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 28.01381595929464 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.66244581767491 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.395713806152344 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.14735698699951 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.95645022392273 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.756751342253253 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.732945044835407 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.532523466990543 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.318280254091537 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.11042658487956 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.910322785377502 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.721486007466037 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.553091526031494 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.372045893418164 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.331573724746704 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.16457724571228 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.0204995545474 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.850703716278076 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.676390488942463 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.544742345809937 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.389892119627735 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.323607753824305 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.184260368347168 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.040610543612775 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.881457090377808 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.737709929866174 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.607466220855713 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.47647697275335 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.412091002744788 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 23.28184471811567 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 23.13868326610989 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.997358051506247 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.84952164951124 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.71176789357112 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.575711250305176 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 22.50440480650925 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 22.3625028246925 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 22.245913976846737 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 22.09498065168207 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.944989336861507 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.801900210587878 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.64727503188113 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 21.53709304332733 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 21.38353901493306 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 21.248072147369385 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 21.092273950576782 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.934575135891254 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.785126798557787 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.631756800192374 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.480996565385297 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 20.36826917103359 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 20.21418549721701 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 20.065173206658198 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.92091709072307 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.773690223693848 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.629747187505004 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 19.482007372763846 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 19.3648795740945 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 19.21653202176094 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 19.069379072922928 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.920523195555717 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.771996039063183 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.62611173180973 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.47540581399116 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.354520354952133 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 18.20831981511183 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 18.058492448594833 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.909807636313243 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.759046812315244 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.61048754056295 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.466965098130075 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.321119940126096 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 17.196272312066494 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 17.047128454039367 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.899462819099426 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.75354278529132 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.607670882853064 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.461408462869116 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 16.316112472897483 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 16.186492415035474 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.048456025678057 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.901338966413476 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.753862814469771 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.610217997197354 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.46466981040107 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 15.318851987084189 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 15.192193912423177 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.045480410257976 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.89962702609123 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.753196038697897 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.610462844371794 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.466266280597019 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 14.327692216756393 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 14.18632791259072 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.060289144515991 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.920609995870306 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.777779836280674 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.633854294286191 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.489598641028772 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 13.34696508589245 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.203012583390722 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.071599320830586 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.92988344475075 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.786653752720683 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.643570856614547 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.501290533993696 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.357931528772626 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.215099604783859 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.082264343897501 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.93911690297334 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.796025761242571 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.653253117178242 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.509405330076056 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.367749156070357 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.224991957346598 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.081773687000117 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.953399075836433 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.810637964465753 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.667802010813068 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.525106048583984 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.386301956479512 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.24450916192663 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.101694285869598 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.971001577007678 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.829221578744741 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.687472550923587 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.547024098309603 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.404607658099412 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.262896740614478 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.121637017638594 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.98556484895594 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.843180080399897 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.701669775921365 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.559485003244962 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.417624269212995 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.275582212082883 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.133701824806106 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.992103139837305 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.857447769906786 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.716330848891159 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.574823627733204 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.433778743354642 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.292023413890117 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.150549054945875 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.009395599365234 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.872807005383321 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.731775057943243 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.591045301724104 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.450225950835587 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.309132468315863 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.168324189308362 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.0276945548452385 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.890252164647548 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.748986814007069 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.608211636543274 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.467397645393514 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.326437246652297 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.186065055109972 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.045733550699746 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.9080166599967265 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.766930732382349 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.625979701915901 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.485304696219308 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.344427166605842 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.203809864380781 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.0629280463993895 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.922403130420419 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.7845430649773926 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.6489315060363423 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.508740322930472 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.3683106357401065 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.2278265266095176 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0873087952645974 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.946849030489362 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.8076074653201633 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.6671643744516107 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.5266159681173472 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.385959930107242 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.2453485571819805 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.1047983105118213 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.964199132816766 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.8245397417303075 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6839544164373519 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5435161098601324 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4029596353832043 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2624788221888517 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1221041083335876 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9819013602993031 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.841953948601005 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7015574284088917 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5612685534418845 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4209257648681021 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2805878971562241 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1402908341968479 seconds remaining)
    1993 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 15.564 seconds)

**Estimated memory usage:**  1929 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
