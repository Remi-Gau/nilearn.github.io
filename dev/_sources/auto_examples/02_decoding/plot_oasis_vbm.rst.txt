
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7ff294094040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 146.8348503112793 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 25.079773902893066 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 23.293620586395264 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 22.67180093129476 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 22.310639142990112 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 22.10875654220581 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 21.89814019203186 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 21.735162939344136 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 21.564210891723633 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 21.383355723487007 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 21.20975637435913 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 21.09585499763489 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 20.957589626312256 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 20.865111130934494 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 20.730331829616002 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 20.584182262420654 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 20.451530814170837 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 20.33606095875011 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 20.253758695390488 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 20.119269948256644 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 19.987536191940308 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 19.87743860199338 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 19.772559556094084 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 19.653663738914158 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 19.545499324798584 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 19.462474822998047 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 19.34620604148278 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 19.225683865723788 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.103732926504954 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 18.987383143655183 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 18.879181226094566 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 18.768477809044622 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 18.649671256542206 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 18.535358436179884 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 18.418400778489957 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 18.30089521408081 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.192290676964653 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.074536735947067 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 17.953999494251452 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 17.839063338744335 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 17.734915733337402 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 17.62248758571904 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 17.50633713177272 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 17.397076396055 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.28169194134799 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.17436565293206 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.064364049745645 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 16.947274826942607 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 16.828687826792397 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 16.72906071799142 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 16.615171194076538 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 16.50441044919631 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.388756807033833 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.28613738743764 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.17673831515842 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.06822850487449 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 15.952477659497944 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 15.83548395257247 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 15.72358332831284 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 15.613724482261528 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 15.49993419647217 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.389937838570017 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.27479354796871 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.164914123595706 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.049889415502548 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 14.94001447237455 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 14.823481306885228 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 14.71406637020965 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 14.600847833296832 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 14.490270030671272 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.378573145185198 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.275006005461787 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.176189846462673 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.064409125341129 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 13.950790199073584 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 13.837073246637981 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 13.732359798331009 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 13.621557638242647 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.508755708352114 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.397254832183258 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.284882545471191 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.174902945388983 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.061119864626628 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 12.946930802012064 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 12.835656495321365 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 12.723648211535286 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 12.614790733470473 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.50614098022724 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.397013924338601 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.28768296188183 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.177706135643854 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.066298513622074 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 11.954029953998068 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 11.841735260460966 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 11.733177393040759 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.624125844553898 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.513786534468332 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.401471661538192 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.29159817890245 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.181428531203606 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.071057558059692 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 10.95832624529848 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 10.847390015920004 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 10.736358681928765 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.625736236572266 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.515479564666748 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.404022950046468 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.29157979911733 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.181588543785942 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.070243881383073 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 9.959415045651523 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 9.84720904977472 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 9.73714986869267 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.625694724310815 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.515125149174741 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.404318695483 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.29459783126568 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.184258789078802 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.07266427702823 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 8.961760715276254 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 8.849852403004963 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 8.73829681223089 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.6280469308134 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.518446457095262 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.40816661619371 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.296963691711426 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.186923670390296 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.07856352498212 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 7.96659542620182 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 7.856309415758118 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.745944591668936 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.636285166704018 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.524704261259599 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.413609560270955 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.302239357535519 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.192105408068056 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.081158918492934 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 6.970002395393204 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 6.858457634414451 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.748205112896377 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.637141738619123 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.525836550597603 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.415541840271211 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.305141767421802 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.199824624591404 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.0893183741076236 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 5.978227321415731 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 5.867414652895765 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.7562257599186255 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.645380962615045 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.534290313720703 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.423584862260629 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.312776565551758 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.20246889076981 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.091885743203101 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 4.980873976984332 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 4.869746746161045 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.758744118319955 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.647814460947544 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.537183497686806 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.427023708820343 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.316440170596105 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.206055211432186 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.095413692158424 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 3.984702116105615 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.8740618951392896 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.7631059813212198 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.6524584379024847 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.542056038266136 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.4312321589543266 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.3205994998707493 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.2100617481253995 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.0990645497344262 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 2.9881420604066355 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.877235404376326 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.766538483755929 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.655977205796675 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.545141228174759 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.434675966755728 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.323835641978173 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.2132776578267412 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1030483259021904 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 1.9926194437257536 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.8820466682559156 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.7715249890866487 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.6609162253302499 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.5503266242242628 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4395439216797365 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3287595738755895 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2180330210892611 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.107372898804514 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 0.9965923581447901 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.8857791225115458 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.7751106363504043 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6643905246380678 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5536430309980344 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4429643932653933 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.33222211193917367 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22151595173460067 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11077584932796919 seconds remaining)
    1960 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  57.566 seconds)

**Estimated memory usage:**  1863 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
