
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fa35b0246a0>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 186.5243911743164 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 31.31550931930542 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.159618139266968 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.705202579498295 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.90797472000122 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.30703830718994 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.944991191228233 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.594836950302124 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 27.32533836364746 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 27.21139852205912 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 27.046560049057007 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 27.166979507966477 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 26.9612344900767 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 26.788526369975163 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 26.57644282068525 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 26.355699221293133 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 26.166454792022705 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.993961670819452 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 25.94100557433234 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 25.76201963424683 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 25.60149621963501 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 25.44500325974964 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 25.28903885321184 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 25.14853542783986 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 25.018747011820473 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.954411268234253 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.779999531232395 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.612636654465287 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.447068895612446 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 24.32940395125027 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 24.199565887451172 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 24.029762106557044 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 24.041800260543823 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.877765771114465 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.750576271730313 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.13938127245222 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.84420569737752 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 25.29296878866247 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 25.66257096591749 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 25.894056589175495 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.1204891204834 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.2834614079173 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.398735863821848 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 26.562229672143623 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 26.479734095660124 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 26.257648441526626 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 26.026212080665257 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.763374313395072 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 25.49463363488515 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 25.230529376438685 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.974618196487427 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.72031986947153 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.474716076484093 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.283035723668224 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 24.05099919990257 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.8191742030057 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.58983087539673 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.367486836617452 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.143327745898013 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 22.92349698179859 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.744025230407715 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.52925401046628 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.316979369809548 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.10130887939816 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 21.888886064291 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 21.680424873645492 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.471286744782418 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.30440088528306 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.104369191562427 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 20.899409135182697 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 20.69566934449332 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 20.49546265266311 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.30430009629991 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.111923805654865 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.91811749097463 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 19.75574016571045 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 19.563779140773573 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 19.376252610962112 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.187093331263615 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.997945245308212 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.816075325012207 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.63123686814014 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 18.476959484379464 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 18.294254771198133 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.11299705505371 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.932890948127298 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.7567616673403 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.57891670314745 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 17.39974615790627 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 17.244657240556865 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.10255675845676 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.925478366705086 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.748644165370777 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.572831584561257 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.398611641944722 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 16.226518881948373 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.07328224182129 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.90205615820344 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.730850896056818 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.562831919602672 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.393507480621338 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 15.225786945607402 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.055970168581196 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.88986365077565 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.743307260366587 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.578596319471087 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.4121339006244 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.247391970358162 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 14.082126573280052 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.916230061732302 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.751690886237405 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.605022241403391 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.440394810267858 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.277636675708061 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 13.115594788601523 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.953860272531923 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.791622531825098 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.631328099813217 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.482598397691373 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.321416947020202 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.160572528839111 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.999910545743202 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.841360721431796 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.682680932486928 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.528857231140137 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.382778787612915 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.224569820222401 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.068145663719477 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.912086725234985 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.755816825600558 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.59891260587252 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.44304837343347 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.297236066876035 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.142566971312789 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.986772067511259 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.831576153084084 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.676911971148323 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.521742201199496 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.367265722025996 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.21953677616531 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.063733679907662 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.90822778187745 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.753245179082306 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.599248527646898 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.445236682891846 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.290742520628305 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.1368746626867 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.988970406201421 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.834867142342233 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.680696036191595 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.526921431223551 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.373281572038764 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.220821455905312 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.068156061608807 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.9200469735380885 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.766618828619681 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.614420450650728 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.461359854716404 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.30809504170961 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.154922353396626 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.0018473863601685 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.852878056697964 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.70023767153422 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.547310593669399 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.395646897757926 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.243506800044667 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.091372498546738 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.939105048151073 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.790584064665294 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.638995387850429 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.4874487764695115 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.336018737993742 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.184650182723999 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.033531640995445 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8824749952075126 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7333998339516774 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.582839467308738 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4320380472194003 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2816922530699313 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.131419902407257 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.9813919332292342 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8318742414864384 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.681843409171471 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5335511314412935 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.383525039838708 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2336661493456043 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0839875564780286 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.934443435566948 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7848883689718043 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6355007249842244 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.486949268140291 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.337684626354597 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1885660191377003 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0396148380220245 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8908171899539908 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7428200856233255 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5940953663417271 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.44568134685458266 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2970329800037423 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1484678186962952 seconds remaining)
    1987 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 14.428 seconds)

**Estimated memory usage:**  1925 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
