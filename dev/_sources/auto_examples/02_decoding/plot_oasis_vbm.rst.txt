
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f3bbf9419d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title, y=1.2)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 279.85334396362305 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.271039724349976 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 45.822230100631714 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 44.527712742487594 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 44.05506205558777 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 43.71515250205994 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 43.277959267298385 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.00652313232422 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 42.85370635986328 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 42.72429031795925 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 42.49816179275513 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.47013850645586 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.15498065948486 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.04203095802894 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 41.88037184306554 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 41.614131927490234 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.26196777820587 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.01742475173053 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 40.74768829345703 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 40.44008613887586 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.18985724449158 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 39.879146314802625 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 39.67705271460794 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 39.46370816230774 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.250087579091385 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.03003716468811 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 38.776420464882484 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 38.52202894952562 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.265587363924304 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 37.99746931832412 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 37.76746439933777 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 37.48864852228472 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.279202699661255 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.02609289776195 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 36.789211960399854 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 36.5381555557251 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.26952661408318 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.0240431798471 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 35.760762992658115 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 35.5329787180974 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.35120391845703 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.19800277454097 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 34.9491579305558 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 34.69828320104022 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.45971686189825 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.226843436559044 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.08399467882903 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 33.83270074458832 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 33.58117051919301 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.35140063811322 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.15013289451599 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 32.90488983135597 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 32.6736297424023 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 32.42489461628896 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.234977386615896 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 31.989322879097678 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 31.73896428516933 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 31.48117099310222 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.246650819120735 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.096244585716118 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 30.861730496088665 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 30.630254815836423 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 30.405386624797696 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.20216952429877 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 29.99247056245804 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 29.810834389466507 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 29.595973946831442 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 29.366506651266295 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.133973696652582 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 28.908798694610596 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 28.674183538981847 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 28.467149724423045 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.235077328152126 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.01411166909623 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 27.786425712946297 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 27.557064692179363 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 27.329990663026507 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.123437971263737 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 26.895171214372684 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 26.665720900402793 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 26.434759855270386 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 26.1981172296736 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 25.9729365023171 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 25.755545552954615 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 25.52405632109869 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 25.308904830147238 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.086579173110252 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 24.867059995388164 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 24.6393929828297 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 24.398175346717405 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.194797568851047 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 23.962691647665842 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 23.754413273023523 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 23.535232543945316 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 23.310691508841007 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.11683161635148 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 22.911094506581623 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 22.69532873458469 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 22.473222752006688 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.254338931555697 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.034531831741333 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 21.823895647974297 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 21.59851064869002 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 21.376831103297114 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.16712027329665 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 20.940454335439775 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 20.72355766116448 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 20.498900814591167 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.274845397030866 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.04586713029704 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 19.81581765955145 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 19.589688084147 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.37280363695962 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.150808553780074 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 18.946869532267254 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 18.722119756366894 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 18.506126798432447 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.286246644126045 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.062207537182307 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 17.841700622013636 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 17.61246967315674 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.382158486311102 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.156889426903646 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 16.9308775653684 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 16.709991124368482 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.486400842666626 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.263600731652883 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.041046059976413 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 15.816589191555977 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 15.597946525544158 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.373192310333252 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.151049049755999 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 14.931631485621134 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 14.7136087112857 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.499509992884166 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.277415655277393 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.055131126852597 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 13.834323547182292 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.61439407735631 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.396643156627956 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.181563547679355 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 12.967083672259717 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 12.748840583881861 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.532565887157734 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.311781658066645 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.092418358243744 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 11.878234637926703 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.659288216610344 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.438766737242004 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.218445225850047 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 10.994556506474812 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 10.777300730446317 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.55675667210629 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.334719517651727 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.114569605170907 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 9.891711012009653 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.671569854785234 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.448910918205407 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.229264108440542 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.009829348738089 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 8.789506256580353 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.568256061269631 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.349592205918865 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.12990700394098 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 7.910636326161827 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.6914832881002715 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.470301524702324 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.249013755135907 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.02932748340425 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.8111785544446235 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.593044617596795 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.373379429878547 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.154502996178561 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 5.934011588895941 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.7137960538096815 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.493212120873587 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.273212747140364 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.053688445333707 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.8337734763541915 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.614421246438053 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.394038014941745 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.174272105180098 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 3.954189400096516 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.733991155207483 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.513872291730798 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.29381976900874 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.0743494213268323 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.855213640845396 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.636439571989343 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.4167049498785107 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.1970541853653756 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.9775015508941332 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.757704565922419 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.5377218340344996 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3179352873379422 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.0982338281778188 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8789116411792988 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6590782046923178 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.4393611580434472 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.21966673980406182 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  35.099 seconds)

**Estimated memory usage:**  1926 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
