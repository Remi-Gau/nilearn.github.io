
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f2ccd392130>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 174.42703247070312 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.7584969997406 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 27.695095539093018 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 26.817190249760948 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 26.340439319610596 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 25.97552990913391 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 25.68936888376872 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 25.473279237747192 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 25.294692993164062 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 25.122198396258884 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.04634118080139 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 24.89694408936934 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 24.741450389226276 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 24.59557681817275 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 24.469729593821935 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 24.31142536799113 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.166776061058044 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.022130601546344 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 23.891518115997314 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 23.757293412559914 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 23.60273551940918 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 23.44579251607259 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.30918604677374 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.175862934278406 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.028454303741455 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 22.893656492233276 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 22.770394453635582 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 22.649644948818064 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 22.518675225121637 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 22.376633997621205 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.27568554878235 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.142499562232725 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.015741288661957 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 21.882436448877506 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 21.746083792518167 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 21.61019856589181 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 21.471454487906563 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.333174499305517 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.19130493465223 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.055897902219726 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 20.923834800720215 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 20.792765169608884 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 20.657732770556496 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 20.52108918788821 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.383478619835593 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.243695073657566 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.111948459044747 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 19.978447269886097 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 19.846593856811523 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 19.714599541255406 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 19.577057361602783 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.44743091919843 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.314204967938938 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.181497915735786 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.06155447606687 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 18.929330565712668 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 18.79709427697318 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 18.676679360239127 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.54517026605277 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.418318360538805 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.290032545725506 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.15652482236018 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.025716927743726 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 17.894939339350138 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 17.763117611408234 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 17.629258632659912 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.49927999756553 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.365790448971648 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.233267223133762 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.1059008197508 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 16.975271974291122 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 16.842884382731476 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 16.712109035915798 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.579818781108074 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.448966039193643 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.318244536717735 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.184585257580405 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.05317469695946 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 15.921072935446714 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 15.789001664028891 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.65706181526184 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.525147052458776 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.390658756581749 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.260384318340256 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.127235855375018 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 14.99544985154096 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 14.865074806435162 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 14.735061881185949 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.603133418343283 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.471211626288595 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.33969929483202 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.206771827006078 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.074957391490107 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 13.944173384738226 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 13.812973484079889 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 13.682687382949027 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.551143983999888 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.420592735723123 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.28806874703388 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.157130571326823 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.026270151138306 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 12.895596523096065 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 12.765387918434891 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.639780651018459 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.508994469275843 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.377950327736992 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.24561212647636 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.116316646058982 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 11.98570802476671 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 11.855716300666879 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.725988908247515 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.595114091495136 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.464339409555707 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.333970200698987 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.202896799957543 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.071313080580337 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 10.941797092043121 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 10.811423623663748 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.68115090515654 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.550954085438192 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.420135498046875 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.288477525238164 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.156998184860731 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.026546294127053 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 9.8963974829643 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.765333652496338 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.634764716738747 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.504183748575645 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.373612135648727 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.242649457251378 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.112126240363487 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 8.981807197323283 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 8.851228280500932 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.720915658133372 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.590529402690146 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.460384713278875 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.329139933866612 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.198702359721608 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.068309839221014 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 7.938306106937874 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.807982683181763 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.6779713951949535 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.547356756640152 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.417226064455259 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.286899089813232 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.156347842052065 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.025929555501023 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.8957059302297585 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.765278603579548 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.637678711206321 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.50733725229899 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.377543147826037 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.247270308042827 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.116786275813783 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.986541107103422 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.8619652409707355 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.734376167639708 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.604434511464113 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.474036874650399 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.343243335028115 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.212743282318115 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.082018533848828 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.951692969710738 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.821053553212639 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.69092330118505 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.560628869316795 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.430021435381418 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.299728157991421 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.169373512268066 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.038998452869393 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.9086598788990696 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.7783049756323384 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.6479459917822554 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.517572575221861 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.3871985961650983 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.2566194874899725 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.1262663386084815 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.995900319794477 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.865670555093315 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.7354757479449225 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.605320692062378 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.4748952494141805 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.34459753874894 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.2140972757600044 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.084217341049858 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.953873956525648 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8235722152135707 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.693449309802948 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.5632481169193349 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.4328827794897492 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3025818247544136 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.172255523541835 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0419874389966328 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9116786032760699 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.781438512900441 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6514147917429606 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5211179353752914 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.390822473516319 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.26052995402403556 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.13025505339080964 seconds remaining)
    1989 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  4.531 seconds)

**Estimated memory usage:**  1920 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
