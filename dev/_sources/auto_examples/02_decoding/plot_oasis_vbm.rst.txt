
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f35e6841d00>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 169.56806182861328 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 30.561034202575684 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 28.57581067085266 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 27.7786815961202 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 27.25918698310852 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 26.987643241882324 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 26.714046955108646 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 26.491665329251973 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.254457473754883 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.033944023980034 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 25.823046922683716 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 25.62310390038924 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.43196638425191 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.290371289620033 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.179203101566863 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.004491408665977 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 24.828784227371216 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 24.662946055917182 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.49669681655036 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.39879453809638 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.232730627059937 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.06627843493507 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 23.91551850058816 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 23.767253139744636 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 23.727976322174072 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 23.607324361801147 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 23.499065967706535 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 23.35462713241577 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 23.21216436794826 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.09122767941705 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 22.938663164774578 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 22.78451238139983 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 22.627903997898102 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 22.479572433413882 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 22.326095314586865 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.176798003060476 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.02399116092258 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 21.88409595231752 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 21.738544351176213 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 21.595666384085632 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 21.452855110168457 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.313820094597048 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.174802019482566 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.033038427663403 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 20.892765608700838 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 20.75584618250529 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 20.610545230948407 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 20.468750192763956 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.326216220855713 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.19065890993391 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.052338361740112 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 19.912265188553754 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 19.777402272591225 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 19.638482012838686 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 19.50334335256506 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 19.36471577124162 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.22856330871582 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.091642271008407 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 18.95272378263802 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 18.82657199390864 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 18.690545717875164 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 18.555492960038734 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.41821745903261 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.280800251733687 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.1469669342041 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.00988687001742 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 17.874270699240945 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 17.736950255152003 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 17.60364591374117 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 17.46763044854869 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 17.332131487982615 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.197726279916896 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.061899397108288 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 16.926410632590727 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 16.789300841254157 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 16.652467648188274 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 16.53612224679244 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 16.40206570749159 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.266614608275585 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.132202344604686 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 15.998425841331482 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 15.862590162842363 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 15.72897858154483 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 15.59441016093794 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.460068339393253 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.325031014049756 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.189854422280954 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.054301725036797 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 14.918045650828969 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 14.78196596563532 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 14.659149408340456 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.532243985396164 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.398191659346873 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.263503712992515 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.129291331514398 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.000304184461896 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 13.864790936311085 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 13.730162242024216 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.595993552889142 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.46143326855669 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.326608180999756 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.191181692746605 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.057354010787664 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 12.922592276508368 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 12.791240765498236 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.658076797212873 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.523994454797709 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.389714027119574 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.255291064580282 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.12116617893954 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 11.986892743544146 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 11.853257207183152 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 11.720855593681335 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.58989307099739 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.458075167839988 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.324984032174815 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.191051507818289 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.057866190233801 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 10.92729428258993 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 10.797020210939296 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.663959980010986 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.5295970577839 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.394472974245666 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.260666570043176 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.128994349510439 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 9.995672035217284 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 9.861768892833165 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 9.728381019877636 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.594406753778458 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.460595677989398 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.329666522833017 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.195983489961113 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.062872778285634 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 8.930186694726013 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 8.797098483612288 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.664080125314218 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.531278161441579 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.398029583213972 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.26523200325344 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.132123904262516 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 7.998805250440324 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 7.865572636854564 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.73197078704834 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.599055717041442 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.465620266066657 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.332745568505649 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.199313513220172 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.0661008406658565 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 6.9329949134104965 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.799846541961568 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.667652130126953 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.534652719434523 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.40166593852796 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.268580961850734 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.137474744350879 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.004197766703944 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.870946541810647 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.737527463086851 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.604441512989092 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.471447347844921 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.338214814662933 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.208446467144889 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.081450789063065 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.947722373564551 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.814497249882396 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.680971875335231 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.547746089567621 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.414099871755361 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.280910537356422 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.149140875720414 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.015501078437357 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.8819752492402726 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.7483002307803135 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6150163915115976 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.4815593122065756 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.347782679966518 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.2139831564643164 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.0803921114926958 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.9465198490057096 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8128187683041537 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.6789827081892224 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.5450729810071913 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.411008963218102 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.276889165242513 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1428652017012886 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.0089420756778202 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.8749055785517539 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.7408866933322846 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.6069377635387663 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.473009014886523 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.3391236506010356 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2051719970103958 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0713185966014862 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9374184855525357 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8036600707732525 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6697374918521979 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5357998779841832 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.40232949692585745 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2682355991517655 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1341201288616238 seconds remaining)
    1970 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  6.077 seconds)

**Estimated memory usage:**  1915 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
