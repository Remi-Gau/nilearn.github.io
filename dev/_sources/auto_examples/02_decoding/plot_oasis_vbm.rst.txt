
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (:term:`VBM`)
to study the relationship between aging and gray matter density.

The data come from the `OASIS <https://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard :term:`VBM` pipeline (using SPM8 and
NewSegment) to create :term:`VBM` maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the :term:`ANOVA` step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the :term:`ANOVA` step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

:term:`SVM` weights are very noisy,
partly because heavy smoothing is detrimental for the prediction here.
A standard analysis using mass-univariate :term:`GLM`
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 57-66

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 67-69

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 69-92

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 93-95

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 95-111

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 112-123

Prediction pipeline with :term:`ANOVA` and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

In nilearn we can benefit from the built-in DecoderRegressor object to
do :term:`ANOVA` with SVR instead of manually defining the whole pipeline.
This estimator also uses Cross Validation to select best models and ensemble
them. Furthermore, you can pass ``n_jobs=<some_high_value>`` to the
DecoderRegressor class to take advantage of a multi-core system.
To save time (because these are anat images with many voxels), we include
only the 1-percent voxels most correlated with the age variable to fit. We
also want to set mask hyperparameter to be the mask we just obtained above.

.. GENERATED FROM PYTHON SOURCE LINES 123-149

.. code-block:: default


    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 150-152

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-168

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 168-183

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f6bd225a640>



.. GENERATED FROM PYTHON SOURCE LINES 184-186

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 186-231

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 194.89288330078125 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 37.71028137207031 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 34.24859046936035 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 32.400127569834396 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 31.3448646068573 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 30.600990772247314 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 30.107683102289837 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.65054750442505 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 29.816465377807617 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 29.43222861819797 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 29.12515616416931 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.820771455764774 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.571157296498615 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.319299991314228 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 28.064277955463957 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 28.1023272673289 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.892407298088074 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.676768246818995 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.465809239281548 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 27.323270534214224 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 27.145901441574097 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.93982964470273 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.93495269255205 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.741177776585456 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.54547866185506 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.35341191291809 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.17641410460839 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 25.994015728985822 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.80507210322789 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.74886847364491 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.57522177696228 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.419029781895297 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.266169488430023 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.1081990256454 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.9518879441654 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.79671345438276 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.765758938259548 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.602019374435013 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.44790093522323 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.404367783130745 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 24.2491512298584 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 24.082052498328977 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.966170719691686 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.879389707432235 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.706915378570557 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.548812230428062 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 23.376907887666125 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 23.20907699300888 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 23.046430349349976 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.88074539145645 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.787723064422607 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.615893906238032 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.4457339323484 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 22.27703737762739 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 22.108530821623624 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.939100438898258 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.771784237452916 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.66732548830802 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.59471871112955 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 21.428281460778187 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 21.258422136306763 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 21.09196483893473 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.924620236119914 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.805362656002952 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.650610029697418 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.485334378022415 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 20.31811948256059 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 20.155427459460586 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 20.00529632848852 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.842665212741796 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.73287299701146 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.570699141059123 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.412579854329426 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 19.253276524478444 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 19.090247850160342 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.930336236953735 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.770562485644692 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.654834629653337 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.49520151431744 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.33469948889334 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 18.173519611358643 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 18.014244203214293 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.856550594655477 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.700043098036065 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.577148335320608 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.419565369101132 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 17.25974354633065 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 17.09975640253089 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.941461303017356 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.78211553177137 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.62592376603021 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.500010110519742 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.34333178271418 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 16.183546012447728 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 16.025468334238578 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.868793211485212 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.712320248285929 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.555907691876913 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.428084135055542 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.271415818821298 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 15.114293813705444 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.95852777273348 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.803825630861171 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.648751983364809 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.49342859708346 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.362610101699829 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 14.206410214586079 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 14.052302532106916 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.897777583864 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.742065390315624 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.586913325569848 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.432435155988815 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.299308998244149 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 13.144237606926302 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.989122712821292 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.835175877032071 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.680746127819193 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.526854028049698 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.373915001497432 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.236393283395207 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 12.081740538279215 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.926220911593477 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.772071588234825 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.617143243308957 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.462568236935523 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.308605909347534 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.169871137255715 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.01507930868254 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.861550018191338 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.707775827526122 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.555132334048931 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.401826858520508 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.24869435483759 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.105381556919644 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.95209109961097 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.8018607740049 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.648861267987419 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.496358213633517 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.344902663991071 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.193316668915234 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.052531344549996 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.899055398102348 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.746550734613983 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.593946011750015 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.441905591222975 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.28939097503136 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.136457648995805 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.99297882748299 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.84430200989182 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.691870231756428 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.539161443710327 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.387375940550242 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.235807644693475 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.083958477755778 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.939580081345198 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.787223177571451 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.637345106173784 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.4939905306336225 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.3431452346753465 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.190828674244431 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.040601670742035 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.892440695199907 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.7403116491105814 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.588007741179203 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.435798493827262 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.283764730800282 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.133096884532147 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.9842190414131755 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.834203720092773 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.683602376802433 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.531730132944444 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.380359595282036 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.228379759677621 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.076880020902336 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.929716896736759 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7781714371272495 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.6265733567151153 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.475159557525721 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.3242196688491306 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1726231281983788 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.0210476981268988 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8719081891834404 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.720210151357965 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.5689020313200404 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.4175376477448838 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.266071100492735 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.1145787751802834 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9633493410712257 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.813651069681695 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.662204374081243 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.510867633317646 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3597152857256185 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2083781758944192 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.057077225008159 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9058802176996605 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7554061718476124 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6042343548366002 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4531248789753406 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.30207142685398913 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.15102651490638005 seconds remaining)
    2019 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 18.234 seconds)

**Estimated memory usage:**  1902 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
