
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe26e8d99d0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 218.92309188842773 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 36.299068450927734 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 33.92359471321106 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 33.807881911595665 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 33.459352254867554 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 33.40356159210205 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 32.8676503499349 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 32.98622506005424 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 32.6762580871582 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 32.651645210054184 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 32.41862678527832 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 32.80736075748097 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 32.58992258707682 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 32.20463772920462 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 31.840625320162093 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 31.54569490750631 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 31.229805946350098 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 31.159896570093494 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 30.848012818230522 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 30.516276497589917 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 30.31758141517639 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 30.035223642985027 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 29.74856012517756 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 29.45282702860625 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 29.400842666625977 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 29.24045729637146 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 29.183581022115856 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 28.94638364403336 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 28.68338377135141 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 28.434616376613747 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 28.332197109858196 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 28.255407310301255 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 28.013774514198303 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 27.76877727653041 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 27.53740233533523 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 27.419854709080287 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 27.265107048882378 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 27.04405983718666 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 26.829629019687054 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 26.66035596529643 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 26.483625411987305 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 26.267462148898986 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 26.143160138811382 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 25.945231365603068 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 25.73493998700922 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 25.527917676501804 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 25.368029604787413 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 25.160476867188798 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 24.96022299925486 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 24.867743759739156 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 24.688881397247314 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 24.483358401878206 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 24.297852039337158 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 24.120183733274352 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 23.99683686538979 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 23.85224892876365 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 23.65445525305612 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 23.4636261295854 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 23.27817162151994 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 23.126882229821156 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 22.941078583399456 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 22.783547866539877 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 22.66140246391296 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 22.49044701409718 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 22.299549788236618 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 22.16158643135658 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 21.980691772518735 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 21.792841512765456 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 21.639604484333713 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 21.459856990454853 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 21.274707010814122 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 21.093009649867742 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 20.908040788438583 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 20.745795612465844 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 20.610973487029202 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 20.423802534739178 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 20.273736840800236 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 20.116154026675535 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 19.93536557906713 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 19.756849466999874 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 19.60011613368988 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 19.434549667217116 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 19.272145701617728 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 19.095387998833715 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 18.929155168079195 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 18.75504699875327 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 18.588151948396547 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 18.43645454823286 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 18.269913846796207 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 18.09711206361149 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 17.927127758661907 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 17.750966425780412 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 17.593927362690803 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 17.457188011497582 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 17.295601159968275 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 17.120854402843275 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 16.95899983247121 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 16.79305254552782 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 16.625731974231954 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 16.4716796875 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 16.32419443130493 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 16.163228854094402 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 15.990481432746439 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 15.815866947174072 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 15.642834663391113 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 15.479325703212194 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 15.329404938895747 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 15.16916119718106 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 15.009939458635118 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 14.844128070621315 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 14.67431792345914 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 14.529891125790709 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 14.37754145690373 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 14.203639268875122 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 14.03995170091328 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 13.872039743091749 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 13.702453309092029 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 13.534761300453773 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 13.378406480207282 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 13.208415822822507 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 13.036909580230713 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 12.886572449660498 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 12.744460039451475 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 12.581726171136872 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 12.418890414699431 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 12.252844762802123 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 12.090759932048737 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 11.924213843082818 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 11.761944115161896 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 11.591206325117007 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 11.428843149772057 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 11.26680569248345 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 11.100735209204933 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 10.937734863811867 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 10.770939503143083 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 10.60243022000348 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 10.436646405388327 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 10.27424993480209 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 10.106589009796364 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.938698804635795 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 9.77063022341047 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 9.61500803291375 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 9.448469820156904 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 9.286129704722157 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 9.118439025349087 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.95136598060871 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.784590309613371 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 8.623131088659067 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 8.459809883220776 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 8.298816957729775 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 8.138290961583454 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.971962802457494 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.809208217420076 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.644047101338705 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 7.481735916880818 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 7.3174756880729435 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 7.160645325978597 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.995710754090813 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.835432870478569 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.67159744178724 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 6.508320510387421 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 6.345590501098159 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 6.188991470101438 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 6.024243120766856 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.858714295596611 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.69418714985703 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.528375249311148 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 5.363364762174869 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 5.199133963811965 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 5.039064236646573 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.874488171409158 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.710298336040206 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.546331777129063 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.3821149106659645 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 4.218291896513139 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 4.056699616568429 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.8935220783407036 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.73011675123441 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.568567747480414 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.407716037174843 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 3.2444350189632836 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 3.081032193168092 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.919356306830605 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.7577075072324995 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.5952841509943423 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.4342752211802714 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.271403753629295 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.108737049255779 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.9466470150237387 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.7839148637478943 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.6213308886477822 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.4587957384698678 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.2965949773788452 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.1343738847445946 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.9719378456626971 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.8100495521838849 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.6477695776491749 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.48574925800265395 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.32376739473053906 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.16185187095373718 seconds remaining)
    1954 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 16.823 seconds)

**Estimated memory usage:**  1906 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
