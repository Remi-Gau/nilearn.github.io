
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f26330f7be0>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 273.54955673217773 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 49.86163878440857 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 46.102898597717285 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 46.722501913706466 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 45.724913358688354 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 44.89846658706665 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 44.37174733479818 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 43.7120612689427 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 43.89140510559082 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 43.40830572446187 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 43.042431116104126 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 42.709113966334954 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 42.35956637064616 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 42.501533636680016 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 42.22959862436567 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 41.92096972465515 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 41.692484617233276 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 41.62013529328739 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 41.40676731533474 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 41.083717697545104 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 40.86667513847351 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 40.55888609659104 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 40.41070068966259 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 40.14566526205643 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 39.8617680867513 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 39.57851266860962 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 39.44214672308702 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 39.21495954195658 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 38.92207997185844 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 38.707526330290165 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 38.43034474054973 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 38.2642382729438 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 37.96946382522583 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 37.685287396113075 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 37.406697539722224 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 37.11301844460624 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 36.95570060941908 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 36.71799443863534 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 36.44736626273708 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 36.16133674597129 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 35.889777183532715 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 35.766832648254024 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 35.50115457035246 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 35.23618045518565 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 34.974185553464025 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 34.817284690009224 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 34.56894968903583 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 34.29970195952882 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 34.04328763484955 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 33.790006262915476 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 33.61520504951477 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 33.3993117201562 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 33.19681451870845 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 33.00872035746305 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 32.77868541081747 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 32.60370508107272 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 32.372293608529226 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 32.16577264718842 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 31.955105049856776 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 31.779386298131133 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 31.5465681552887 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 31.304577667205063 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 31.0695697569078 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 30.82811069110083 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 30.642286866903305 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 30.39898885213412 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 30.17648380452936 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 30.031419643715246 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 29.853962365318747 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 29.610702770343725 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 29.393160104751587 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 29.187221681567983 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 28.992834303114147 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 28.80324629561542 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 28.576398959030975 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 28.347034851710003 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 28.12007082136054 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 27.92630120376488 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 27.702972754454002 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 27.47864841509469 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 27.25131046772003 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 27.017596356662704 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 26.809853803820726 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 26.582044386001954 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 26.341415518806095 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 26.108500592848834 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 25.8956745003545 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 25.666564113792333 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 25.426267407157205 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 25.18945265887828 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 24.946730587217544 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 24.74023739322201 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 24.505391960558686 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 24.26831767892325 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 24.039206540330927 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 23.802721287074846 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 23.61688951651255 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 23.387741364154618 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 23.15712128366743 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 22.92573863328105 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 22.71585702896118 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 22.488796120823018 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 22.25471748557745 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 22.023874588383055 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 21.789755454430214 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 21.583085979734147 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 21.356245193841325 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 21.126823418608335 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 20.892703153468943 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 20.673139130303618 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 20.447763269597836 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 20.206805532043045 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 19.97095375401633 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 19.73817706530073 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 19.5168170008743 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 19.27769673388937 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 19.03809221037503 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 18.807695557928493 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 18.57078484761513 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 18.35704821698806 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 18.127256711324055 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 17.891119531363497 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 17.662509605532787 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 17.43055188558935 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 17.21696242209404 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 16.979411315917968 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 16.74103405362084 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 16.50384431185685 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 16.26903560757637 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 16.049991160400154 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 15.821293482413658 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 15.594336524264502 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 15.365849032546535 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 15.145188127245223 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 14.914382009363885 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 14.682948306754783 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 14.450760560877182 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 14.219418985130142 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 13.997746968614882 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 13.76537194869501 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 13.531348126275198 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 13.30456107220751 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 13.077044040384427 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 12.857500841567566 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 12.630804962582058 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 12.404017579966578 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 12.180594695757513 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 11.960822053507073 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 11.732197568223285 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 11.503090981669073 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 11.273435990015665 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 11.044679738038424 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 10.823241610276071 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 10.595767759809307 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 10.368404719736668 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 10.14039622583697 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 9.91178528467814 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 9.690881730644566 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 9.464263825476923 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 9.23947630138517 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 9.013361632823944 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 8.786797818189823 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 8.569520305704186 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 8.343680760611786 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 8.119127651540245 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 7.892978371995868 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 7.671664861311395 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 7.444184941445996 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 7.218931606837681 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 6.990420610947016 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 6.761820737053367 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 6.540406908905297 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 6.313165226648021 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 6.085555418378356 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 5.858230100280937 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 5.631332942417689 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 5.408254428343339 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 5.182665032855534 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 4.956489466549305 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 4.731398800897865 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 4.506992763943142 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 4.281043172541244 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 4.054278122199761 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 3.827831174506516 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 3.602404905402142 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 3.37804482434247 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 3.1530287240141184 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 2.9267479888895616 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 2.700969655463036 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 2.474968603679112 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 2.250787985952277 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 2.025166949676594 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.8001380264759064 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.574423983924747 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 1.3489626904123837 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 1.1246699003072884 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.8994940251720194 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.6744776716087071 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.44966304422629005 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.22488736147856592 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  39.305 seconds)

**Estimated memory usage:**  1922 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
