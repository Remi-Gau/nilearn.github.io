
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fe9fd523940>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 149.08075332641602 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 26.5762460231781 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 24.556546211242676 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 23.978479146957397 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 23.604360342025757 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 23.37968873977661 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 23.508900324503582 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 23.177811929157805 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 22.843585968017578 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 22.605432351430256 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 22.381723165512085 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 22.211068348451096 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 22.070936759312946 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 21.93811057164119 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 21.804334606443135 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 21.728646755218506 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 21.546454906463623 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 21.394742068122415 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 21.344172875086464 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 21.200058209268672 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 21.05218005180359 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 20.88138889131092 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 20.74483539841392 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 20.615743191345878 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 20.542679945627846 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 20.395304918289185 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 20.23970158283527 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 20.099143902460735 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 19.950388397489277 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 19.814877625169423 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 19.678401629130047 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 19.543597044483306 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 19.406959533691406 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 19.316148288322218 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 19.183830485624426 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 19.051571130752563 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 18.92721883455912 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 18.798499088029605 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 18.668427153637538 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 18.540432349229473 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 18.42108154296875 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 18.288652757319007 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 18.187352191834222 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 18.058486128962315 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 17.933336279608987 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 17.80775668885973 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 17.681804822838824 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 17.561623274011815 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 17.448177019755043 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 17.324319343177642 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 17.197948694229126 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 17.105319069881066 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 16.98309162946848 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 16.860284058552867 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 16.74068010294879 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 16.624088807539504 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 16.501482009887695 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 16.380661470848217 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 16.261252633456525 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 16.142630738727117 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 16.047047297159832 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 15.929261711777235 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 15.822211503982542 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 15.702778320463876 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 15.583278954029083 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 15.463383931380053 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 15.343517303466797 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 15.223591562527329 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 15.120913056766286 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 15.000519479530444 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 14.879857778549194 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 14.767176893395437 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 14.647675832112629 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 14.52976496578896 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 14.41064614863009 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 14.295467535654705 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 14.182919138356258 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 14.077653101512364 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 13.957745533723097 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 13.8399851744688 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 13.723127245903015 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 13.60762315031923 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 13.490686916723483 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 13.374639393335364 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 13.257372538248697 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 13.139933263554294 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 13.034950616747834 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 12.919120443278347 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 12.802451047030361 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 12.685503300656093 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 12.568540043301054 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 12.45091593658531 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 12.334437256274017 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 12.217568966650195 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 12.100915102248496 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 11.99381827053271 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 11.876267770926157 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 11.760310585965815 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 11.646884139703245 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 11.5317131244775 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 11.41709041595459 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 11.300954705417746 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 11.187958558400473 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 11.076313222496255 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 10.9710174707266 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 10.8560608455113 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 10.7404312142786 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 10.62460702156352 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 10.508578256324485 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 10.39259922176326 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 10.277893131429499 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 10.16376418251175 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 10.048319067273821 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 9.940529911918977 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 9.823478656902648 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 9.708178675693015 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 9.591123597375278 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 9.475928779341217 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 9.361685821565532 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 9.246642958216308 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 9.131985823313395 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 9.01698000766029 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 8.906144271131422 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 8.79202707802377 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 8.678912847272812 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 8.56519947052002 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 8.450465467241076 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 8.335242905954676 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 8.22103688120842 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 8.105608265529307 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 7.990076706959651 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 7.879561562574547 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 7.764267972021392 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 7.648627754440882 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 7.533247040278876 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 7.419076592833907 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 7.304838404935949 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 7.190246087791276 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 7.075671133787735 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 6.960904287777359 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 6.849895579474312 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 6.735002935355436 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 6.620864105896211 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 6.505685606202879 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 6.390108982721965 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 6.276003220985675 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 6.161958491965516 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 6.047185612373612 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 5.935784868291907 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 5.821853898515637 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 5.70927357673645 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 5.594895182855871 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 5.480212512769197 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 5.365539706610387 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 5.252196169518805 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 5.137889316005092 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 5.023214694781181 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 4.911040500470787 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 4.796265155454225 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 4.681815561258568 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 4.567495822906494 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 4.4526862105967835 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 4.3384912396654665 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 4.224230192921644 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.109774647689447 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 3.9951914223757656 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 3.8827056166637375 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 3.7684008875292934 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 3.654573667617071 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 3.540604914433857 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 3.4270607303170597 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.3131621915694565 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.198939262434494 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.084899057542658 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 2.9705808930013373 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 2.857438155582973 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 2.743510365486145 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 2.629360046763878 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 2.5150317690345676 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.4005378771094636 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.28625045882331 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.1716703064533887 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.057212790290078 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 1.9427141491832631 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 1.829101914944856 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 1.7148257268441691 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.6006092973934707 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.4864574830162334 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.3721051977035845 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.2577867356557695 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.1435892080005845 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.029258608193922 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 0.91513987382253 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.8006773044408294 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.6862767381766408 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.5718727417481251 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.4574638580789371 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.3430811898962495 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.22870934370792276 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.11434114877902084 seconds remaining)
    1961 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 58.451 seconds)

**Estimated memory usage:**  1884 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
