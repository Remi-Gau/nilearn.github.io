
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7f068faad040>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 178.76386642456055 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 29.94462490081787 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 29.3619704246521 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 29.873099168141685 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 28.78335738182068 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 28.028386116027832 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 27.496011336644493 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 27.07264144080026 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 26.856639862060547 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 26.561445501115585 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 26.56228995323181 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 26.25227171724493 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 25.99477505683899 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 25.76716923713684 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 25.545069081442698 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 25.347015062967937 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 25.154467821121216 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 25.11531324947582 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 24.938055568271214 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 24.753709253511932 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 24.56875991821289 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 24.38845061120533 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 24.763403220610186 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 24.840164702871572 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 24.778380076090492 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 24.589863538742065 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 24.401830178040726 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 24.217424207263523 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 24.02755856513977 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 23.848508514206983 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 23.676557223002117 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 23.499210703757498 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 23.39967691898346 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 23.234228574868403 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 23.07828286114861 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 22.909644331250874 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 22.74690890312195 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 22.579089138958903 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 22.415160317169995 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 22.312873797538956 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 22.147653579711914 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 21.99485189158742 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 21.83996243703933 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 21.695849673692567 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 21.533139532262627 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 21.375871870252823 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 21.22452028937962 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 21.111948114760377 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 20.95692988236745 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 20.80468738808924 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 20.665109395980835 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 20.529914145376168 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 20.386827267133274 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 20.256375276817465 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 20.151467755988794 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 20.013159535147928 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 19.87159027372088 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 19.724258569248935 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 19.574608490384858 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 19.423025098897643 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 19.26986583073934 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 19.1226366582464 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 18.997815993524366 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 18.84721739708431 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 18.698005259037018 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 18.545751626674946 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 18.3976249405832 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 18.3945099168749 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 18.286924292059506 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 18.164911159570668 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 18.01791082109724 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 17.87643358741008 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 17.73136266072591 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 17.583705650617 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 17.43369625065778 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 17.28391448656718 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 17.15461778640747 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 17.00294870834846 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 16.854321400324505 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 16.708251784119426 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 16.55947744846344 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 16.413784044760245 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 16.271032542717165 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 16.125491811568477 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 15.99911237898327 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 15.851194409763112 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 15.704028634137885 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 15.555831665280223 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 15.40836728702892 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 15.261179096243353 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 15.115171061621773 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 14.983007910487416 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 14.84016139610954 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 14.69479512911971 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 14.551561974464578 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 14.407129074397842 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 14.262485961119333 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 14.118545652664814 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 13.97614190529804 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 13.845006046873149 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 13.70111346244812 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 13.558514774435817 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 13.415816723131666 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 13.272877896873696 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 13.130171629098745 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 12.98923210870652 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 12.846386536112371 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 12.715539606932168 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 12.574428222797534 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 12.4331525793863 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 12.292611512270842 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 12.150837165815336 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 12.010109373501368 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 11.986048076005108 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 11.849607998864693 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 11.710755368937615 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 11.568230102802145 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 11.425795565303575 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 11.28368673890324 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 11.142126385905161 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 10.999631881713867 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 10.865925678536913 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 10.7237175019061 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 10.583369189161594 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 10.44232564587747 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 10.300429916381836 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 10.15977134023394 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.018790430910006 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 9.877701804041862 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 9.742910928504411 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 9.602291382276094 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 9.461522324394634 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 9.321656118739735 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.181422147535741 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.041560479064486 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 8.901653466401276 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 8.765692205990062 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 8.628177291285382 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 8.488331076027691 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 8.348302436389512 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.20891101019723 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.069642487992631 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 7.93107704713311 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 7.791882511619088 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 7.658158699671428 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 7.519387820671344 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 7.380980514500239 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.24195054274838 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.103630143242913 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 6.965671316889309 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 6.8316450119018555 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 6.692997619805746 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 6.558471604397422 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 6.4201655964446225 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.2819008115050075 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.143933657676944 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.00624838242164 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 5.868175802716784 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 5.730255875406385 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 5.617963681430936 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.479797959327698 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.341095499370409 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.202589114507039 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.064639012506403 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 4.92634013222485 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 4.788134936130408 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 4.651313600769962 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.514172706775323 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.376459030877976 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.238844276179929 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.10191596255583 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 3.9651141696506076 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 3.8277166555094166 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 3.6898875305418337 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.554208547219463 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.4166788714272633 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.279168670827692 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.1416676812252753 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.0043135626932207 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 2.8669900840887146 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.7299258444044323 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.59289822262295 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.457324452452607 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.3203866729319422 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.1833673145460044 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.046382137247034 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 1.9096465469688497 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.772866399530421 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.636137470285943 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.5003521215348017 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.364016708574797 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.2273660155491055 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.0907264749209085 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 0.9542095562336975 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8177204869457128 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.6812728918515719 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5449238796623386 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.40881965124062475 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.27248943694914235 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.1362144659512007 seconds remaining)
    1960 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 6.667 seconds)

**Estimated memory usage:**  1937 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
