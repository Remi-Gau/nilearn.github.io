
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/02_decoding/plot_oasis_vbm.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_02_decoding_plot_oasis_vbm.py:


Voxel-Based Morphometry on Oasis dataset
========================================

This example uses Voxel-Based Morphometry (VBM) to study the relationship
between aging and gray matter density.

The data come from the `OASIS <http://www.oasis-brains.org/>`_ project.
If you use it, you need to agree with the data usage agreement available
on the website.

It has been run through a standard VBM pipeline (using SPM8 and
NewSegment) to create VBM maps, which we study here.

Predictive modeling analysis: VBM bio-markers of aging?
-------------------------------------------------------

We run a standard SVM-ANOVA nilearn pipeline to predict age from the VBM
data. We use only 100 subjects from the OASIS dataset to limit the memory
usage.

Note that for an actual predictive modeling study of aging, the study
should be ran on the full set of subjects. Also, all parameters should be set
by cross-validation. This includes the smoothing applied to the data and the
number of features selected by the ANOVA step. Indeed, even these
data-preparation parameter impact significantly the prediction score.


Also, parameters such as the smoothing should be applied to the data and the
number of features selected by the ANOVA step should be set by nested
cross-validation, as they impact significantly the prediction score.

Brain mapping with mass univariate
----------------------------------

SVM weights are very noisy, partly because heavy smoothing is detrimental
for the prediction here. A standard analysis using mass-univariate GLM
(here permuted to have exact correction for multiple comparisons) gives a
much clearer view of the important regions.

____

.. include:: ../../../examples/masker_note.rst

..
    Original authors:

    - Elvis Dhomatob, Apr. 2014
    - Virgile Fritsch, Apr 2014
    - Gael Varoquaux, Apr 2014
    - Andres Hoyos-Idrobo, Apr 2017

.. GENERATED FROM PYTHON SOURCE LINES 54-64

.. code-block:: default


    import matplotlib.pyplot as plt
    import numpy as np

    from nilearn import datasets
    from nilearn.image import get_data
    from nilearn.maskers import NiftiMasker

    n_subjects = 100  # more subjects requires more memory








.. GENERATED FROM PYTHON SOURCE LINES 65-67

Load Oasis dataset
------------------

.. GENERATED FROM PYTHON SOURCE LINES 67-90

.. code-block:: default

    oasis_dataset = datasets.fetch_oasis_vbm(
        n_subjects=n_subjects, legacy_format=False
    )
    gray_matter_map_filenames = oasis_dataset.gray_matter_maps
    age = oasis_dataset.ext_vars["age"].values

    # Split data into training set and test set
    from sklearn.model_selection import train_test_split

    gm_imgs_train, gm_imgs_test, age_train, age_test = train_test_split(
        gray_matter_map_filenames, age, train_size=0.6, random_state=0
    )

    # print basic information on the dataset
    print(
        "First gray-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.gray_matter_maps[0]}"
    )
    print(
        "First white-matter anatomy image (3D) is located at: "
        f"{oasis_dataset.white_matter_maps[0]}"
    )





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    First gray-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    First white-matter anatomy image (3D) is located at: /home/runner/work/nilearn/nilearn/nilearn_data/oasis1/OAS1_0001_MR1/mwrc2OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz




.. GENERATED FROM PYTHON SOURCE LINES 91-93

Preprocess data
---------------

.. GENERATED FROM PYTHON SOURCE LINES 93-109

.. code-block:: default

    nifti_masker = NiftiMasker(
        standardize=False, smoothing_fwhm=2, memory="nilearn_cache"
    )  # cache options
    gm_maps_masked = nifti_masker.fit_transform(gm_imgs_train)

    # The features with too low between-subject variance are removed using
    # :class:`sklearn.feature_selection.VarianceThreshold`.
    from sklearn.feature_selection import VarianceThreshold

    variance_threshold = VarianceThreshold(threshold=0.01)
    variance_threshold.fit_transform(gm_maps_masked)

    # Then we convert the data back to the mask image in order to use it for
    # decoding process
    mask = nifti_masker.inverse_transform(variance_threshold.get_support())








.. GENERATED FROM PYTHON SOURCE LINES 110-112

Prediction pipeline with ANOVA and SVR using
:class:`nilearn.decoding.DecoderRegressor` Object

.. GENERATED FROM PYTHON SOURCE LINES 112-147

.. code-block:: default


    # In nilearn we can benefit from the built-in DecoderRegressor object to
    # do ANOVA with SVR instead of manually defining the whole pipeline.
    # This estimator also uses Cross Validation to select best models and ensemble
    # them. Furthermore, you can pass n_jobs=<some_high_value> to the
    # DecoderRegressor class to take advantage of a multi-core system.
    # To save time (because these are anat images with many voxels), we include
    # only the 1-percent voxels most correlated with the age variable to fit. We
    # also want to set mask hyperparameter to be the mask we just obtained above.

    from nilearn.decoding import DecoderRegressor

    decoder = DecoderRegressor(
        estimator="svr",
        mask=mask,
        scoring="neg_mean_absolute_error",
        screening_percentile=1,
        n_jobs=1,
        standardize="zscore_sample",
    )
    # Fit and predict with the decoder
    decoder.fit(gm_imgs_train, age_train)

    # Sort test data for better visualization (trend, etc.)
    perm = np.argsort(age_test)[::-1]
    age_test = age_test[perm]
    gm_imgs_test = np.array(gm_imgs_test)[perm]
    age_pred = decoder.predict(gm_imgs_test)

    prediction_score = -np.mean(decoder.cv_scores_["beta"])

    print("=== DECODER ===")
    print(f"explained variance for the cross-validation: {prediction_score:f}")
    print()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    === DECODER ===
    explained variance for the cross-validation: 10.670599





.. GENERATED FROM PYTHON SOURCE LINES 148-150

Visualization
-------------

.. GENERATED FROM PYTHON SOURCE LINES 150-163

.. code-block:: default

    weight_img = decoder.coef_img_["beta"]

    # Create the figure
    from nilearn.plotting import plot_stat_map, show

    bg_filename = gray_matter_map_filenames[0]
    z_slice = 0
    display = plot_stat_map(
        weight_img, bg_img=bg_filename, display_mode="z", cut_coords=[z_slice]
    )
    display.title("SVM weights")
    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-166

Visualize the quality of predictions
------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 166-181

.. code-block:: default

    plt.figure(figsize=(6, 4.5))
    plt.suptitle(f"Decoder: Mean Absolute Error {prediction_score:.2f} years")
    linewidth = 3
    plt.plot(age_test, label="True age", linewidth=linewidth)
    plt.plot(age_pred, "--", c="g", label="Predicted age", linewidth=linewidth)
    plt.ylabel("age")
    plt.xlabel("subject")
    plt.legend(loc="best")
    plt.figure(figsize=(6, 4.5))
    plt.plot(
        age_test - age_pred, label="True age - predicted age", linewidth=linewidth
    )
    plt.xlabel("subject")
    plt.legend(loc="best")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :alt: Decoder: Mean Absolute Error 10.67 years
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :alt: plot oasis vbm
         :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    <matplotlib.legend.Legend object at 0x7fbf254e6910>



.. GENERATED FROM PYTHON SOURCE LINES 182-184

Inference with massively univariate model
-----------------------------------------

.. GENERATED FROM PYTHON SOURCE LINES 184-229

.. code-block:: default

    print("Massively univariate model")

    gm_maps_masked = NiftiMasker().fit_transform(gray_matter_map_filenames)
    data = variance_threshold.fit_transform(gm_maps_masked)

    # Statistical inference
    from nilearn.mass_univariate import permuted_ols

    # This can be changed to use more CPUs.
    neg_log_pvals, t_scores_original_data, _ = permuted_ols(
        age,
        data,  # + intercept as a covariate by default
        n_perm=2000,  # 1,000 in the interest of time; 10000 would be better
        verbose=1,  # display progress bar
        n_jobs=1,
    )
    signed_neg_log_pvals = neg_log_pvals * np.sign(t_scores_original_data)
    signed_neg_log_pvals_unmasked = nifti_masker.inverse_transform(
        variance_threshold.inverse_transform(signed_neg_log_pvals)
    )

    # Show results
    threshold = -np.log10(0.1)  # 10% corrected

    fig = plt.figure(figsize=(5.5, 7.5), facecolor="k")

    display = plot_stat_map(
        signed_neg_log_pvals_unmasked,
        bg_img=bg_filename,
        threshold=threshold,
        cmap=plt.cm.RdBu_r,
        display_mode="z",
        cut_coords=[z_slice],
        figure=fig,
    )
    title = (
        "Negative $\\log_{10}$ p-values" "\n(Non-parametric + max-type correction)"
    )
    display.title(title)

    n_detections = (get_data(signed_neg_log_pvals_unmasked) > threshold).sum()
    print(f"\n{int(n_detections)} detections")

    show()




.. image-sg:: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :alt: plot oasis vbm
   :srcset: /auto_examples/02_decoding/images/sphx_glr_plot_oasis_vbm_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Massively univariate model
    Job #1, processed 0/2000 permutations (0.00%, 186.78665161132812 seconds remaining)    Job #1, processed 10/2000 permutations (0.50%, 32.89724063873291 seconds remaining)    Job #1, processed 20/2000 permutations (1.00%, 30.93414831161499 seconds remaining)    Job #1, processed 30/2000 permutations (1.50%, 30.133382717768352 seconds remaining)    Job #1, processed 40/2000 permutations (2.00%, 29.51802372932434 seconds remaining)    Job #1, processed 50/2000 permutations (2.50%, 29.30989980697632 seconds remaining)    Job #1, processed 60/2000 permutations (3.00%, 29.442292213439945 seconds remaining)    Job #1, processed 70/2000 permutations (3.50%, 29.07148429325649 seconds remaining)    Job #1, processed 80/2000 permutations (4.00%, 28.789037704467773 seconds remaining)    Job #1, processed 90/2000 permutations (4.50%, 28.521226776970757 seconds remaining)    Job #1, processed 100/2000 permutations (5.00%, 28.350565910339355 seconds remaining)    Job #1, processed 110/2000 permutations (5.50%, 28.175148140300408 seconds remaining)    Job #1, processed 120/2000 permutations (6.00%, 28.01822829246521 seconds remaining)    Job #1, processed 130/2000 permutations (6.50%, 28.061417689690224 seconds remaining)    Job #1, processed 140/2000 permutations (7.00%, 27.834484066282002 seconds remaining)    Job #1, processed 150/2000 permutations (7.50%, 27.641725063323975 seconds remaining)    Job #1, processed 160/2000 permutations (8.00%, 27.45388436317444 seconds remaining)    Job #1, processed 170/2000 permutations (8.50%, 27.2516701782451 seconds remaining)    Job #1, processed 180/2000 permutations (9.00%, 27.1131489276886 seconds remaining)    Job #1, processed 190/2000 permutations (9.50%, 26.93347622218885 seconds remaining)    Job #1, processed 200/2000 permutations (10.00%, 26.930726051330566 seconds remaining)    Job #1, processed 210/2000 permutations (10.50%, 26.780480100995018 seconds remaining)    Job #1, processed 220/2000 permutations (11.00%, 26.633357654918328 seconds remaining)    Job #1, processed 230/2000 permutations (11.50%, 26.50098955112955 seconds remaining)    Job #1, processed 240/2000 permutations (12.00%, 26.3527889251709 seconds remaining)    Job #1, processed 250/2000 permutations (12.50%, 26.204780340194702 seconds remaining)    Job #1, processed 260/2000 permutations (13.00%, 26.0598544891064 seconds remaining)    Job #1, processed 270/2000 permutations (13.50%, 26.007634683891578 seconds remaining)    Job #1, processed 280/2000 permutations (14.00%, 25.853545018604827 seconds remaining)    Job #1, processed 290/2000 permutations (14.50%, 25.69158018868545 seconds remaining)    Job #1, processed 300/2000 permutations (15.00%, 25.515780131022137 seconds remaining)    Job #1, processed 310/2000 permutations (15.50%, 25.345408447327152 seconds remaining)    Job #1, processed 320/2000 permutations (16.00%, 25.177431643009186 seconds remaining)    Job #1, processed 330/2000 permutations (16.50%, 25.073912707242098 seconds remaining)    Job #1, processed 340/2000 permutations (17.00%, 24.902222857755774 seconds remaining)    Job #1, processed 350/2000 permutations (17.50%, 24.717539651053293 seconds remaining)    Job #1, processed 360/2000 permutations (18.00%, 24.546104537116154 seconds remaining)    Job #1, processed 370/2000 permutations (18.50%, 24.3665405286325 seconds remaining)    Job #1, processed 380/2000 permutations (19.00%, 24.19389551564267 seconds remaining)    Job #1, processed 390/2000 permutations (19.50%, 24.037395568994377 seconds remaining)    Job #1, processed 400/2000 permutations (20.00%, 23.92305278778076 seconds remaining)    Job #1, processed 410/2000 permutations (20.50%, 23.751317006785694 seconds remaining)    Job #1, processed 420/2000 permutations (21.00%, 23.59884564081828 seconds remaining)    Job #1, processed 430/2000 permutations (21.50%, 23.43573855244836 seconds remaining)    Job #1, processed 440/2000 permutations (22.00%, 23.269244930960916 seconds remaining)    Job #1, processed 450/2000 permutations (22.50%, 23.112876865598892 seconds remaining)    Job #1, processed 460/2000 permutations (23.00%, 22.962078125580497 seconds remaining)    Job #1, processed 470/2000 permutations (23.50%, 22.846476712125412 seconds remaining)    Job #1, processed 480/2000 permutations (24.00%, 22.685640732447304 seconds remaining)    Job #1, processed 490/2000 permutations (24.50%, 22.524874210357666 seconds remaining)    Job #1, processed 500/2000 permutations (25.00%, 22.362162351608276 seconds remaining)    Job #1, processed 510/2000 permutations (25.50%, 22.208790914685117 seconds remaining)    Job #1, processed 520/2000 permutations (26.00%, 22.050941155507015 seconds remaining)    Job #1, processed 530/2000 permutations (26.50%, 21.887275767776202 seconds remaining)    Job #1, processed 540/2000 permutations (27.00%, 21.764487867002135 seconds remaining)    Job #1, processed 550/2000 permutations (27.50%, 21.599760792472146 seconds remaining)    Job #1, processed 560/2000 permutations (28.00%, 21.436861242566792 seconds remaining)    Job #1, processed 570/2000 permutations (28.50%, 21.27594655438473 seconds remaining)    Job #1, processed 580/2000 permutations (29.00%, 21.12229350517536 seconds remaining)    Job #1, processed 590/2000 permutations (29.50%, 20.967164209333514 seconds remaining)    Job #1, processed 600/2000 permutations (30.00%, 20.817025740941368 seconds remaining)    Job #1, processed 610/2000 permutations (30.50%, 20.69069047052352 seconds remaining)    Job #1, processed 620/2000 permutations (31.00%, 20.533059527797082 seconds remaining)    Job #1, processed 630/2000 permutations (31.50%, 20.377767839129007 seconds remaining)    Job #1, processed 640/2000 permutations (32.00%, 20.23100107908249 seconds remaining)    Job #1, processed 650/2000 permutations (32.50%, 20.07372588377733 seconds remaining)    Job #1, processed 660/2000 permutations (33.00%, 19.920212803464945 seconds remaining)    Job #1, processed 670/2000 permutations (33.50%, 19.763780366128948 seconds remaining)    Job #1, processed 680/2000 permutations (34.00%, 19.634027186562033 seconds remaining)    Job #1, processed 690/2000 permutations (34.50%, 19.476705119229745 seconds remaining)    Job #1, processed 700/2000 permutations (35.00%, 19.31926713671003 seconds remaining)    Job #1, processed 710/2000 permutations (35.50%, 19.160902775509257 seconds remaining)    Job #1, processed 720/2000 permutations (36.00%, 19.004709031846787 seconds remaining)    Job #1, processed 730/2000 permutations (36.50%, 18.852543876595693 seconds remaining)    Job #1, processed 740/2000 permutations (37.00%, 18.70863909979124 seconds remaining)    Job #1, processed 750/2000 permutations (37.50%, 18.58937462170919 seconds remaining)    Job #1, processed 760/2000 permutations (38.00%, 18.445677744714835 seconds remaining)    Job #1, processed 770/2000 permutations (38.50%, 18.30142901779769 seconds remaining)    Job #1, processed 780/2000 permutations (39.00%, 18.162880659103394 seconds remaining)    Job #1, processed 790/2000 permutations (39.50%, 18.017546581316598 seconds remaining)    Job #1, processed 800/2000 permutations (40.00%, 17.870584845542908 seconds remaining)    Job #1, processed 810/2000 permutations (40.50%, 17.720756033320487 seconds remaining)    Job #1, processed 820/2000 permutations (41.00%, 17.596832723152346 seconds remaining)    Job #1, processed 830/2000 permutations (41.50%, 17.448187109935713 seconds remaining)    Job #1, processed 840/2000 permutations (42.00%, 17.297022002083914 seconds remaining)    Job #1, processed 850/2000 permutations (42.50%, 17.140780336716595 seconds remaining)    Job #1, processed 860/2000 permutations (43.00%, 16.987137927565463 seconds remaining)    Job #1, processed 870/2000 permutations (43.50%, 16.83220235780738 seconds remaining)    Job #1, processed 880/2000 permutations (44.00%, 16.67862575704401 seconds remaining)    Job #1, processed 890/2000 permutations (44.50%, 16.54500584388047 seconds remaining)    Job #1, processed 900/2000 permutations (45.00%, 16.393146647347347 seconds remaining)    Job #1, processed 910/2000 permutations (45.50%, 16.244047138717146 seconds remaining)    Job #1, processed 920/2000 permutations (46.00%, 16.09333077720974 seconds remaining)    Job #1, processed 930/2000 permutations (46.50%, 15.940220002205143 seconds remaining)    Job #1, processed 940/2000 permutations (47.00%, 15.788143847851043 seconds remaining)    Job #1, processed 950/2000 permutations (47.50%, 15.651922778079387 seconds remaining)    Job #1, processed 960/2000 permutations (48.00%, 15.503943502902983 seconds remaining)    Job #1, processed 970/2000 permutations (48.50%, 15.352044407854375 seconds remaining)    Job #1, processed 980/2000 permutations (49.00%, 15.200800866496808 seconds remaining)    Job #1, processed 990/2000 permutations (49.50%, 15.04840910795963 seconds remaining)    Job #1, processed 1000/2000 permutations (50.00%, 14.895443439483643 seconds remaining)    Job #1, processed 1010/2000 permutations (50.50%, 14.741844460515692 seconds remaining)    Job #1, processed 1020/2000 permutations (51.00%, 14.5995901519177 seconds remaining)    Job #1, processed 1030/2000 permutations (51.50%, 14.445821438020873 seconds remaining)    Job #1, processed 1040/2000 permutations (52.00%, 14.295454612145058 seconds remaining)    Job #1, processed 1050/2000 permutations (52.50%, 14.145127705165319 seconds remaining)    Job #1, processed 1060/2000 permutations (53.00%, 13.995393222233036 seconds remaining)    Job #1, processed 1070/2000 permutations (53.50%, 13.848013608255119 seconds remaining)    Job #1, processed 1080/2000 permutations (54.00%, 13.701825442137542 seconds remaining)    Job #1, processed 1090/2000 permutations (54.50%, 13.564657252862913 seconds remaining)    Job #1, processed 1100/2000 permutations (55.00%, 13.416071436621927 seconds remaining)    Job #1, processed 1110/2000 permutations (55.50%, 13.26935716362687 seconds remaining)    Job #1, processed 1120/2000 permutations (56.00%, 13.120437451771327 seconds remaining)    Job #1, processed 1130/2000 permutations (56.50%, 12.972050035949302 seconds remaining)    Job #1, processed 1140/2000 permutations (57.00%, 12.821100364651597 seconds remaining)    Job #1, processed 1150/2000 permutations (57.50%, 12.669950609621793 seconds remaining)    Job #1, processed 1160/2000 permutations (58.00%, 12.53018832206726 seconds remaining)    Job #1, processed 1170/2000 permutations (58.50%, 12.379192126102938 seconds remaining)    Job #1, processed 1180/2000 permutations (59.00%, 12.23043567447339 seconds remaining)    Job #1, processed 1190/2000 permutations (59.50%, 12.079034689093838 seconds remaining)    Job #1, processed 1200/2000 permutations (60.00%, 11.92790110905965 seconds remaining)    Job #1, processed 1210/2000 permutations (60.50%, 11.777099944343252 seconds remaining)    Job #1, processed 1220/2000 permutations (61.00%, 11.626462111707594 seconds remaining)    Job #1, processed 1230/2000 permutations (61.50%, 11.48279308497421 seconds remaining)    Job #1, processed 1240/2000 permutations (62.00%, 11.331995118048884 seconds remaining)    Job #1, processed 1250/2000 permutations (62.50%, 11.180540800094604 seconds remaining)    Job #1, processed 1260/2000 permutations (63.00%, 11.03082013130188 seconds remaining)    Job #1, processed 1270/2000 permutations (63.50%, 10.88501368920634 seconds remaining)    Job #1, processed 1280/2000 permutations (64.00%, 10.734535485506058 seconds remaining)    Job #1, processed 1290/2000 permutations (64.50%, 10.583211566126623 seconds remaining)    Job #1, processed 1300/2000 permutations (65.00%, 10.441516197644747 seconds remaining)    Job #1, processed 1310/2000 permutations (65.50%, 10.291174710251903 seconds remaining)    Job #1, processed 1320/2000 permutations (66.00%, 10.141052932450265 seconds remaining)    Job #1, processed 1330/2000 permutations (66.50%, 9.990771148437844 seconds remaining)    Job #1, processed 1340/2000 permutations (67.00%, 9.839083468736106 seconds remaining)    Job #1, processed 1350/2000 permutations (67.50%, 9.687299445823387 seconds remaining)    Job #1, processed 1360/2000 permutations (68.00%, 9.541064318488626 seconds remaining)    Job #1, processed 1370/2000 permutations (68.50%, 9.390028243517353 seconds remaining)    Job #1, processed 1380/2000 permutations (69.00%, 9.239791524583016 seconds remaining)    Job #1, processed 1390/2000 permutations (69.50%, 9.09037733078003 seconds remaining)    Job #1, processed 1400/2000 permutations (70.00%, 8.939654179981776 seconds remaining)    Job #1, processed 1410/2000 permutations (70.50%, 8.789173251348185 seconds remaining)    Job #1, processed 1420/2000 permutations (71.00%, 8.63814297864135 seconds remaining)    Job #1, processed 1430/2000 permutations (71.50%, 8.493239359422164 seconds remaining)    Job #1, processed 1440/2000 permutations (72.00%, 8.342169218593174 seconds remaining)    Job #1, processed 1450/2000 permutations (72.50%, 8.19404022446994 seconds remaining)    Job #1, processed 1460/2000 permutations (73.00%, 8.047283296715722 seconds remaining)    Job #1, processed 1470/2000 permutations (73.50%, 7.903191600527083 seconds remaining)    Job #1, processed 1480/2000 permutations (74.00%, 7.752120095330316 seconds remaining)    Job #1, processed 1490/2000 permutations (74.50%, 7.601198385225847 seconds remaining)    Job #1, processed 1500/2000 permutations (75.00%, 7.453848520914713 seconds remaining)    Job #1, processed 1510/2000 permutations (75.50%, 7.303219236285481 seconds remaining)    Job #1, processed 1520/2000 permutations (76.00%, 7.15254931700857 seconds remaining)    Job #1, processed 1530/2000 permutations (76.50%, 7.003005032445871 seconds remaining)    Job #1, processed 1540/2000 permutations (77.00%, 6.853693088927826 seconds remaining)    Job #1, processed 1550/2000 permutations (77.50%, 6.704763143293319 seconds remaining)    Job #1, processed 1560/2000 permutations (78.00%, 6.556609239333715 seconds remaining)    Job #1, processed 1570/2000 permutations (78.50%, 6.411864771205149 seconds remaining)    Job #1, processed 1580/2000 permutations (79.00%, 6.262841327280937 seconds remaining)    Job #1, processed 1590/2000 permutations (79.50%, 6.113559955321018 seconds remaining)    Job #1, processed 1600/2000 permutations (80.00%, 5.963755249977112 seconds remaining)    Job #1, processed 1610/2000 permutations (80.50%, 5.813853450443434 seconds remaining)    Job #1, processed 1620/2000 permutations (81.00%, 5.6634838139569315 seconds remaining)    Job #1, processed 1630/2000 permutations (81.50%, 5.51326528063581 seconds remaining)    Job #1, processed 1640/2000 permutations (82.00%, 5.365966226996445 seconds remaining)    Job #1, processed 1650/2000 permutations (82.50%, 5.215958934841734 seconds remaining)    Job #1, processed 1660/2000 permutations (83.00%, 5.065848904919911 seconds remaining)    Job #1, processed 1670/2000 permutations (83.50%, 4.916059281297787 seconds remaining)    Job #1, processed 1680/2000 permutations (84.00%, 4.766009603227888 seconds remaining)    Job #1, processed 1690/2000 permutations (84.50%, 4.616695632595987 seconds remaining)    Job #1, processed 1700/2000 permutations (85.00%, 4.467560964472154 seconds remaining)    Job #1, processed 1710/2000 permutations (85.50%, 4.320581851646914 seconds remaining)    Job #1, processed 1720/2000 permutations (86.00%, 4.170850692793381 seconds remaining)    Job #1, processed 1730/2000 permutations (86.50%, 4.02129347475967 seconds remaining)    Job #1, processed 1740/2000 permutations (87.00%, 3.8717304783305906 seconds remaining)    Job #1, processed 1750/2000 permutations (87.50%, 3.7220683438437323 seconds remaining)    Job #1, processed 1760/2000 permutations (88.00%, 3.5729226740923794 seconds remaining)    Job #1, processed 1770/2000 permutations (88.50%, 3.4237756149917 seconds remaining)    Job #1, processed 1780/2000 permutations (89.00%, 3.2763000311476462 seconds remaining)    Job #1, processed 1790/2000 permutations (89.50%, 3.1270510164719054 seconds remaining)    Job #1, processed 1800/2000 permutations (90.00%, 2.977580706278483 seconds remaining)    Job #1, processed 1810/2000 permutations (90.50%, 2.8281796768883973 seconds remaining)    Job #1, processed 1820/2000 permutations (91.00%, 2.6790557510250217 seconds remaining)    Job #1, processed 1830/2000 permutations (91.50%, 2.529868488103314 seconds remaining)    Job #1, processed 1840/2000 permutations (92.00%, 2.380533487900444 seconds remaining)    Job #1, processed 1850/2000 permutations (92.50%, 2.2337627088701404 seconds remaining)    Job #1, processed 1860/2000 permutations (93.00%, 2.0848104287219305 seconds remaining)    Job #1, processed 1870/2000 permutations (93.50%, 1.9359128028951227 seconds remaining)    Job #1, processed 1880/2000 permutations (94.00%, 1.7867415965871607 seconds remaining)    Job #1, processed 1890/2000 permutations (94.50%, 1.6375852514196325 seconds remaining)    Job #1, processed 1900/2000 permutations (95.00%, 1.4885447652716386 seconds remaining)    Job #1, processed 1910/2000 permutations (95.50%, 1.3394876774693034 seconds remaining)    Job #1, processed 1920/2000 permutations (96.00%, 1.1910619139671326 seconds remaining)    Job #1, processed 1930/2000 permutations (96.50%, 1.0420813436952896 seconds remaining)    Job #1, processed 1940/2000 permutations (97.00%, 0.8930377935625844 seconds remaining)    Job #1, processed 1950/2000 permutations (97.50%, 0.7440733237144275 seconds remaining)    Job #1, processed 1960/2000 permutations (98.00%, 0.5951644790415861 seconds remaining)    Job #1, processed 1970/2000 permutations (98.50%, 0.4463045379232029 seconds remaining)    Job #1, processed 1980/2000 permutations (99.00%, 0.2974743770830559 seconds remaining)    Job #1, processed 1990/2000 permutations (99.50%, 0.14878676165288418 seconds remaining)
    1975 detections





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 11.756 seconds)

**Estimated memory usage:**  1908 MB


.. _sphx_glr_download_auto_examples_02_decoding_plot_oasis_vbm.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/main?urlpath=lab/tree/notebooks/auto_examples/02_decoding/plot_oasis_vbm.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_oasis_vbm.py <plot_oasis_vbm.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_oasis_vbm.ipynb <plot_oasis_vbm.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
