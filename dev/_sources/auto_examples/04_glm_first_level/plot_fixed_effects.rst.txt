
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/04_glm_first_level/plot_fixed_effects.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_04_glm_first_level_plot_fixed_effects.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_glm_first_level_plot_fixed_effects.py:

Example of explicit fixed effects fMRI model fitting
====================================================

This example illustrates how to run a fixed effects model based on
pre-computed statistics. This is helpful when the initial models
have to be fit separately.

For details on the data, please see:

Dehaene-Lambertz G, Dehaene S, Anton JL, Campagne A, Ciuciu P, Dehaene
G, Denghien I, Jobert A, LeBihan D, Sigman M, Pallier C, Poline
JB. Functional segregation of cortical language areas by sentence
repetition. Hum Brain Mapp. 2006: 27:360--371.
http://www.pubmedcentral.nih.gov/articlerender.fcgi?artid=2653076#R11

Please see `Simple example of two-session :term:`fMRI` model fitting
<https://nistats.github.io/auto_examples/02_first_levels/plot_fiac_analysis.html>`_
example for details.  The main difference is that
the fixed-effects model is run explicitly here,
after GLM fitting on two sessions.

.. GENERATED FROM PYTHON SOURCE LINES 25-29

Prepare data and analysis parameters
--------------------------------------

Inspecting 'data', we note that there are two sessions

.. GENERATED FROM PYTHON SOURCE LINES 29-34

.. code-block:: default


    from nilearn.datasets import func
    data = func.fetch_fiac_first_level()
    fmri_img = [data['func1'], data['func2']]





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    Dataset created in /home/circleci/nilearn_data/fiac_nilearn.glm

    Missing functional scan for session 1.
    Data absent, downloading...
    Downloading data from http://nipy.sourceforge.net/data-packages/nipy-data-0.2.tar.gz ...
    Downloaded 2105344 of 81515168 bytes (2.6%,  1.5min remaining)    Downloaded 2629632 of 81515168 bytes (3.2%,  1.7min remaining)    Downloaded 3153920 of 81515168 bytes (3.9%,  1.8min remaining)    Downloaded 3956736 of 81515168 bytes (4.9%,  1.7min remaining)    Downloaded 4472832 of 81515168 bytes (5.5%,  1.8min remaining)    Downloaded 4726784 of 81515168 bytes (5.8%,  2.0min remaining)    Downloaded 5439488 of 81515168 bytes (6.7%,  1.9min remaining)    Downloaded 6062080 of 81515168 bytes (7.4%,  1.9min remaining)    Downloaded 6348800 of 81515168 bytes (7.8%,  2.0min remaining)    Downloaded 6823936 of 81515168 bytes (8.4%,  2.1min remaining)    Downloaded 7413760 of 81515168 bytes (9.1%,  2.1min remaining)    Downloaded 8224768 of 81515168 bytes (10.1%,  2.0min remaining)    Downloaded 8626176 of 81515168 bytes (10.6%,  2.0min remaining)    Downloaded 9199616 of 81515168 bytes (11.3%,  2.0min remaining)    Downloaded 9797632 of 81515168 bytes (12.0%,  2.0min remaining)    Downloaded 10182656 of 81515168 bytes (12.5%,  2.0min remaining)    Downloaded 10862592 of 81515168 bytes (13.3%,  2.0min remaining)    Downloaded 11198464 of 81515168 bytes (13.7%,  2.0min remaining)    Downloaded 11976704 of 81515168 bytes (14.7%,  2.0min remaining)    Downloaded 12591104 of 81515168 bytes (15.4%,  2.0min remaining)    Downloaded 13115392 of 81515168 bytes (16.1%,  2.0min remaining)    Downloaded 13721600 of 81515168 bytes (16.8%,  2.0min remaining)    Downloaded 14385152 of 81515168 bytes (17.6%,  2.0min remaining)    Downloaded 14942208 of 81515168 bytes (18.3%,  2.0min remaining)    Downloaded 15523840 of 81515168 bytes (19.0%,  1.9min remaining)    Downloaded 15769600 of 81515168 bytes (19.3%,  2.0min remaining)    Downloaded 16785408 of 81515168 bytes (20.6%,  1.9min remaining)    Downloaded 17309696 of 81515168 bytes (21.2%,  1.9min remaining)    Downloaded 17833984 of 81515168 bytes (21.9%,  1.9min remaining)    Downloaded 18472960 of 81515168 bytes (22.7%,  1.9min remaining)    Downloaded 19316736 of 81515168 bytes (23.7%,  1.8min remaining)    Downloaded 19611648 of 81515168 bytes (24.1%,  1.9min remaining)    Downloaded 20045824 of 81515168 bytes (24.6%,  1.9min remaining)    Downloaded 20455424 of 81515168 bytes (25.1%,  1.9min remaining)    Downloaded 20979712 of 81515168 bytes (25.7%,  1.8min remaining)    Downloaded 21504000 of 81515168 bytes (26.4%,  1.8min remaining)    Downloaded 22052864 of 81515168 bytes (27.1%,  1.8min remaining)    Downloaded 22732800 of 81515168 bytes (27.9%,  1.8min remaining)    Downloaded 23232512 of 81515168 bytes (28.5%,  1.8min remaining)    Downloaded 23928832 of 81515168 bytes (29.4%,  1.7min remaining)    Downloaded 24182784 of 81515168 bytes (29.7%,  1.8min remaining)    Downloaded 24870912 of 81515168 bytes (30.5%,  1.7min remaining)    Downloaded 25387008 of 81515168 bytes (31.1%,  1.7min remaining)    Downloaded 25812992 of 81515168 bytes (31.7%,  1.7min remaining)    Downloaded 26492928 of 81515168 bytes (32.5%,  1.7min remaining)    Downloaded 26902528 of 81515168 bytes (33.0%,  1.7min remaining)    Downloaded 27435008 of 81515168 bytes (33.7%,  1.7min remaining)    Downloaded 28213248 of 81515168 bytes (34.6%,  1.6min remaining)    Downloaded 28688384 of 81515168 bytes (35.2%,  1.6min remaining)    Downloaded 28934144 of 81515168 bytes (35.5%,  1.6min remaining)    Downloaded 29679616 of 81515168 bytes (36.4%,  1.6min remaining)    Downloaded 29900800 of 81515168 bytes (36.7%,  1.6min remaining)    Downloaded 30793728 of 81515168 bytes (37.8%,  1.5min remaining)    Downloaded 31211520 of 81515168 bytes (38.3%,  1.5min remaining)    Downloaded 31744000 of 81515168 bytes (38.9%,  1.5min remaining)    Downloaded 32169984 of 81515168 bytes (39.5%,  1.5min remaining)    Downloaded 32808960 of 81515168 bytes (40.2%,  1.5min remaining)    Downloaded 33251328 of 81515168 bytes (40.8%,  1.5min remaining)    Downloaded 34086912 of 81515168 bytes (41.8%,  1.5min remaining)    Downloaded 34611200 of 81515168 bytes (42.5%,  1.5min remaining)    Downloaded 35332096 of 81515168 bytes (43.3%,  1.4min remaining)    Downloaded 35971072 of 81515168 bytes (44.1%,  1.4min remaining)    Downloaded 36315136 of 81515168 bytes (44.6%,  1.4min remaining)    Downloaded 36880384 of 81515168 bytes (45.2%,  1.4min remaining)    Downloaded 37322752 of 81515168 bytes (45.8%,  1.4min remaining)    Downloaded 37928960 of 81515168 bytes (46.5%,  1.3min remaining)    Downloaded 38379520 of 81515168 bytes (47.1%,  1.3min remaining)    Downloaded 38985728 of 81515168 bytes (47.8%,  1.3min remaining)    Downloaded 39542784 of 81515168 bytes (48.5%,  1.3min remaining)    Downloaded 40239104 of 81515168 bytes (49.4%,  1.3min remaining)    Downloaded 40656896 of 81515168 bytes (49.9%,  1.3min remaining)    Downloaded 41091072 of 81515168 bytes (50.4%,  1.3min remaining)    Downloaded 41615360 of 81515168 bytes (51.1%,  1.2min remaining)    Downloaded 42188800 of 81515168 bytes (51.8%,  1.2min remaining)    Downloaded 42942464 of 81515168 bytes (52.7%,  1.2min remaining)    Downloaded 43270144 of 81515168 bytes (53.1%,  1.2min remaining)    Downloaded 43819008 of 81515168 bytes (53.8%,  1.2min remaining)    Downloaded 44228608 of 81515168 bytes (54.3%,  1.2min remaining)    Downloaded 44826624 of 81515168 bytes (55.0%,  1.1min remaining)    Downloaded 45318144 of 81515168 bytes (55.6%,  1.1min remaining)    Downloaded 45793280 of 81515168 bytes (56.2%,  1.1min remaining)    Downloaded 46268416 of 81515168 bytes (56.8%,  1.1min remaining)    Downloaded 46669824 of 81515168 bytes (57.3%,  1.1min remaining)    Downloaded 47284224 of 81515168 bytes (58.0%,  1.1min remaining)    Downloaded 47857664 of 81515168 bytes (58.7%,  1.0min remaining)    Downloaded 48291840 of 81515168 bytes (59.2%,  1.0min remaining)    Downloaded 48783360 of 81515168 bytes (59.8%,  1.0min remaining)    Downloaded 49487872 of 81515168 bytes (60.7%,   59.8s remaining)    Downloaded 50126848 of 81515168 bytes (61.5%,   58.5s remaining)    Downloaded 50339840 of 81515168 bytes (61.8%,   58.4s remaining)    Downloaded 51142656 of 81515168 bytes (62.7%,   56.6s remaining)    Downloaded 51396608 of 81515168 bytes (63.1%,   56.5s remaining)    Downloaded 51994624 of 81515168 bytes (63.8%,   55.3s remaining)    Downloaded 52436992 of 81515168 bytes (64.3%,   54.5s remaining)    Downloaded 53051392 of 81515168 bytes (65.1%,   53.3s remaining)    Downloaded 53518336 of 81515168 bytes (65.7%,   52.5s remaining)    Downloaded 54075392 of 81515168 bytes (66.3%,   51.4s remaining)    Downloaded 54624256 of 81515168 bytes (67.0%,   50.4s remaining)    Downloaded 55271424 of 81515168 bytes (67.8%,   49.1s remaining)    Downloaded 55795712 of 81515168 bytes (68.4%,   48.1s remaining)    Downloaded 56246272 of 81515168 bytes (69.0%,   47.3s remaining)    Downloaded 56852480 of 81515168 bytes (69.7%,   46.1s remaining)    Downloaded 57376768 of 81515168 bytes (70.4%,   45.2s remaining)    Downloaded 57892864 of 81515168 bytes (71.0%,   44.2s remaining)    Downloaded 58343424 of 81515168 bytes (71.6%,   43.4s remaining)    Downloaded 58793984 of 81515168 bytes (72.1%,   42.6s remaining)    Downloaded 59432960 of 81515168 bytes (72.9%,   41.4s remaining)    Downloaded 60096512 of 81515168 bytes (73.7%,   40.0s remaining)    Downloaded 60432384 of 81515168 bytes (74.1%,   39.5s remaining)    Downloaded 60956672 of 81515168 bytes (74.8%,   38.6s remaining)    Downloaded 61530112 of 81515168 bytes (75.5%,   37.5s remaining)    Downloaded 62193664 of 81515168 bytes (76.3%,   36.1s remaining)    Downloaded 62578688 of 81515168 bytes (76.8%,   35.5s remaining)    Downloaded 63291392 of 81515168 bytes (77.6%,   34.1s remaining)    Downloaded 63971328 of 81515168 bytes (78.5%,   33.0s remaining)    Downloaded 64495616 of 81515168 bytes (79.1%,   32.0s remaining)    Downloaded 65044480 of 81515168 bytes (79.8%,   31.0s remaining)    Downloaded 65691648 of 81515168 bytes (80.6%,   29.7s remaining)    Downloaded 66199552 of 81515168 bytes (81.2%,   28.8s remaining)    Downloaded 66797568 of 81515168 bytes (81.9%,   27.6s remaining)    Downloaded 67248128 of 81515168 bytes (82.5%,   26.8s remaining)    Downloaded 67756032 of 81515168 bytes (83.1%,   25.9s remaining)    Downloaded 68395008 of 81515168 bytes (83.9%,   24.6s remaining)    Downloaded 68788224 of 81515168 bytes (84.4%,   23.9s remaining)    Downloaded 69386240 of 81515168 bytes (85.1%,   22.8s remaining)    Downloaded 69795840 of 81515168 bytes (85.6%,   22.1s remaining)    Downloaded 70541312 of 81515168 bytes (86.5%,   20.6s remaining)    Downloaded 70942720 of 81515168 bytes (87.0%,   19.9s remaining)    Downloaded 71598080 of 81515168 bytes (87.8%,   18.6s remaining)    Downloaded 72204288 of 81515168 bytes (88.6%,   17.5s remaining)    Downloaded 72556544 of 81515168 bytes (89.0%,   16.8s remaining)    Downloaded 73023488 of 81515168 bytes (89.6%,   16.0s remaining)    Downloaded 73662464 of 81515168 bytes (90.4%,   14.7s remaining)    Downloaded 73965568 of 81515168 bytes (90.7%,   14.2s remaining)    Downloaded 74760192 of 81515168 bytes (91.7%,   12.7s remaining)    Downloaded 75292672 of 81515168 bytes (92.4%,   11.7s remaining)    Downloaded 75784192 of 81515168 bytes (93.0%,   10.8s remaining)    Downloaded 76324864 of 81515168 bytes (93.6%,    9.7s remaining)    Downloaded 76791808 of 81515168 bytes (94.2%,    8.9s remaining)    Downloaded 77504512 of 81515168 bytes (95.1%,    7.5s remaining)    Downloaded 78028800 of 81515168 bytes (95.7%,    6.5s remaining)    Downloaded 78561280 of 81515168 bytes (96.4%,    5.5s remaining)    Downloaded 79175680 of 81515168 bytes (97.1%,    4.4s remaining)    Downloaded 79912960 of 81515168 bytes (98.0%,    3.0s remaining)    Downloaded 80445440 of 81515168 bytes (98.7%,    2.0s remaining)    Downloaded 80805888 of 81515168 bytes (99.1%,    1.3s remaining)    Downloaded 81485824 of 81515168 bytes (100.0%,    0.1s remaining) ...done. (154 seconds, 2 min)
    Extracting data from /home/circleci/nilearn_data/fiac_nilearn.glm/nipy-data-0.2.tar.gz..... done.




.. GENERATED FROM PYTHON SOURCE LINES 35-36

Create a mean image for plotting purpose

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    from nilearn.image import mean_img
    mean_img_ = mean_img(fmri_img[0])








.. GENERATED FROM PYTHON SOURCE LINES 40-42

The design matrices were pre-computed, we simply put them in a list of
DataFrames

.. GENERATED FROM PYTHON SOURCE LINES 42-47

.. code-block:: default

    design_files = [data['design_matrix1'], data['design_matrix2']]
    import pandas as pd
    import numpy as np
    design_matrices = [pd.DataFrame(np.load(df)['X']) for df in design_files]








.. GENERATED FROM PYTHON SOURCE LINES 48-52

GLM estimation
----------------------------------
GLM specification. Note that the mask was provided in the dataset.
So we use it.

.. GENERATED FROM PYTHON SOURCE LINES 52-57

.. code-block:: default


    from nilearn.glm.first_level import FirstLevelModel
    fmri_glm = FirstLevelModel(mask_img=data['mask'], smoothing_fwhm=5,
                               minimize_memory=True)








.. GENERATED FROM PYTHON SOURCE LINES 58-60

Compute fixed effects of the two runs and compute related images
For this, we first define the contrasts as we would do for a single session

.. GENERATED FROM PYTHON SOURCE LINES 60-63

.. code-block:: default

    n_columns = design_matrices[0].shape[1]
    contrast_val = np.hstack(([-1, -1, 1, 1], np.zeros(n_columns - 4)))








.. GENERATED FROM PYTHON SOURCE LINES 64-65

Statistics for the first session

.. GENERATED FROM PYTHON SOURCE LINES 65-77

.. code-block:: default

    from nilearn import plotting
    cut_coords = [-129, -126, 49]
    contrast_id = 'DSt_minus_SSt'

    fmri_glm = fmri_glm.fit(fmri_img[0], design_matrices=design_matrices[0])
    summary_statistics_session1 = fmri_glm.compute_contrast(
        contrast_val, output_type='all')
    plotting.plot_stat_map(
        summary_statistics_session1['z_score'],
        bg_img=mean_img_, threshold=3.0, cut_coords=cut_coords,
        title='{0}, first session'.format(contrast_id))




.. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_001.png
   :alt: plot fixed effects
   :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays._slicers.OrthoSlicer object at 0x7fa757e67f40>



.. GENERATED FROM PYTHON SOURCE LINES 78-79

Statistics for the second session

.. GENERATED FROM PYTHON SOURCE LINES 79-88

.. code-block:: default


    fmri_glm = fmri_glm.fit(fmri_img[1], design_matrices=design_matrices[1])
    summary_statistics_session2 = fmri_glm.compute_contrast(
        contrast_val, output_type='all')
    plotting.plot_stat_map(
        summary_statistics_session2['z_score'],
        bg_img=mean_img_, threshold=3.0, cut_coords=cut_coords,
        title='{0}, second session'.format(contrast_id))




.. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_002.png
   :alt: plot fixed effects
   :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays._slicers.OrthoSlicer object at 0x7fa7567b8760>



.. GENERATED FROM PYTHON SOURCE LINES 89-90

Fixed effects statistics

.. GENERATED FROM PYTHON SOURCE LINES 90-103

.. code-block:: default

    from nilearn.glm.contrasts import compute_fixed_effects

    contrast_imgs = [summary_statistics_session1['effect_size'],
                     summary_statistics_session2['effect_size']]
    variance_imgs = [summary_statistics_session1['effect_variance'],
                     summary_statistics_session2['effect_variance']]

    fixed_fx_contrast, fixed_fx_variance, fixed_fx_stat = compute_fixed_effects(
        contrast_imgs, variance_imgs, data['mask'])
    plotting.plot_stat_map(
        fixed_fx_stat, bg_img=mean_img_, threshold=3.0, cut_coords=cut_coords,
        title='{0}, fixed effects'.format(contrast_id))




.. image-sg:: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_003.png
   :alt: plot fixed effects
   :srcset: /auto_examples/04_glm_first_level/images/sphx_glr_plot_fixed_effects_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays._slicers.OrthoSlicer object at 0x7fa756612640>



.. GENERATED FROM PYTHON SOURCE LINES 104-109

Not unexpectedly, the fixed effects version displays higher peaks than the
input sessions. Computing fixed effects enhances the signal-to-noise ratio of
the resulting brain maps
Note however that, technically, the output maps of the fixed effects map is a
t statistic (not a z statistic)

.. GENERATED FROM PYTHON SOURCE LINES 109-111

.. code-block:: default


    plotting.show()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  43.827 seconds)

**Estimated memory usage:**  568 MB


.. _sphx_glr_download_auto_examples_04_glm_first_level_plot_fixed_effects.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/nilearn/nilearn.github.io/main?filepath=examples/auto_examples/04_glm_first_level/plot_fixed_effects.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_fixed_effects.py <plot_fixed_effects.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_fixed_effects.ipynb <plot_fixed_effects.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
