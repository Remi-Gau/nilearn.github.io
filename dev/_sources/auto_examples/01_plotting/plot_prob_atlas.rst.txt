
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/01_plotting/plot_prob_atlas.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_01_plotting_plot_prob_atlas.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_plotting_plot_prob_atlas.py:


Visualizing 4D probabilistic atlas maps
=======================================

This example shows how to visualize probabilistic atlases made of 4D images.
There are 3 different display types:

1. "contours", which means maps or ROIs are shown as contours delineated by     colored lines.

2. "filled_contours", maps are shown as contours same as above but with     fillings inside the contours.

3. "continuous", maps are shown as just color overlays.

A colorbar can optionally be added.

The :func:`nilearn.plotting.plot_prob_atlas` function displays each map
with each different color which are picked randomly from the colormap
which is already defined.

See :ref:`plotting` for more information to know how to tune the parameters.

.. GENERATED FROM PYTHON SOURCE LINES 26-27

Load 4D probabilistic atlases

.. GENERATED FROM PYTHON SOURCE LINES 27-40

.. code-block:: default

    from nilearn import datasets, plotting

    # Allen RSN networks
    allen = datasets.fetch_atlas_allen_2011()

    # ICBM tissue probability
    icbm = datasets.fetch_icbm152_2009()

    # Smith ICA BrainMap 2009
    smith_bm20 = datasets.fetch_atlas_smith_2009(resting=False, dimension=20)[
        "maps"
    ]





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/work/nilearn/nilearn/nilearn_data/allen_rsn_2011

    Downloading data from https://osf.io/hrcku/download ...
    Downloaded 819200 of 32347736 bytes (2.5%,   42.9s remaining)    Downloaded 1597440 of 32347736 bytes (4.9%,   44.2s remaining)    Downloaded 2375680 of 32347736 bytes (7.3%,   42.6s remaining)    Downloaded 3162112 of 32347736 bytes (9.8%,   42.6s remaining)    Downloaded 3948544 of 32347736 bytes (12.2%,   40.6s remaining)    Downloaded 4726784 of 32347736 bytes (14.6%,   39.5s remaining)    Downloaded 5513216 of 32347736 bytes (17.0%,   38.6s remaining)    Downloaded 6307840 of 32347736 bytes (19.5%,   37.5s remaining)    Downloaded 7086080 of 32347736 bytes (21.9%,   36.7s remaining)    Downloaded 7872512 of 32347736 bytes (24.3%,   35.6s remaining)    Downloaded 8650752 of 32347736 bytes (26.7%,   34.4s remaining)    Downloaded 9420800 of 32347736 bytes (29.1%,   33.6s remaining)    Downloaded 10199040 of 32347736 bytes (31.5%,   32.5s remaining)    Downloaded 10977280 of 32347736 bytes (33.9%,   31.3s remaining)    Downloaded 12017664 of 32347736 bytes (37.2%,   29.6s remaining)    Downloaded 12787712 of 32347736 bytes (39.5%,   28.5s remaining)    Downloaded 13565952 of 32347736 bytes (41.9%,   27.4s remaining)    Downloaded 14336000 of 32347736 bytes (44.3%,   26.3s remaining)    Downloaded 15114240 of 32347736 bytes (46.7%,   25.3s remaining)    Downloaded 15892480 of 32347736 bytes (49.1%,   24.1s remaining)    Downloaded 16662528 of 32347736 bytes (51.5%,   23.1s remaining)    Downloaded 17440768 of 32347736 bytes (53.9%,   22.0s remaining)    Downloaded 18219008 of 32347736 bytes (56.3%,   20.8s remaining)    Downloaded 18989056 of 32347736 bytes (58.7%,   19.7s remaining)    Downloaded 19767296 of 32347736 bytes (61.1%,   18.6s remaining)    Downloaded 20537344 of 32347736 bytes (63.5%,   17.5s remaining)    Downloaded 21315584 of 32347736 bytes (65.9%,   16.4s remaining)    Downloaded 22093824 of 32347736 bytes (68.3%,   15.3s remaining)    Downloaded 22872064 of 32347736 bytes (70.7%,   14.1s remaining)    Downloaded 23642112 of 32347736 bytes (73.1%,   12.9s remaining)    Downloaded 24420352 of 32347736 bytes (75.5%,   11.8s remaining)    Downloaded 25190400 of 32347736 bytes (77.9%,   10.6s remaining)    Downloaded 25968640 of 32347736 bytes (80.3%,    9.5s remaining)    Downloaded 26746880 of 32347736 bytes (82.7%,    8.3s remaining)    Downloaded 27516928 of 32347736 bytes (85.1%,    7.2s remaining)    Downloaded 28295168 of 32347736 bytes (87.5%,    6.1s remaining)    Downloaded 29073408 of 32347736 bytes (89.9%,    4.9s remaining)    Downloaded 29843456 of 32347736 bytes (92.3%,    3.8s remaining)    Downloaded 30621696 of 32347736 bytes (94.7%,    2.6s remaining)    Downloaded 31391744 of 32347736 bytes (97.0%,    1.4s remaining)    Downloaded 32169984 of 32347736 bytes (99.5%,    0.3s remaining) ...done. (59 seconds, 0 min)
    Extracting data from /home/runner/work/nilearn/nilearn/nilearn_data/allen_rsn_2011/5f8f4a26df3a57a30ddc4285d4d5c6c2/download..... done.

    Dataset created in /home/runner/work/nilearn/nilearn/nilearn_data/icbm152_2009

    Downloading data from https://osf.io/7pj92/download ...
    Downloaded 21987328 of 63027871 bytes (34.9%,    1.9s remaining)    Downloaded 37404672 of 63027871 bytes (59.3%,    1.4s remaining)    Downloaded 53886976 of 63027871 bytes (85.5%,    0.5s remaining)    Downloaded 61464576 of 63027871 bytes (97.5%,    0.1s remaining) ...done. (6 seconds, 0 min)
    Extracting data from /home/runner/work/nilearn/nilearn/nilearn_data/icbm152_2009/e05b733c275cab0eec856067143c9dc9/download..... done.
    Downloading data from https://www.fmrib.ox.ac.uk/datasets/brainmap+rsns/bm20.nii.gz ...
    Downloaded 1794048 of 19114114 bytes (9.4%,   10.1s remaining) ...done. (3 seconds, 0 min)




.. GENERATED FROM PYTHON SOURCE LINES 41-42

Visualization

.. GENERATED FROM PYTHON SOURCE LINES 42-60

.. code-block:: default


    # "contours" example
    plotting.plot_prob_atlas(allen.rsn28, title="Allen2011")

    # "continuous" example
    plotting.plot_prob_atlas(
        (icbm["wm"], icbm["gm"], icbm["csf"]), title="ICBM tissues"
    )

    # "filled_contours" example. An optional colorbar can be set.
    plotting.plot_prob_atlas(
        smith_bm20,
        title="Smith2009 20 Brainmap (with colorbar)",
        colorbar=True,
    )

    plotting.show()




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_001.png
         :alt: plot prob atlas
         :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_001.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_002.png
         :alt: plot prob atlas
         :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_002.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_003.png
         :alt: plot prob atlas
         :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_prob_atlas_003.png
         :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /usr/share/miniconda3/envs/testenv/lib/python3.9/site-packages/nilearn/plotting/displays/_axes.py:74: UserWarning: linewidths is ignored by contourf
      im = getattr(ax, type)(




.. GENERATED FROM PYTHON SOURCE LINES 61-121

Other probabilistic atlases accessible with nilearn
---------------------------------------------------

To save build time, the following code is not executed. Try running it
locally to get the same plots as above for each of the listed atlases.

.. code-block:: default

    # Harvard Oxford Atlas
    harvard_oxford = datasets.fetch_atlas_harvard_oxford("cort-prob-2mm")
    harvard_oxford_sub = datasets.fetch_atlas_harvard_oxford("sub-prob-2mm")

    # Smith ICA Atlas and Brain Maps 2009
    smith_rsn10 = datasets.fetch_atlas_smith_2009(
        resting=True, dimension=10
    )["maps"]
    smith_rsn20 = datasets.fetch_atlas_smith_2009(
        resting=True, dimension=20
    )["maps"]
    smith_rsn70 = datasets.fetch_atlas_smith_2009(
        resting=True, dimension=70
    )["maps"]
    smith_bm10 = datasets.fetch_atlas_smith_2009(
        resting=False, dimension=10
    )["maps"]
    smith_bm70 = datasets.fetch_atlas_smith_2009(
        resting=False, dimension=70
    )["maps"]

    # Multi Subject Dictionary Learning Atlas
    msdl = datasets.fetch_atlas_msdl()

    # Pauli subcortical atlas
    subcortex = datasets.fetch_atlas_pauli_2017()

    # Dictionaries of Functional Modes (“DiFuMo”) atlas
    dim = 64
    res = 2
    difumo = datasets.fetch_atlas_difumo(
        dimension=dim, resolution_mm=res, legacy_format=False
    )

    # Visualization
    atlas_types = {
        "Harvard_Oxford": harvard_oxford.maps,
        "Harvard_Oxford sub": harvard_oxford_sub.maps,
        "Smith 2009 10 RSNs": smith_rsn10,
        "Smith2009 20 RSNs": smith_rsn20,
        "Smith2009 70 RSNs": smith_rsn70,
        "Smith2009 10 Brainmap": smith_bm10,
        "Smith2009 70 Brainmap": smith_bm70,
        "MSDL": msdl.maps,
        "Pauli2017 Subcortical Atlas": subcortex.maps,
        f"DiFuMo dimension {dim} resolution {res}": difumo.maps,
    }

    for name, atlas in sorted(atlas_types.items()):
        plotting.plot_prob_atlas(atlas, title=name)

    plotting.show()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (1 minutes 38.544 seconds)

**Estimated memory usage:**  440 MB


.. _sphx_glr_download_auto_examples_01_plotting_plot_prob_atlas.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: binder-badge

      .. image:: images/binder_badge_logo.svg
        :target: https://mybinder.org/v2/gh/nilearn/nilearn/0.10.2?urlpath=lab/tree/notebooks/auto_examples/01_plotting/plot_prob_atlas.ipynb
        :alt: Launch binder
        :width: 150 px



    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: plot_prob_atlas.py <plot_prob_atlas.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: plot_prob_atlas.ipynb <plot_prob_atlas.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
