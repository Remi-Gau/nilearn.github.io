
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/01_plotting/plot_demo_glass_brain_extensive.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_01_plotting_plot_demo_glass_brain_extensive.py>`
        to download the full example code or to run this example in your browser via Binder

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_01_plotting_plot_demo_glass_brain_extensive.py:


Glass brain plotting in nilearn (all options)
=============================================

First part of this example goes through different options of the
:func:`nilearn.plotting.plot_glass_brain` function (including plotting
negative values).

Second part, goes through same options but selected of the same glass brain
function but plotting is seen with contours.

See :ref:`plotting` for more plotting functionalities and
:ref:`Section 4.3 <display_modules>` for more details about display objects
in Nilearn.

Also, see :func:`nilearn.datasets.fetch_neurovault_motor_task` for details
about the plotting data and associated meta-data.

.. GENERATED FROM PYTHON SOURCE LINES 22-29

Retrieve the data
------------------

Nilearn comes with set of functions that download public data from Internet

Let us first see where the data will be downloaded and stored on our disk:


.. GENERATED FROM PYTHON SOURCE LINES 29-32

.. code-block:: default

    from nilearn import datasets
    print('Datasets shipped with nilearn are stored in: %r' % datasets.get_data_dirs())





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Datasets shipped with nilearn are stored in: ['/home/circleci/nilearn_data']




.. GENERATED FROM PYTHON SOURCE LINES 33-35

Let us now retrieve a motor task contrast map
Â corresponding to a group one-sample t-test

.. GENERATED FROM PYTHON SOURCE LINES 35-41

.. code-block:: default


    motor_images = datasets.fetch_neurovault_motor_task()
    stat_img = motor_images.images[0]
    # stat_img is just the name of the file that we downloaded
    stat_img





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    '/home/circleci/nilearn_data/neurovault/collection_658/image_10426.nii.gz'



.. GENERATED FROM PYTHON SOURCE LINES 42-44

Demo glass brain plotting
--------------------------

.. GENERATED FROM PYTHON SOURCE LINES 44-50

.. code-block:: default

    from nilearn import plotting

    # Whole brain sagittal cuts and map is thresholded at 3
    plotting.plot_glass_brain(stat_img, threshold=3)





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_001.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_001.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.OrthoProjector object at 0x7fd9633cc3a0>



.. GENERATED FROM PYTHON SOURCE LINES 51-52

With a colorbar

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default

    plotting.plot_glass_brain(stat_img, threshold=3, colorbar=True)





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_002.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_002.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.OrthoProjector object at 0x7fd9595d9c70>



.. GENERATED FROM PYTHON SOURCE LINES 56-57

Black background, and only the (x, z) cuts

.. GENERATED FROM PYTHON SOURCE LINES 57-61

.. code-block:: default

    plotting.plot_glass_brain(stat_img, title='plot_glass_brain',
                              black_bg=True, display_mode='xz', threshold=3)





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_003.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_003.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.XZProjector object at 0x7fd954b423d0>



.. GENERATED FROM PYTHON SOURCE LINES 62-63

Plotting the sign of the activation with plot_abs to False

.. GENERATED FROM PYTHON SOURCE LINES 63-67

.. code-block:: default

    plotting.plot_glass_brain(stat_img, threshold=0, colorbar=True,
                              plot_abs=False)





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_004.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_004.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.OrthoProjector object at 0x7fd95833af40>



.. GENERATED FROM PYTHON SOURCE LINES 68-69

The sign of the activation and a colorbar

.. GENERATED FROM PYTHON SOURCE LINES 69-73

.. code-block:: default

    plotting.plot_glass_brain(stat_img, threshold=3,
                              colorbar=True, plot_abs=False)





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_005.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_005.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.OrthoProjector object at 0x7fd96979e970>



.. GENERATED FROM PYTHON SOURCE LINES 74-78

Different projections for the left and right hemispheres
---------------------------------------------------------

Hemispheric sagittal cuts

.. GENERATED FROM PYTHON SOURCE LINES 78-82

.. code-block:: default

    plotting.plot_glass_brain(stat_img,
                              title='plot_glass_brain with display_mode="lzr"',
                              black_bg=True, display_mode='lzr', threshold=3)




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_006.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_006.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.LZRProjector object at 0x7fd95c41db20>



.. GENERATED FROM PYTHON SOURCE LINES 83-87

.. code-block:: default

    plotting.plot_glass_brain(stat_img, threshold=0, colorbar=True,
                              title='plot_glass_brain with display_mode="lyrz"',
                              plot_abs=False, display_mode='lyrz')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_007.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_007.png
   :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none


    <nilearn.plotting.displays.LYRZProjector object at 0x7fd95a7fb700>



.. GENERATED FROM PYTHON SOURCE LINES 88-96

Demo glass brain plotting with contours and with fillings
---------------------------------------------------------
To plot maps with contours, we call the plotting function into variable from
which we can use specific display features which are inherited automatically.
In this case, we focus on using add_contours
First, we initialize the plotting function into "display" and first
argument set to None since we want an empty glass brain to plotting the
statistical maps with "add_contours"

.. GENERATED FROM PYTHON SOURCE LINES 96-102

.. code-block:: default

    display = plotting.plot_glass_brain(None)
    # Here, we project statistical maps
    display.add_contours(stat_img)
    # and a title
    display.title('"stat_img" on glass brain without threshold')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_008.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 103-105

Plotting with `filled=True` implies contours with fillings. Here, we are not
specifying levels

.. GENERATED FROM PYTHON SOURCE LINES 105-111

.. code-block:: default

    display = plotting.plot_glass_brain(None)
    # Here, we project statistical maps with filled=True
    display.add_contours(stat_img, filled=True)
    # and a title
    display.title('Same map but with fillings in the contours')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_009.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 112-114

Here, we input specific level (cut-off) in the statistical map. In other way,
we are thresholding our statistical map

.. GENERATED FROM PYTHON SOURCE LINES 114-121

.. code-block:: default


    # Here, we set the threshold using parameter called `levels` with value given
    # in a list and choosing color to Red.
    display = plotting.plot_glass_brain(None)
    display.add_contours(stat_img, levels=[3.], colors='r')
    display.title('"stat_img" on glass brain with threshold')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_010.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 122-123

Plotting with same demonstration but includes now filled=True

.. GENERATED FROM PYTHON SOURCE LINES 123-127

.. code-block:: default

    display = plotting.plot_glass_brain(None)
    display.add_contours(stat_img, filled=True, levels=[3.], colors='r')
    display.title('Same demonstration but using fillings inside contours')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_011.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 128-130

Plotting with black background, `black_bg` should be set with
`plot_glass_brain`

.. GENERATED FROM PYTHON SOURCE LINES 130-136

.. code-block:: default


    # We can set black background using black_bg=True
    display = plotting.plot_glass_brain(None, black_bg=True)
    display.add_contours(stat_img, levels=[3.], colors='g')
    display.title('"stat_img" on glass brain with black background')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_012.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 137-138

Black background plotting with filled in contours

.. GENERATED FROM PYTHON SOURCE LINES 138-142

.. code-block:: default

    display = plotting.plot_glass_brain(None, black_bg=True)
    display.add_contours(stat_img, filled=True, levels=[3.], colors='g')
    display.title('Glass brain with black background and filled in contours')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_013.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_013.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 143-146

Display contour projections in both hemispheres
-------------------------------------------------
Key argument to vary here is `display_mode` for hemispheric plotting

.. GENERATED FROM PYTHON SOURCE LINES 146-152

.. code-block:: default


    # Now, display_mode is chosen as 'lr' for both hemispheric plots
    display = plotting.plot_glass_brain(None, display_mode='lr')
    display.add_contours(stat_img, levels=[3.], colors='r')
    display.title('"stat_img" on glass brain only "l" "r" hemispheres')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_014.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_014.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 153-154

Filled contours in both hemispheric plotting, just by adding filled=True

.. GENERATED FROM PYTHON SOURCE LINES 154-158

.. code-block:: default

    display = plotting.plot_glass_brain(None, display_mode='lr')
    display.add_contours(stat_img, filled=True, levels=[3.], colors='r')
    display.title('Filled contours on glass brain only "l" "r" hemispheres')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_015.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_015.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 159-161

With positive and negative sign of activations with `plot_abs` in
`plot_glass_brain`

.. GENERATED FROM PYTHON SOURCE LINES 161-168

.. code-block:: default


    # By default parameter `plot_abs` is True and sign of activations can be
    # displayed by changing `plot_abs` to False
    display = plotting.plot_glass_brain(None, plot_abs=False, display_mode='lzry')
    display.add_contours(stat_img)
    display.title("Contours with both sign of activations without threshold")




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_016.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_016.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 169-171

Now, adding just filled=True to get positive and negative sign activations
with fillings in the contours

.. GENERATED FROM PYTHON SOURCE LINES 171-176

.. code-block:: default

    display = plotting.plot_glass_brain(None, plot_abs=False, display_mode='lzry')
    display.add_contours(stat_img, filled=True)
    display.title("Filled contours with both sign of activations without threshold")





.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_017.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_017.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 177-179

Displaying both signs (positive and negative) of activations with threshold
meaning thresholding by adding an argument `levels` in add_contours.

.. GENERATED FROM PYTHON SOURCE LINES 179-194

.. code-block:: default


    import numpy as np
    display = plotting.plot_glass_brain(None, plot_abs=False, display_mode='lzry')

    # In add_contours,
    # we give two values through the argument `levels` which corresponds to the
    # thresholds of the contour we want to draw: One is positive and the other one
    # is negative. We give a list of `colors` as argument to associate a different
    # color to each contour. Additionally, we also choose to plot contours with
    # thick line widths, For linewidths one value would be enough so that same
    # value is used for both contours.
    display.add_contours(stat_img, levels=[-2.8, 3.], colors=['b', 'r'],
                         linewidths=4.)
    display.title('Contours with sign of activations with threshold')




.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_018.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_018.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 195-197

Same display demonstration as above but just adding filled=True to get
fillings inside the contours.

.. GENERATED FROM PYTHON SOURCE LINES 197-214

.. code-block:: default


    # Unlike in previous plot, here we specify each sign at a time. We call negative
    # values display first followed by positive values display.

    # First, we fetch our display object with same parameters used as above
    display = plotting.plot_glass_brain(None, plot_abs=False, display_mode='lzry')

    # Second, we plot negative sign of activation with levels given as negative
    # activation value in a list. Upper bound should be kept to -infinity
    display.add_contours(stat_img, filled=True, levels=[-np.inf, -2.8],
                         colors='b')
    # Next, within same plotting object we plot positive sign of activation
    display.add_contours(stat_img, filled=True, levels=[3.], colors='r')
    display.title('Now same plotting but with filled contours')

    # Finally, displaying them
    plotting.show()



.. image-sg:: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_019.png
   :alt: plot demo glass brain extensive
   :srcset: /auto_examples/01_plotting/images/sphx_glr_plot_demo_glass_brain_extensive_019.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  34.826 seconds)

**Estimated memory usage:**  9 MB


.. _sphx_glr_download_auto_examples_01_plotting_plot_demo_glass_brain_extensive.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example


  .. container:: binder-badge

    .. image:: images/binder_badge_logo.svg
      :target: https://mybinder.org/v2/gh/nilearn/nilearn.github.io/main?filepath=examples/auto_examples/01_plotting/plot_demo_glass_brain_extensive.ipynb
      :alt: Launch binder
      :width: 150 px


  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_demo_glass_brain_extensive.py <plot_demo_glass_brain_extensive.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_demo_glass_brain_extensive.ipynb <plot_demo_glass_brain_extensive.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
