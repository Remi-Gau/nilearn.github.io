.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_04_manipulating_images_plot_nifti_simple.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_04_manipulating_images_plot_nifti_simple.py:


Simple example of NiftiMasker use
==================================

Here is a simple example of automatic mask computation using the nifti masker.
The mask is computed and visualized.

Retrieve the NYU test-retest dataset


.. code-block:: default


    from nilearn import datasets
    dataset = datasets.fetch_adhd(n_subjects=1)
    func_filename = dataset.func[0]

    # print basic information on the dataset
    print('First functional nifti image (4D) is at: %s' % func_filename)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    First functional nifti image (4D) is at: /home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz


Compute the mask


.. code-block:: default

    from nilearn.input_data import NiftiMasker

    # As this is raw resting-state EPI, the background is noisy and we cannot
    # rely on the 'background' masking strategy. We need to use the 'epi' one
    nifti_masker = NiftiMasker(standardize=True, mask_strategy='epi',
                               memory="nilearn_cache", memory_level=2,
                               smoothing_fwhm=8)
    nifti_masker.fit(func_filename)
    mask_img = nifti_masker.mask_img_







Visualize the mask


.. code-block:: default

    from nilearn.plotting import plot_roi
    from nilearn.image.image import mean_img

    # calculate mean image for the background
    mean_func_img = mean_img(func_filename)

    plot_roi(mask_img, mean_func_img, display_mode='y', cut_coords=4, title="Mask")





.. image:: /auto_examples/04_manipulating_images/images/sphx_glr_plot_nifti_simple_001.png
    :class: sphx-glr-single-img




Preprocess data with the NiftiMasker


.. code-block:: default

    nifti_masker.fit(func_filename)
    fmri_masked = nifti_masker.transform(func_filename)
    # fmri_masked is now a 2D matrix, (n_voxels x n_time_points)







Run an algorithm


.. code-block:: default

    from sklearn.decomposition import FastICA
    n_components = 10
    ica = FastICA(n_components=n_components, random_state=42)
    components_masked = ica.fit_transform(fmri_masked.T).T







Reverse masking, and display the corresponding map


.. code-block:: default

    components = nifti_masker.inverse_transform(components_masked)

    # Visualize results
    from nilearn.plotting import plot_stat_map, show
    from nilearn.image import index_img

    plot_stat_map(index_img(components, 0), mean_func_img,
                  display_mode='y', cut_coords=4, title="Component 0")

    show()



.. image:: /auto_examples/04_manipulating_images/images/sphx_glr_plot_nifti_simple_002.png
    :class: sphx-glr-single-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  8.024 seconds)


.. _sphx_glr_download_auto_examples_04_manipulating_images_plot_nifti_simple.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_nifti_simple.py <plot_nifti_simple.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_nifti_simple.ipynb <plot_nifti_simple.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
