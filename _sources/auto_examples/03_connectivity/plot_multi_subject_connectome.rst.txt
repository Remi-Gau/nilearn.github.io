.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download_auto_examples_03_connectivity_plot_multi_subject_connectome.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_03_connectivity_plot_multi_subject_connectome.py:


Group Sparse inverse covariance for multi-subject connectome
=============================================================

This example shows how to estimate a connectome on a group of subjects
using the group sparse inverse covariance estimate.



.. code-block:: default

    import numpy as np

    from nilearn import plotting

    n_subjects = 4  # subjects to consider for group-sparse covariance (max: 40)


    def plot_matrices(cov, prec, title, labels):
        """Plot covariance and precision matrices, for a given processing. """

        prec = prec.copy()  # avoid side effects

        # Put zeros on the diagonal, for graph clarity.
        size = prec.shape[0]
        prec[list(range(size)), list(range(size))] = 0
        span = max(abs(prec.min()), abs(prec.max()))

        # Display covariance matrix
        plotting.plot_matrix(cov, cmap=plotting.cm.bwr,
                             vmin=-1, vmax=1, title="%s / covariance" % title,
                             labels=labels)
        # Display precision matrix
        plotting.plot_matrix(prec, cmap=plotting.cm.bwr,
                             vmin=-span, vmax=span, title="%s / precision" % title,
                             labels=labels)








Fetching datasets
------------------


.. code-block:: default

    from nilearn import datasets
    msdl_atlas_dataset = datasets.fetch_atlas_msdl()
    adhd_dataset = datasets.fetch_adhd(n_subjects=n_subjects)

    # print basic information on the dataset
    print('First subject functional nifti image (4D) is at: %s' %
          adhd_dataset.func[0])  # 4D data






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    First subject functional nifti image (4D) is at: /home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz


Extracting region signals
--------------------------


.. code-block:: default

    from nilearn import image
    from nilearn import input_data

    # A "memory" to avoid recomputation
    from sklearn.externals.joblib import Memory
    mem = Memory('nilearn_cache')

    masker = input_data.NiftiMapsMasker(
        msdl_atlas_dataset.maps, resampling_target="maps", detrend=True,
        low_pass=None, high_pass=0.01, t_r=2.5, standardize=True,
        memory='nilearn_cache', memory_level=1, verbose=2)
    masker.fit()

    subject_time_series = []
    func_filenames = adhd_dataset.func
    confound_filenames = adhd_dataset.confounds
    for func_filename, confound_filename in zip(func_filenames,
                                                confound_filenames):
        print("Processing file %s" % func_filename)

        # Computing some confounds
        hv_confounds = mem.cache(image.high_variance_confounds)(
            func_filename)

        region_ts = masker.transform(func_filename,
                                     confounds=[hv_confounds, confound_filename])
        subject_time_series.append(region_ts)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [NiftiMapsMasker.fit] loading regions from /home/kshitij/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii
    Processing file /home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz')
    __________________________________________high_variance_confounds - 2.4s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.input_data.base_masker.filter_and_extract...
    filter_and_extract('/home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz', 
    <nilearn.input_data.nifti_maps_masker._ExtractionFunctor object at 0x7fc0749f9240>, 
    { 'allow_overlap': True,
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'low_pass': None,
      'maps_img': '/home/kshitij/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'smoothing_fwhm': None,
      'standardize': True,
      't_r': 2.5,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[-0.018014, ..., -0.103569],
           ...,
           [ 0.001785, ...,  0.031497]], dtype=float32),
      '/home/kshitij/nilearn_data/adhd/data/0010042/0010042_regressors.csv'], dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=2)
    [NiftiMapsMasker.transform_single_imgs] Loading data from /home/kshitij/nilearn_data/adhd/data/0010042/0010042_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.transform_single_imgs] Resampling images
    [NiftiMapsMasker.transform_single_imgs] Extracting region signals
    [NiftiMapsMasker.transform_single_imgs] Cleaning extracted signals
    _______________________________________________filter_and_extract - 6.7s, 0.1min
    Processing file /home/kshitij/nilearn_data/adhd/data/0010064/0010064_rest_tshift_RPI_voreg_mni.nii.gz
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/kshitij/nilearn_data/adhd/data/0010064/0010064_rest_tshift_RPI_voreg_mni.nii.gz')
    __________________________________________high_variance_confounds - 2.1s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.input_data.base_masker.filter_and_extract...
    filter_and_extract('/home/kshitij/nilearn_data/adhd/data/0010064/0010064_rest_tshift_RPI_voreg_mni.nii.gz', 
    <nilearn.input_data.nifti_maps_masker._ExtractionFunctor object at 0x7fc0749f9240>, 
    { 'allow_overlap': True,
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'low_pass': None,
      'maps_img': '/home/kshitij/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'smoothing_fwhm': None,
      'standardize': True,
      't_r': 2.5,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[-0.129865, ..., -0.043024],
           ...,
           [-0.03078 , ..., -0.122373]], dtype=float32),
      '/home/kshitij/nilearn_data/adhd/data/0010064/0010064_regressors.csv'], dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=2)
    [NiftiMapsMasker.transform_single_imgs] Loading data from /home/kshitij/nilearn_data/adhd/data/0010064/0010064_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.transform_single_imgs] Resampling images
    [NiftiMapsMasker.transform_single_imgs] Extracting region signals
    [NiftiMapsMasker.transform_single_imgs] Cleaning extracted signals
    _______________________________________________filter_and_extract - 6.2s, 0.1min
    Processing file /home/kshitij/nilearn_data/adhd/data/0010128/0010128_rest_tshift_RPI_voreg_mni.nii.gz
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/kshitij/nilearn_data/adhd/data/0010128/0010128_rest_tshift_RPI_voreg_mni.nii.gz')
    __________________________________________high_variance_confounds - 2.1s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.input_data.base_masker.filter_and_extract...
    filter_and_extract('/home/kshitij/nilearn_data/adhd/data/0010128/0010128_rest_tshift_RPI_voreg_mni.nii.gz', 
    <nilearn.input_data.nifti_maps_masker._ExtractionFunctor object at 0x7fc060b5d048>, 
    { 'allow_overlap': True,
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'low_pass': None,
      'maps_img': '/home/kshitij/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'smoothing_fwhm': None,
      'standardize': True,
      't_r': 2.5,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[0.017256, ..., 0.040763],
           ...,
           [0.024104, ..., 0.018105]], dtype=float32),
      '/home/kshitij/nilearn_data/adhd/data/0010128/0010128_regressors.csv'], dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=2)
    [NiftiMapsMasker.transform_single_imgs] Loading data from /home/kshitij/nilearn_data/adhd/data/0010128/0010128_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.transform_single_imgs] Resampling images
    [NiftiMapsMasker.transform_single_imgs] Extracting region signals
    [NiftiMapsMasker.transform_single_imgs] Cleaning extracted signals
    _______________________________________________filter_and_extract - 6.3s, 0.1min
    Processing file /home/kshitij/nilearn_data/adhd/data/0021019/0021019_rest_tshift_RPI_voreg_mni.nii.gz
    ________________________________________________________________________________
    [Memory] Calling nilearn.image.image.high_variance_confounds...
    high_variance_confounds('/home/kshitij/nilearn_data/adhd/data/0021019/0021019_rest_tshift_RPI_voreg_mni.nii.gz')
    __________________________________________high_variance_confounds - 2.3s, 0.0min
    ________________________________________________________________________________
    [Memory] Calling nilearn.input_data.base_masker.filter_and_extract...
    filter_and_extract('/home/kshitij/nilearn_data/adhd/data/0021019/0021019_rest_tshift_RPI_voreg_mni.nii.gz', 
    <nilearn.input_data.nifti_maps_masker._ExtractionFunctor object at 0x7fc060bd4668>, 
    { 'allow_overlap': True,
      'detrend': True,
      'dtype': None,
      'high_pass': 0.01,
      'low_pass': None,
      'maps_img': '/home/kshitij/nilearn_data/msdl_atlas/MSDL_rois/msdl_rois.nii',
      'mask_img': None,
      'smoothing_fwhm': None,
      'standardize': True,
      't_r': 2.5,
      'target_affine': array([[   4.,    0.,    0.,  -78.],
           [   0.,    4.,    0., -111.],
           [   0.,    0.,    4.,  -51.],
           [   0.,    0.,    0.,    1.]]),
      'target_shape': (40, 48, 35)}, confounds=[ array([[ 0.038218, ..., -0.021777],
           ...,
           [ 0.063512, ...,  0.081868]], dtype=float32),
      '/home/kshitij/nilearn_data/adhd/data/0021019/0021019_regressors.csv'], dtype=None, memory=Memory(location=nilearn_cache/joblib), memory_level=1, verbose=2)
    [NiftiMapsMasker.transform_single_imgs] Loading data from /home/kshitij/nilearn_data/adhd/data/0021019/0021019_rest_tshift_RPI_voreg_mni.nii.gz
    [NiftiMapsMasker.transform_single_imgs] Resampling images
    [NiftiMapsMasker.transform_single_imgs] Extracting region signals
    [NiftiMapsMasker.transform_single_imgs] Cleaning extracted signals
    _______________________________________________filter_and_extract - 6.1s, 0.1min


Computing group-sparse precision matrices
------------------------------------------


.. code-block:: default

    from nilearn.connectome import GroupSparseCovarianceCV
    gsc = GroupSparseCovarianceCV(verbose=2)
    gsc.fit(subject_time_series)

    from sklearn import covariance
    gl = covariance.GraphLassoCV(verbose=2)
    gl.fit(np.concatenate(subject_time_series))






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 6
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 1
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  1 out of 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 5
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 7
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  2 out of 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 5
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 2
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 7
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 3
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  3 out of 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 4
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 3
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 9
    [GroupSparseCovarianceCV.fit] Log-likelihood on test set is decreasing. Stopping at iteration 0
    [GroupSparseCovarianceCV.fit] [GroupSparseCovarianceCV] Done refinement  4 out of 4
    [GroupSparseCovarianceCV.fit] Final optimization
    [GroupSparseCovarianceCV.fit] tolerance reached at iteration number 15: 8.062e-04
    [GraphicalLassoCV] Done refinement  1 out of 4:   0s
    [GraphicalLassoCV] Done refinement  2 out of 4:   0s
    [GraphicalLassoCV] Done refinement  3 out of 4:   0s
    [GraphicalLassoCV] Done refinement  4 out of 4:   0s
    [graphical_lasso] Iteration   0, cost  1.71e+02, dual gap 7.821e-01
    [graphical_lasso] Iteration   1, cost  1.71e+02, dual gap 6.951e-03
    [graphical_lasso] Iteration   2, cost  1.71e+02, dual gap 2.503e-04
    [graphical_lasso] Iteration   3, cost  1.71e+02, dual gap 1.422e-04
    [graphical_lasso] Iteration   4, cost  1.71e+02, dual gap 9.557e-05


Displaying results
-------------------


.. code-block:: default

    atlas_img = msdl_atlas_dataset.maps
    atlas_region_coords = plotting.find_probabilistic_atlas_cut_coords(atlas_img)
    labels = msdl_atlas_dataset.labels

    plotting.plot_connectome(gl.covariance_,
                             atlas_region_coords, edge_threshold='90%',
                             title="Covariance",
                             display_mode="lzr")
    plotting.plot_connectome(-gl.precision_, atlas_region_coords,
                             edge_threshold='90%',
                             title="Sparse inverse covariance (GraphLasso)",
                             display_mode="lzr",
                             edge_vmax=.5, edge_vmin=-.5)
    plot_matrices(gl.covariance_, gl.precision_, "GraphLasso", labels)

    title = "GroupSparseCovariance"
    plotting.plot_connectome(-gsc.precisions_[..., 0],
                             atlas_region_coords, edge_threshold='90%',
                             title=title,
                             display_mode="lzr",
                             edge_vmax=.5, edge_vmin=-.5)
    plot_matrices(gsc.covariances_[..., 0],
                  gsc.precisions_[..., 0], title, labels)

    plotting.show()



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_003.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_004.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_005.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_006.png
            :class: sphx-glr-multi-img

    *

      .. image:: /auto_examples/03_connectivity/images/sphx_glr_plot_multi_subject_connectome_007.png
            :class: sphx-glr-multi-img





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  0.023 seconds)


.. _sphx_glr_download_auto_examples_03_connectivity_plot_multi_subject_connectome.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_multi_subject_connectome.py <plot_multi_subject_connectome.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_multi_subject_connectome.ipynb <plot_multi_subject_connectome.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
